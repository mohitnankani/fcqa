{"version":3,"file":"employee-profile.js","sources":["../../dependency-sets/employee-profile/helpers/ssEmployeeModelHlp/employee-model.js","../../dependency-sets/employee-profile/components/super-two-column-list/two-column-list.js","../../dependency-sets/employee-profile/components/super-supervisors/supervisors.js","../../dependency-sets/employee-profile/components/super-supervisor/supervisor.js","../../dependency-sets/employee-profile/components/super-status-item/status-item.js","../../dependency-sets/employee-profile/components/super-status-group/status-group.js","../../dependency-sets/employee-profile/components/super-phone-list/phone-list.js","../../dependency-sets/employee-profile/components/super-phone/phone.js","../../dependency-sets/employee-profile/components/super-personnel-documents/personnel-documents.js","../../dependency-sets/employee-profile/components/super-personal-info-new/personal-info-new.js","../../dependency-sets/employee-profile/components/super-personal-info/personal-info.js","../../dependency-sets/employee-profile/components/super-medical-documents/medical-documents.js","../../dependency-sets/employee-profile/components/super-input-ssn/input-ssn.js","../../dependency-sets/employee-profile/components/super-employment-info/employment-info.js","../../dependency-sets/employee-profile/components/super-emergency-contact/emergency-contact.js","../../dependency-sets/employee-profile/components/super-document-editor/document-editor.js","../../dependency-sets/employee-profile/components/super-credentials-list/credentials-list.js","../../dependency-sets/employee-profile/components/super-credentials-cntr/credentials-cntr.js","../../dependency-sets/employee-profile/components/super-credential-status/credential-status.js","../../dependency-sets/employee-profile/components/super-credential-files/credential-files.js","../../dependency-sets/employee-profile/components/super-credential-add-edit/credential-add-edit.js","../../dependency-sets/employee-profile/components/super-credential/credential.js","../../dependency-sets/employee-profile/components/super-assignment-list/assignment-list.js","../../dependency-sets/employee-profile/components/super-assignment-details/assignment-details.js","../../dependency-sets/employee-profile/components/super-assignment/assignment.js","../../dependency-sets/employee-profile/components/super-address-list/address-list.js","../../dependency-sets/employee-profile/helpers/ssOptionalFieldGroupHlp/optional-field-group.js","../../dependency-sets/employee-profile/helpers/ssSleepHlp/sleep.js","../../.ðŸ’©/dependency-sets/employee-profile/templates.js","../../src/config/base-component.js"],"sourcesContent":["// #-------------------------------------# //\r\n// #---- Helper (ssEmployeeModelHlp) ----# //\r\n\r\n/*@ngInject*/\r\nfunction ssEmployeeModelHlp(ssEnum, ssArrayHlp, ssJsonApiHlp, ssValidationHlp, ssDateHlp, ssDateByOrgHlp, ssMultiInitiativeFeatureDetectorCCSvc) {\r\n\treturn {\r\n\t\tnewAddress,\r\n\t\tnextDay,\r\n\t\tpreSave,\r\n\t\tprocessDates,\r\n\t\tsetupEmployee,\r\n\t\tvalidator: {\r\n\t\t\temail: ssValidationHlp.email(),\r\n\t\t\texternalId: ssValidationHlp.string({ required: !ssMultiInitiativeFeatureDetectorCCSvc.isHRMSEnabled(), maxLength: 100 }), // required only for non-HRMS\r\n\t\t\tphone: ssValidationHlp.phone(),\r\n\t\t\trequired: ssValidationHlp.required(),\r\n\t\t\tssn: ssValidationHlp.ssn(),\r\n\t\t\tzip: ssValidationHlp.zip(),\r\n\t\t\teducatorId: ssValidationHlp.string({ maxLength: 100 }),\r\n\t\t},\r\n\t\tloadEmployee,\r\n\t\tloadEmergencyContacts,\r\n\t\tcleanEmployeeForSave,\r\n\t};\r\n\r\n\tfunction setupEmployee(employee) {\r\n\t\tcleanEmployeeForSave(employee);\r\n\r\n\t\t// create objects the form fields can use to access the employee fields\r\n\t\tloadAddress(employee);\r\n\t\tloadEmails(employee);\r\n\r\n\t\tdetectOrgPersonSyncIssues(employee);\r\n\t}\r\n\r\n\t/**\r\n\t * Simply takes the employee sets up json api defaults\r\n\t *\r\n\t * @param {Object} emp\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction loadEmployee(emp) {\r\n\t\tconst defaults = {\r\n\t\t\t_firstName: '',\r\n\t\t\t_middleName: '',\r\n\t\t\t_lastName: '',\r\n\t\t\t_aliasFirstName: '',\r\n\t\t\t_aliasMiddleName: '',\r\n\t\t\t_aliasLastName: '',\r\n\t\t\t_sSN: '',\r\n\t\t\t_externalId: '',\r\n\t\t\t_stateEducatorId: '',\r\n\t\t\t// Defaulting retirementSystem to an object so that we know it came in as a null and we can properly test for a value so that the\r\n\t\t\t//\tssApiSvc can detect changes on the object properties vs the object.  Partly due to the save interrupter,\r\n\t\t\t//\tbut also (presumably) an issue with how jsonApi manages changes in the SuperSuit.\r\n\t\t\t_retirementSystem: { id: -1, name: '' }\r\n\t\t};\r\n\r\n\t\tssJsonApiHlp.setFieldDefaultValues(emp, defaults);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction loadEmergencyContacts(emp) {\r\n\t\tconst base = {\r\n\t\t\t_isPrimary: false,\r\n\t\t\t_relationshipType: -1,\r\n\t\t\t_contactName: null,\r\n\t\t\t_primaryPhone: null,\r\n\t\t\t_alternatePhone: null\r\n\t\t};\r\n\r\n\t\t// jsonApi defaults\r\n\t\tconst defaults = {\r\n\t\t\t_contactName: '',\r\n\t\t\t_primaryPhone: '',\r\n\t\t\t_alternatePhone: ''\r\n\t\t};\r\n\r\n\t\tvar added = false;\r\n\r\n\t\tlet contacts = emp._emergencyContacts;\r\n\r\n\t\tif (contacts.length === 0) {\r\n\t\t\tcontacts.push(angular.extend({}, base));\r\n\t\t\tcontacts.push(angular.extend({}, base));\r\n\t\t\tcontacts[0]._isPrimary = true;\r\n\r\n\t\t\tadded = true;\r\n\t\t} else if (contacts.length === 1) {\r\n\t\t\tcontacts.push(angular.extend({}, base));\r\n\t\t\tcontacts[1]._isPrimary = !contacts[0]._isPrimary;\r\n\r\n\t\t\tadded = true;\r\n\t\t}\r\n\r\n\t\temp.primaryEmergencyContact = contacts.find(c => c._isPrimary);\r\n\t\temp.secondaryEmergencyContact = contacts.find(c => !c._isPrimary);\r\n\r\n\t\tssJsonApiHlp.setFieldDefaultValues(emp.primaryEmergencyContact, defaults);\r\n\t\tssJsonApiHlp.setFieldDefaultValues(emp.secondaryEmergencyContact, defaults);\r\n\r\n\t\treturn added;\r\n\t}\r\n\r\n\tfunction loadEmails(emp) {\r\n\t\tif (emp._emails == null) {\r\n\t\t\temp._emails = [];\r\n\t\t}\r\n\r\n\t\tconst base = {\r\n\t\t\t_isPrimary: false,\r\n\t\t\t_emailAddress: null,\r\n\t\t\t_emailType: null\r\n\t\t};\r\n\r\n\t\t// jsonApi defaults\r\n\t\tconst defaults = {\r\n\t\t\t_emailAddress: '',\r\n\t\t\t_emailType: ''\r\n\t\t};\r\n\r\n\t\tlet added = false;\r\n\r\n\t\temp.workEmail = getEmail(emp, 'work');\r\n\t\temp.personalEmail = getEmail(emp, 'personal');\r\n\r\n\t\tssJsonApiHlp.setFieldDefaultValues(emp.workEmail, defaults);\r\n\t\tssJsonApiHlp.setFieldDefaultValues(emp.personalEmail, defaults);\r\n\r\n\t\treturn added;\r\n\r\n\t\tfunction getEmail(emp2, type) {\r\n\t\t\tlet emails = [...emp2._emails];\r\n\r\n\t\t\tlet email = ssArrayHlp.findWhere(\r\n\t\t\t\temails, { '_emailType': ssEnum.usageType.byName(type) }\r\n\t\t\t);\r\n\t\t\tif (email == null) {\r\n\t\t\t\temail = angular.extend({}, base);\r\n\t\t\t\temail._emailType = ssEnum.usageType.byName(type);\r\n\t\t\t\temails.push(email);\r\n\t\t\t\tadded = true;\r\n\t\t\t}\r\n\r\n\t\t\treturn email;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up json api defaults\r\n\t *\r\n\t * @param {Object} emp\r\n\t *\r\n\t * @return {Boolean} false\r\n\t */\r\n\tfunction loadAddress(emp) {\r\n\t\tif (emp._addresses == null) {\r\n\t\t\temp._addresses = [];\r\n\t\t}\r\n\r\n\t\t// jsonApi defaults\r\n\t\tconst defaults = {\r\n\t\t\t_street1: '',\r\n\t\t\t_street2: '',\r\n\t\t\t_city: '',\r\n\t\t\t_state: '',\r\n\t\t\t_zip: ''\r\n\t\t};\r\n\r\n\t\tif (emp._addresses.length > 0) {\r\n\t\t\tfor (let i = 0; i < emp._addresses.length; i++) {\r\n\t\t\t\tssJsonApiHlp.setFieldDefaultValues(emp._addresses[i], defaults);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Clean out empty/invalid emails, phones numbers, and emergency contacts\r\n\t * <ul>\r\n\t * <li>Clear email array of empty objects</li>\r\n\t * <li>Clear phone number array of empty objects</li>\r\n\t * <li>Clear emergency contacts of empty objects</li>\r\n\t * </ul>\r\n\t */\r\n\tfunction cleanEmployeeForSave(emp) {\r\n\t\tif (emp._emails) { clearEmpty(emp._emails, '_emailAddress'); }\r\n\t\tif (emp._phoneNumbers) { clearEmpty(emp._phoneNumbers, '_number'); }\r\n\t\tif (emp._emergencyContacts) { clearEmpty(emp._emergencyContacts, '_contactName'); }\r\n\t}\r\n\r\n\t/**\r\n\t * Clears empty objects based on the test from the arr.\r\n\t *\r\n\t * @param {Array} arr Array of objects to test against.\r\n\t * @param {String} test Field of the object in the array to test emptiness\r\n\t * @param {Function} test Function passed to the arr.filter\r\n\t *\r\n\t * @return {Boolean} true if the arr was modified. false otherwise.\r\n\t */\r\n\tfunction clearEmpty(arr, test) {\r\n\t\t// nothing to examine; get out of here\r\n\t\tif (!arr.length) { return false; }\r\n\r\n\t\tlet testFn;\r\n\r\n\t\tif (typeof test === 'string') {\r\n\t\t\ttestFn = (e => e[test] != null && e[test].trim().length);\r\n\t\t} else if (typeof test === 'function') {\r\n\t\t\ttestFn = test;\r\n\t\t} else {\r\n\t\t\t// default to returning everything\r\n\t\t\ttestFn = e => true;\r\n\t\t}\r\n\r\n\t\t// array of valid objects\r\n\t\tlet clean = arr.filter(testFn);\r\n\r\n\t\t// no invalid objects\r\n\t\tif (clean.length === arr.length) { return false; }\r\n\r\n\t\t// clear the source array\r\n\t\tarr.length = 0;\r\n\r\n\t\t// no valid objects\r\n\t\tif (!clean.length) { return true; }\r\n\r\n\t\t// add the valid objects back in\r\n\t\tclean.forEach(e => arr.push(e));\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up the employee object to be saved.\r\n\t *\r\n\t * @param {Object} employee\r\n\t */\r\n\tfunction preSave(employee) {\r\n\t\tcleanEmployeeForSave(employee);\r\n\t}\r\n\r\n\t/**\r\n\t * Only used in personal-info-old and can be removed when that is removed.\r\n\t *\r\n\t * @param {Object} address\r\n\t * @param {Object} employee Deprecated. Can pass in null.\r\n\t * @param {Object} org\r\n\t *\r\n\t * @return {Object}\r\n\t */\r\n\tfunction processDates(address, employee, org) {\r\n\t\tvar fromDate = ssDateByOrgHlp.utcIsoToRelativeMoment(address._from, org);\r\n\t\tvar toDate = ssDateByOrgHlp.utcIsoToRelativeMoment(address._to, org);\r\n\t\tif (ssDateHlp.isForeverPast(address._from)) {\r\n\t\t\taddress.startDateTxt = '';\r\n\t\t} else {\r\n\t\t\taddress.startDateTxt = fromDate.format('MM/DD/YYYY');\r\n\t\t}\r\n\r\n\t\tif (ssDateHlp.isForeverFuture(address._to)) {\r\n\t\t\taddress.endDateTxt = '';\r\n\t\t} else {\r\n\t\t\taddress.endDateTxt = toDate.format('MM/DD/YYYY');\r\n\t\t}\r\n\t\taddress.hasAddressInformation = !(address._street1 || address._city || address._state || address._zip);\r\n\t\treturn address;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new address\r\n\t *\r\n\t * @return {Object}\r\n\t */\r\n\tfunction newAddress(addresses, org) {\r\n\t\tlet latestAddress = getLatestAddress(addresses);\r\n\t\treturn {\r\n\t\t\t_from: (latestAddress) ? nextDay(latestAddress._from, org).toISOString() : ssDateHlp.foreverPastString,\r\n\t\t\t_to: ssDateHlp.foreverFutureString,\r\n\t\t\t_addressType: 0,\r\n\t\t\t_isPrimary: true,\r\n\t\t\t_street1: null,\r\n\t\t\t_street2: null,\r\n\t\t\t_city: null,\r\n\t\t\t_state: null,\r\n\t\t\t_zip: null,\r\n\t\t\t_countryCode: null\r\n\t\t};\r\n\t}\r\n\r\n\tfunction nextDay(serverFromDate, org) {\r\n\t\tlet date = ssDateByOrgHlp.utcIsoToRelativeMoment(serverFromDate, org);\r\n\t\treturn date.clone().add(1, 'days');\r\n\t}\r\n\r\n\tfunction getLatestAddress(addresses) {\r\n\t\tconst sorted = addresses.sort((a, b) => { return new Date(b._to) - new Date(a._to); });\r\n\t\treturn sorted[0];\r\n\t}\r\n\r\n\tfunction detectOrgPersonSyncIssues(employee){\r\n\t\temployee.hasPlatformSyncIssue = false;\r\n\r\n\t\tssMultiInitiativeFeatureDetectorCCSvc.isGlobalFcSharedEmployeeEnabled()\r\n\t\t\t.then(isEnabled => {\r\n\r\n\t\t\t\tif(!isEnabled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!employee._orgPersonCreated){\r\n\t\t\t\t\temployee.platformSyncMessage = `This employee is not connected to the platform.`;\r\n\t\t\t\t\temployee.hasPlatformSyncIssue = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!employee._orgPersonUpdated){\r\n\t\t\t\t\temployee.platformSyncMessage = `This employeeâ€™s data is out of sync.`;\r\n\t\t\t\t\temployee.hasPlatformSyncIssue = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(employee._canonicalEmployeeEventsOutOfSync){\r\n\t\t\t\t\temployee.platformSyncMessage = `This employeeâ€™s data may be out of sync.`;\r\n\t\t\t\t\temployee.hasPlatformSyncIssue = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n}\r\n// #-- END Helper (ssEmployeeModelHlp) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('super-suit-helpers').factory('ssEmployeeModelHlp', ssEmployeeModelHlp);\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (super-two-column-list) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@'\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {\r\n\ttransclude: true\r\n};\r\n\r\n/*@ngInject*/\r\nfunction twoColumnList() {\r\n\r\n\tclass TwoColumnList extends Component {\r\n\t\t/*@ngInject*/\r\n\r\n\t\tcontroller($scope) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tlabel: $scope.label,\r\n\t\t\t\thasLabel: !!$scope.label\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn new TwoColumnList(props, 'two-column-list', config);\r\n}\r\n\r\n// #-- END Component (super-two-column-list) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superTwoColumnList', twoColumnList);\r\n","import { Component } from 'base-component';\r\n// #---------------------------------------# //\r\n// #---- Component (super-supervisors) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployee: '=',\r\n\teditMode: '=',\r\n\torg: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction supervisors() {\r\n\tclass Supervisors extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssDateHlp, ssDateByOrgHlp) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tcanEdit: $scope.employee.$permitted.props.supervisor.edit,\r\n\t\t\t\tcanView: $scope.employee.$permitted.props.supervisor.view,\r\n\t\t\t\texpanded: false,\r\n\t\t\t\tnewSupervisor: null,\r\n\t\t\t\torg: $scope.org,\r\n\t\t\t};\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\taddNewSupervisor() {\r\n\t\t\t\t\tlet _latestSupervisor = getLatestSupervisor($scope.employee._supervisors);\r\n\t\t\t\t\tlet _newSupervisor = newSupervisorObj(_latestSupervisor);\r\n\t\t\t\t\tvm.newSupervisor = _newSupervisor;\r\n\t\t\t\t\t$scope.employee._supervisors.push(_newSupervisor);\r\n\t\t\t\t},\r\n\t\t\t\ttoggle() {\r\n\t\t\t\t\tvm.expanded = !vm.expanded;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction load() {\r\n\t\t\t\tvm.editMode = $scope.editMode === true;\r\n\t\t\t\t// force view mode if we don't have edit permissions\r\n\t\t\t\tif (!$scope.employee.$permitted.props.supervisor.edit) {\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.newSupervisor = null;\r\n\r\n\t\t\t\t// if we have an id it is not new. reset the isNew state\r\n\t\t\t\t$scope.employee._supervisors.filter(s => s.isNew && s.id).forEach(s => s.isNew = false);\r\n\r\n\t\t\t\tif ($scope.employee._supervisors == null) { $scope.employee._supervisors = []; }\r\n\r\n\t\t\t\tvar sups = $scope.employee._supervisors.filter(s => !s.isNew);\r\n\r\n\t\t\t\tvm.futureSupervisors = sups.filter(x => ssDateByOrgHlp.isInFuture({ obj: x, fromProp: '_from', toProp: '_to', org: vm.org })).sort((a, b) => { return new Date(b._from) - new Date(a._from); });\r\n\t\t\t\tvm.currentSupervisor = sups.find(x => ssDateByOrgHlp.isCurrent({ obj: x, fromProp: '_from', toProp: '_to', org: vm.org }));\r\n\t\t\t\tvm.pastSupervisors = sups.filter(x => ssDateByOrgHlp.isInPast({ obj: x, fromProp: '_from', toProp: '_to', org: vm.org })).sort((a, b) => { return new Date(b._from) - new Date(a._from); });\r\n\t\t\t}\r\n\r\n\t\t\tfunction getLatestSupervisor(sups) {\r\n\t\t\t\tconst sortedSupervisors = sups.sort((a, b) => { return new Date(b._to) - new Date(a._to); });\r\n\t\t\t\treturn sortedSupervisors[0];\r\n\t\t\t}\r\n\r\n\t\t\tfunction nextDay(serverFromDate) {\r\n\t\t\t\tlet startDate = ssDateByOrgHlp.utcIsoToRelativeMoment(serverFromDate, vm.org);\r\n\t\t\t\treturn startDate.clone().add(1, 'days').startOf('day');\r\n\t\t\t}\r\n\r\n\t\t\tfunction newSupervisorObj(supervisor) {\r\n\t\t\t\tlet from;\r\n\t\t\t\tif (supervisor) {\r\n\t\t\t\t\tfrom = ssDateHlp.isForeverFuture(supervisor._to) ? nextDay(supervisor._from) : nextDay(supervisor._to);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfrom = ssDateByOrgHlp.todaysStartRelativeTo(vm.org);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t_from: from.toISOString(),\r\n\t\t\t\t\t_to: ssDateHlp.foreverFuture(),\r\n\t\t\t\t\t_employeeId: null,\r\n\t\t\t\t\tisNew: true,\r\n\t\t\t\t\thasForeverPast: false,\r\n\t\t\t\t\tminAllowedDate: supervisor ? from : null\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Supervisors(props, 'supervisors', config);\r\n}\r\n\r\n// #-- END Component (super-supervisors) --# //\r\n// #---------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superSupervisors', supervisors);\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------# //\r\n// #---- Component (super-supervisor) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tsupervisor: '=',\r\n\temployee: '=',\r\n\teditMode: '=',\r\n\torg: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction supervisor() {\r\n\tclass Supervisor extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, moment, ssDateHlp, ssValidationHlp, ssDateByOrgHlp) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst org = $scope.org;\r\n\t\t\t$scope.validator = $scope.validator = {\r\n\t\t\t\trequired: ssValidationHlp.required()\r\n\t\t\t};\r\n\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tisNewSupervisor: $scope.supervisor.isNew || false,\r\n\t\t\t\tpermitted: $scope.employee.$permitted.props,\r\n\t\t\t\tsupervisorHolder: [],\r\n\t\t\t\tdtPickerOpt: {\r\n\t\t\t\t\tminDate: ($scope.supervisor.minAllowedDate) ? new Date($scope.supervisor.minAllowedDate.format('MM/DD/YYYY')) : null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction load(){\r\n\t\t\t\tvm.startDateTxt = ssDateByOrgHlp.utcIsoToRelativeMoment($scope.supervisor._from, org).format('MM/DD/YYYY');\r\n\t\t\t\tvm.endDateTxt = ssDateHlp.isForeverFuture($scope.supervisor._to) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment($scope.supervisor._to, org).format('MM/DD/YYYY');\r\n\t\t\t};\r\n\r\n\t\t\t$scope.$watch('employee', load);\r\n\r\n\t\t\t$scope.$watch('supervisor', (nv, ov) => {\r\n\t\t\t\tif (nv) {\r\n\t\t\t\t\t$scope.supervisor.fullName = `${nv._firstName} ${nv._lastName}`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.supervisorHolder[0].id', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (nv === undefined) { nv = null; }\r\n\t\t\t\t$scope.supervisor._employeeId = nv;\r\n\t\t\t});\r\n\t\t\t$scope.$watch('supervisor._employeeId', (nv, ov) => {\r\n\t\t\t\tif (!nv) { return; }\r\n\t\t\t\tvm.supervisorHolder = [{ id: nv, fullName: `${$scope.supervisor._firstName} ${$scope.supervisor._lastName}` }];\r\n\t\t\t});\r\n\t\t\t$scope.$watch('vm.startDateTxt', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (!(nv instanceof Date)) { return; }\r\n\t\t\t\t$scope.supervisor._from = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), org);\r\n\t\t\t});\r\n\t\t\t$scope.$watch('vm.endDateTxt', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (nv === null) {\r\n\t\t\t\t\t$scope.supervisor._to = ssDateHlp.foreverFuture();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$scope.supervisor._to = ssDateByOrgHlp.endOfDayRelativeTo(moment(nv), org);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tremoveSupervisor: sup => {\r\n\t\t\t\t\tvar index = $scope.employee._supervisors.findIndex(s => s.id === sup.id);\r\n\t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\t$scope.employee._supervisors.splice(index, 1);\r\n\t\t\t\t\t\t$scope.supervisor = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tvalidateNewSupervisor(supervisors) {\r\n\t\t\t\t\tif (supervisors == null) { return true; }\r\n\t\t\t\t\tif (!supervisors.length) { return 'Supervisor is required'; }\r\n\t\t\t\t\tvar sup = supervisors[0];\r\n\t\t\t\t\tvar currentSupervisor = $scope.employee._supervisors\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\tFilter out the new supervisor because component push the new id first on the object and\r\n\t\t\t\t\t\tss validation trigger late in the cycle and causing this validation to fail\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t.filter(x => !x.isNew)\r\n\t\t\t\t\t\t.find(x => ssDateByOrgHlp.isCurrent({ obj: x, fromProp: '_from', toProp: '_to', org }));\r\n\t\t\t\t\tif (!currentSupervisor) { return true; }\r\n\t\t\t\t\tif (sup.id === currentSupervisor._employeeId) { return 'New supervisor cannot be the same as current supervisor.'; }\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tvalidateDates(startDate, endDate) {\r\n\t\t\t\t\tvar sDate = moment(startDate);\r\n\t\t\t\t\tvar eDate = moment(endDate);\r\n\t\t\t\t\tif (!sDate.isValid()) { return 'Start date is invalid'; }\r\n\t\t\t\t\tif (endDate != null && eDate.isValid()) {\r\n\t\t\t\t\t\tif (eDate.isBefore(sDate, 'days')) { return 'Start Date cannot be after End Date'; }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\tlink(scope, elem, attrs) {\r\n\t\t\tscope.viewOnly = attrs.viewOnly != null;\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Supervisor(props, 'supervisor', config);\r\n}\r\n// #-- END Component (super-supervisor) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superSupervisor', supervisor);\r\n","/* globals moment */\r\nimport { Component } from 'base-component';\r\n// #---------------------------------------# //\r\n// #---- Component (super-status-item) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n\tstatus: '=',\r\n\teditMode: '=?',\r\n\ttype: '@', // new, past, current, future, none\r\n\tonRemove: '&',\r\n\teditable: '=?',\r\n\torg: '=',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction statusItem() {\r\n\r\n\tclass StatusItem extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssAsync, enumEmployeeStatus, ssListSvc, ssValidationHlp, ssModalSvc, ssDateHlp, ssDateByOrgHlp, ssEventSvc) {\r\n\t\t\t$scope.validator = {\r\n\t\t\t\trequired: (statusId, fieldName) => {\r\n\t\t\t\t\tlet f = ssValidationHlp.numeric({ min: 0 });\r\n\t\t\t\t\tif (f(statusId, fieldName) === true) { return true; }\r\n\t\t\t\t\treturn `${fieldName} is required`;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t$scope.enumEmployeeStatus = enumEmployeeStatus;\r\n\t\t\tconst org = $scope.org;\r\n\t\t\tconst status = $scope.status;\r\n\r\n\t\t\tconst msgs = {\r\n\t\t\t\tstartDate: 'Start Date is required.',\r\n\t\t\t\toverlap: 'Start Date must be prior to End Date.',\r\n\t\t\t};\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tchangeReasons: [],\r\n\t\t\t\teditable: $scope.editable === true,\r\n\t\t\t\ttagText: '',\r\n\t\t\t\tstartDateTxt: (status._from == null || ssDateHlp.isForeverPast(status._from)) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(status._from, org).format('MM/DD/YYYY'),\r\n\t\t\t\tendDateTxt: (status._to == null || ssDateHlp.isForeverFuture(status._to)) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(status._to, org).format('MM/DD/YYYY'),\r\n\t\t\t};\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\t// run on save\r\n\t\t\tssEventSvc.on('employment-details-saved', () => {\r\n\t\t\t\tvm.editable = false;\r\n\t\t\t\tload();\r\n\t\t\t}, $scope);\r\n\r\n\t\t\t$scope.$watch('vm.startDateTxt', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (!(nv instanceof Date)) { return; }\r\n\t\t\t\tstatus._from = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), org);\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.endDateTxt', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (nv == null) {\r\n\t\t\t\t\tstatus._to = ssDateHlp.foreverFuture();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatus._to = ssDateByOrgHlp.endOfDayRelativeTo(moment(nv), org);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tvm.changeReasons = yield ssListSvc.getByExternalId('employee.statuschangereasons');\r\n\r\n\t\t\t\t$scope.$watch('status._statusChangeReasonId', reasonId => {\r\n\t\t\t\t\tconst reason = vm.changeReasons.find(r => r.value === reasonId);\r\n\t\t\t\t\tvm.currentChangeReason = reason && reason.name || '';\r\n\t\t\t\t});\r\n\t\t\t})();\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tcancel() {\r\n\t\t\t\t\tif (typeof status.$revert === 'function') {\r\n\t\t\t\t\t\tstatus.$revert();\r\n\t\t\t\t\t\tload();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($scope.type === 'new') {\r\n\t\t\t\t\t\t$scope.onRemove();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.editable = false;\r\n\t\t\t\t},\r\n\t\t\t\topen() {\r\n\t\t\t\t\tlet confirmation = {\r\n\t\t\t\t\t\ttitle: 'Are you sure?',\r\n\t\t\t\t\t\tcontent: 'If this employee is undergoing a status change, do not edit this current status. Rather use \"Add Status Change\" option.',\r\n\t\t\t\t\t\tprimaryText: 'Continue Editing',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t\t};\r\n\t\t\t\t\tssModalSvc.showStandard(confirmation).then(() => {\r\n\t\t\t\t\t\tvm.editable = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tremove() {\r\n\t\t\t\t\tlet confirmation = {\r\n\t\t\t\t\t\ttitle: 'Are you sure?',\r\n\t\t\t\t\t\tcontent: 'Are you sure you want to delete this status?',\r\n\t\t\t\t\t\tprimaryText: 'Delete Status',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t\t};\r\n\t\t\t\t\tssModalSvc.showDestructive(confirmation).then(() => {\r\n\t\t\t\t\t\t$scope.onRemove();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tshowRemove() {\r\n\t\t\t\t\treturn $scope.type !== 'new' && $scope.type !== 'current';\r\n\t\t\t\t},\r\n\t\t\t\tvalidateStart() {\r\n\t\t\t\t\tif (status._from == null) { return msgs.startDate; }\r\n\t\t\t\t\tif (moment(status._from).isAfter(moment(status._to))) {\r\n\t\t\t\t\t\treturn msgs.overlap;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tvalidateEnd() {\r\n\t\t\t\t\tif (moment(status._from).isAfter(moment(status._to))) {\r\n\t\t\t\t\t\treturn msgs.overlap;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tvalidateAll() {\r\n\t\t\t\t\tif (status._from == null) { return msgs.startDate; }\r\n\t\t\t\t\tif (moment(status._from).isAfter(moment(status._to))) {\r\n\t\t\t\t\t\treturn msgs.overlap;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $scope.validator.required(status._statusId, 'status type');\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction load() {\r\n\t\t\t\tif ($scope.type === 'current') {\r\n\t\t\t\t\tvm.tagText = 'In Effect';\r\n\t\t\t\t} else if ($scope.type === 'future') {\r\n\t\t\t\t\tvm.tagText = 'Upcoming';\r\n\t\t\t\t} else if ($scope.type === 'past') {\r\n\t\t\t\t\tvm.tagText = 'Past';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new StatusItem(props, 'status-item', config);\r\n}\r\n\r\n// #-- END Component (super-status-item) --# //\r\n// #---------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superStatusItem', statusItem);\r\n","/* globals moment */\r\nimport { Component } from 'base-component';\r\n// #----------------------------------------# //\r\n// #---- Component (super-status-group) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployee: '=',\r\n\teditMode: '=',\r\n\torg: '=',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction statusGroup() {\r\n\tclass StatusGroup extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssDateHlp, ssDateByOrgHlp, enumEmployeeStatus) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tnewStatuses: [],\r\n\t\t\t\tpastStatuses: [],\r\n\t\t\t\tfutureStatuses: [],\r\n\t\t\t\tcurrentStatus: {},\r\n\t\t\t\thasCurrentStatus: false,\r\n\t\t\t\torg: $scope.org,\r\n\t\t\t};\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\taddStatus() {\r\n\t\t\t\t\tlet latestStatus = getLatestStatus($scope.employee._statusHistory);\r\n\t\t\t\t\tlet from = null;\r\n\r\n\t\t\t\t\tif (latestStatus) {\r\n\t\t\t\t\t\tfrom = ssDateHlp.isForeverFuture(latestStatus._to) ? nextDay(latestStatus._from) : nextDay(latestStatus._to);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfrom = ssDateByOrgHlp.todaysStartRelativeTo(vm.org);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst newStatusObj = {\r\n\t\t\t\t\t\t_statusId: -1,\r\n\t\t\t\t\t\t_from: from.toISOString(),\r\n\t\t\t\t\t\t_to: ssDateHlp.foreverFuture()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvm.newStatuses.push(newStatusObj);\r\n\t\t\t\t\t$scope.employee._statusHistory.push(newStatusObj);\r\n\t\t\t\t},\r\n\t\t\t\tremoveStatus(status, list) {\r\n\t\t\t\t\tconst removeIdx = $scope.employee._statusHistory.findIndex(s => s.id === status.id);\r\n\t\t\t\t\tif (removeIdx >= 0) { $scope.employee._statusHistory.splice(removeIdx, 1); }\r\n\r\n\t\t\t\t\tconst removeVmIdx = list.findIndex(s => s.id === status.id);\r\n\t\t\t\t\tif (removeVmIdx >= 0) { list.splice(removeVmIdx, 1); }\r\n\t\t\t\t},\r\n\t\t\t\tvalidate() {\r\n\t\t\t\t\tconst statuses = $scope.employee._statusHistory;\r\n\t\t\t\t\tif (statuses == null || statuses.length === 0) { return true; }\r\n\r\n\t\t\t\t\tconst stats = statuses.sort(dateSort);\r\n\r\n\t\t\t\t\tlet hasError = false;\r\n\t\t\t\t\tlet errorMsg = 'Statuses cannot overlap.';\r\n\t\t\t\t\tstats.forEach((stat, i) => {\r\n\t\t\t\t\t\tif (hasError) { return; }\r\n\r\n\t\t\t\t\t\t// if last, exit\r\n\t\t\t\t\t\tif (i === stats.length - 1) {\r\n\r\n\t\t\t\t\t\t\tif (stat._to == null) {\r\n\t\t\t\t\t\t\t\tstat._to = ssDateHlp.foreverFuture();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// if end date is null and not last item then return an error.\r\n\t\t\t\t\t\tif (stat._to == null) {\r\n\t\t\t\t\t\t\terrorMsg = 'Please provide an end date if creating a status prior to another.';\r\n\t\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet to = moment(stat._to);\r\n\t\t\t\t\t\tlet from = moment(stats[i + 1]._from);\r\n\t\t\t\t\t\thasError = to.isAfter(from);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (hasError) { return errorMsg; }\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Fill statuses with txt dates\r\n\t\t\t */\r\n\t\t\tfunction load() {\r\n\t\t\t\tvm.editMode = $scope.editMode === true;\r\n\t\t\t\t// force view mode if we don't have edit permissions\r\n\t\t\t\tif (!$scope.employee.$permitted.props.statusHistory.edit) {\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// reset the newStatuses on editMode changes\r\n\t\t\t\tvm.newStatuses = [];\r\n\r\n\t\t\t\t// make sure we have an array\r\n\t\t\t\tif ($scope.employee._statusHistory == null) { $scope.employee._statusHistory = []; }\r\n\r\n\t\t\t\tconst statuses = $scope.employee._statusHistory;\r\n\r\n\t\t\t\tvm.futureStatuses = statuses.filter(x => ssDateByOrgHlp.isInFuture({ obj: x, fromProp: '_from', toProp: '_to', org: vm.org })).sort(dateSort);\r\n\t\t\t\tvm.futureStatuses.reverse();\r\n\t\t\t\tvm.currentStatus = statuses.find(x => ssDateByOrgHlp.isCurrent({ obj: x, fromProp: '_from', toProp: '_to', org: vm.org }));\r\n\t\t\t\tvm.pastStatuses = statuses.filter(x => ssDateByOrgHlp.isInPast({ obj: x, fromProp: '_from', toProp: '_to', org: vm.org })).sort(dateSort);\r\n\t\t\t\tvm.pastStatuses.reverse();\r\n\r\n\t\t\t\tif (vm.currentStatus == null) {\r\n\t\t\t\t\tvm.hasCurrentStatus = false;\r\n\t\t\t\t\t// set some kind of dates\r\n\t\t\t\t\tvm.currentStatus = {\r\n\t\t\t\t\t\t_statusId: enumEmployeeStatus.noStatus\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (vm.pastStatuses.length) {\r\n\t\t\t\t\t\tlet to = vm.pastStatuses[0]._to;\r\n\t\t\t\t\t\tvm.currentStatus._from = nextDay(to).toISOString();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.hasCurrentStatus = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction nextDay(serverFromDate) {\r\n\t\t\t\tlet startDate = ssDateByOrgHlp.utcIsoToRelativeMoment(serverFromDate, vm.org);\r\n\t\t\t\treturn startDate.clone().add(1, 'days').startOf('day');\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Comparator for date based on _from\r\n\t\t\t *\r\n\t\t\t * @param {Date} a\r\n\t\t\t * @param {Date} b\r\n\t\t\t *\r\n\t\t\t * @return {int}\r\n\t\t\t */\r\n\t\t\tfunction dateSort(a, b) {\r\n\t\t\t\tlet aFrom = moment(a._from || ssDateHlp.foreverFuture());\r\n\t\t\t\tlet bFrom = moment(b._from || ssDateHlp.foreverFuture());\r\n\t\t\t\tif (aFrom.isBefore(bFrom)) { return -1; }\r\n\t\t\t\tif (aFrom.isAfter(bFrom)) { return 1; }\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getLatestStatus(statuses) {\r\n\t\t\t\treturn statuses.sort((a, b) => new Date(b._to) - new Date(a._to))[0];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new StatusGroup(props, 'status-group', config);\r\n}\r\n\r\n// #-- END Component (super-status-group) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superStatusGroup', statusGroup);\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------# //\r\n// #---- Component (super-phone-list) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tphones: '=',\r\n\teditMode: '=?',\r\n\tpermissions: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction phoneList() {\r\n\r\n\tclass PhoneList extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope) {\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t};\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('phones', loadIsEditing);\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tadd() {\r\n\t\t\t\t\tconst newPhone = {\r\n\t\t\t\t\t\t_isPrimary: false,\r\n\t\t\t\t\t\t_extension: null,\r\n\t\t\t\t\t\t_number: null,\r\n\t\t\t\t\t\t_usageType: null,\r\n\t\t\t\t\t\tisEditing: true,\r\n\t\t\t\t\t\t_canReceiveTexts: false\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t$scope.phones.push(newPhone);\r\n\t\t\t\t},\r\n\t\t\t\tonRemove(index) {\r\n\t\t\t\t\t$scope.phones.splice(index, 1);\r\n\t\t\t\t},\r\n\t\t\t\tonCheck(index) {\r\n\t\t\t\t\t$scope.phones.forEach((phone, idx) => {\r\n\t\t\t\t\t\tif (index === idx) { return; }\r\n\t\t\t\t\t\tphone._isPrimary = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tfunction load() {\r\n\t\t\t\tvm.editMode = $scope.editMode === true;\r\n\t\t\t\t// force view mode if we don't have edit permissions\r\n\t\t\t\tif (!$scope.permissions.personalPhoneNumbers.edit && !$scope.permissions.organizationPhoneNumbers.edit) {\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tloadIsEditing();\r\n\t\t\t}\r\n\r\n\t\t\tfunction loadIsEditing() {\r\n\t\t\t\tif ($scope.phones != null) {\r\n\t\t\t\t\t$scope.phones.forEach(p => p.isEditing = false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new PhoneList(props, 'phone-list', config);\r\n}\r\n\r\n// #-- END Component (super-phone-list) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superPhoneList', phoneList);\r\n","import { Component } from 'base-component';\r\n// #---------------------------------# //\r\n// #---- Component (super-phone) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n\tphone: '=',\r\n\teditMode: '=?',\r\n\tonRemove: '&',\r\n\tonCheck: '&',\r\n\tpermissions: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction phone() {\r\n\r\n\tclass Phone extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssModalSvc, ssEnum, ssValidationHlp) {\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tphoneTypes: ssEnum.phoneTypes.getEnums(),\r\n\t\t\t\tusageTypes: ssEnum.usageType.getEnums(),\r\n\t\t\t\tfeatureFlags: $scope.$root.utils.findInParentScope('featureFlags', $scope)\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\trequired: ssValidationHlp.required(),\r\n\t\t\t\tphoneNumber(val, field) {\r\n\t\t\t\t\tif ($scope.editMode !== true || val == null || !val.length) { return true; }\r\n\t\t\t\t\tlet checkPhone = ssValidationHlp.phone();\r\n\t\t\t\t\treturn checkPhone(val, field);\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t$scope.$watch('phone._isPrimary', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (nv === true) { $scope.onCheck(); }\r\n\t\t\t});\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tcancel() {\r\n\t\t\t\t\tif (typeof $scope.phone.$revert === 'function') {\r\n\t\t\t\t\t\t$scope.phone.$revert();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($scope.phone.id == null) {\r\n\t\t\t\t\t\t$scope.onRemove();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.phone.isEditing = false;\r\n\t\t\t\t},\r\n\t\t\t\tedit() {\r\n\t\t\t\t\t$scope.phone.isEditing = true;\r\n\t\t\t\t},\r\n\t\t\t\tremove() {\r\n\t\t\t\t\tlet confirmation = {\r\n\t\t\t\t\t\ttitle: 'Are you sure?',\r\n\t\t\t\t\t\tcontent: 'Are you sure you want to delete this phone number?',\r\n\t\t\t\t\t\tprimaryText: 'Delete Phone Number',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t};\r\n\t\t\t\t\tssModalSvc.showDestructive(confirmation).then(() => {\r\n\t\t\t\t\t\t$scope.onRemove();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tfilterUsageTypes(usageType){\r\n\t\t\t\t\tif ($scope.phone.isEditing){\r\n\t\t\t\t\t\t// if we are in edit mode check edit permissions to make sure we should be able to select work/personal\r\n\t\t\t\t\t\t// options from the dropdown (if so include them). Always exclude \"Other\" though.\r\n\t\t\t\t\t\treturn go.canEditUsageType(usageType.value) ? usageType.name !== 'Other' : false;\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\t// if we aren't in edit mode don't filter by permissions, except \"Other\" which we always exclude\r\n\t\t\t\t\t\treturn usageType.name !== 'Other';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tcanEditUsageType(phoneUsageType){\r\n\t\t\t\t\tconst usageType = ssEnum.usageType.byValue(phoneUsageType);\r\n\r\n\t\t\t\t\tswitch(usageType){\r\n\t\t\t\t\t\tcase 'Work':\r\n\t\t\t\t\t\t\treturn $scope.permissions.organizationPhoneNumbers.edit;\r\n\t\t\t\t\t\tcase 'Personal':\r\n\t\t\t\t\t\t\treturn $scope.permissions.personalPhoneNumbers.edit;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Phone(props, 'phone', config);\r\n}\r\n\r\n// #-- END Component (super-phone) --# //\r\n// #---------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superPhone', phone);\r\n","import { Component } from 'base-component';\r\n// #-----------------------------------------------# //\r\n// #---- Component (super-personnel-documents) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction personnelDocuments() {\r\n\r\n\tclass PersonnelDocuments extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope) {\r\n\t\t\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\temployeeId: $scope.employeeId,\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn new PersonnelDocuments(props, 'personnel-documents', config);\r\n}\r\n\r\n// #-- END Component (super-personnel-documents) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superPersonnelDocuments', personnelDocuments);\r\n","import { Component } from 'base-component';\r\n// #---------------------------------------------# //\r\n// #---- Component (super-personal-info-new) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '=',\r\n\tonBeforeSave: '&?',\r\n\tonAfterSave: '&?',\r\n\tonBeforeCancel: '&?',\r\n\tonAfterCancel: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction personalInfoNew() {\r\n\r\n\tclass PersonalInfoNew extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $element, $stateParams, $state, moment, ssEmployeeApi, ssAsync, ssEnum, ssSaveInterrupterSvc, ssEventSvc, ssEmployeeModelHlp, ssDateByOrgHlp, ssOrganizationSvc, ssSleepHlp, ssOptionalFieldGroupHlp, ssMultiInitiativeFeatureDetectorCCSvc, ssValidationHlp, ssPermissionsSvc) {\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'isHRMSEnabled': false,\r\n\t\t\t\t'isDataIntegrationsEnabled': false,\r\n\t\t\t\t'hasStateEducatorIdonPersonal': false,\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\temail: ssValidationHlp.email(),\r\n\t\t\t\trequired: ssValidationHlp.required(),\r\n\t\t\t\tssn: ssValidationHlp.ssn(),\r\n\t\t\t\teducatorId: ssValidationHlp.string({ maxLength: 100 }),\r\n\t\t\t};\r\n\r\n\t\t\tconst hooks = {\r\n\t\t\t\tonBeforeSave: hookOrDefault($scope.onBeforeSave),\r\n\t\t\t\tonAfterSave: hookOrDefault($scope.onAfterSave),\r\n\t\t\t\tonBeforeCancel: hookOrDefault($scope.onBeforeCancel),\r\n\t\t\t\tonAfterCancel: hookOrDefault($scope.onAfterCancel),\r\n\t\t\t};\r\n\r\n\t\t\tlet anyFieldIsEditable = false;\r\n\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\teditMode: {\r\n\t\t\t\t\tpersonal: false,\r\n\t\t\t\t\taddresses: false,\r\n\t\t\t\t\temails: false,\r\n\t\t\t\t\tphones: false,\r\n\t\t\t\t\tall: false\r\n\t\t\t\t},\r\n\t\t\t\tsaving: false,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\ttitle: ssEnum.salutation.getEnums(),\r\n\t\t\t\t\tsuffix: ssEnum.suffix.getEnums(),\r\n\t\t\t\t\tmaritalStatus: ssEnum.maritalStatus.getEnums(),\r\n\t\t\t\t\tgender: ssEnum.gender.getEnums(),\r\n\t\t\t\t\tethnicity: ssEnum.ethnicity.getEnums(),\r\n\t\t\t\t\trace: ssEnum.race.getEnums(),\r\n\t\t\t\t},\r\n\t\t\t\temailType: ssEnum.emailType,\r\n\t\t\t\texpanded: false,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t//\tresolve all feature flags\r\n\t\t\t\t\tyield ssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags);\r\n\r\n\t\t\t\t//\tset this validator here since it is based on a feature flag\r\n\t\t\t\t\t$scope.validator.externalId = (val, fieldName) => {\r\n\t\t\t\t\t\t// don't validate unless editing this section\r\n\t\t\t\t\t\tif (!vm.editMode.personal) { return true; }\r\n\t\t\t\t\t\tconst f = ssValidationHlp.string({ required: !$scope.featureFlags.isHRMSEnabled, maxLength: 100 }); // required only for non-HRMS\r\n\t\t\t\t\t\treturn f(val, fieldName);\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t//\tIf newly created employee, default to single save button\r\n\t\t\t\t\tif ($stateParams.action === '-edit' && ssPermissionsSvc.isPermittedAction('employees', 'edit')){\r\n\t\t\t\t\t\tresetEditMode(true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresetEditMode();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\r\n\t\t\t\t\tyield load();\r\n\r\n\t\t\t\t\t$scope.$watch('vm.birthDateTxt', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tvm.emp._birthDateUtc = nv != null ? ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), vm.org) : null;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$scope.$watch('vm.emp.workEmail._emailAddress', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tupdateEmail(nv, 'work');\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$scope.$watch('vm.emp.personalEmail._emailAddress', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tupdateEmail(nv, 'personal');\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tssEventSvc.on('employee-ssn-retrieved', () => {\r\n\t\t\t\t\t\t// set the changed state of the field to false when the view button is clicked\r\n\t\t\t\t\t\tvm.emp.$$forceChangedState('sSN', false);\r\n\t\t\t\t\t}, $scope);\r\n\r\n\t\t\t\t\tssEmployeeModelHlp.loadEmployee(vm.emp);\r\n\r\n\t\t\t\t\tif($scope.featureFlags.fc_enable_employee_module_save_interrupter) {\r\n\t\t\t\t\t\t$scope.$on('$destroy', () => {\r\n\t\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\tvm.emp.$$resetChangesDetected();\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.emp);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t} catch(err){\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t//>error(e)\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = {\r\n\t\t\t\tgetExternalIdLabel() {\r\n\t\t\t\t\tif ($scope.featureFlags.isDataIntegrationsEnabled) { return 'User Identifier'; }\r\n\t\t\t\t\treturn 'External ID';\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcanEdit,\r\n\r\n\t\t\t\tedit(section) {\r\n\t\t\t\t\tresetEditMode();\r\n\t\t\t\t\tif (!anyFieldIsEditable) { return; }\r\n\t\t\t\t\tvm.editMode[section] = true;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// switch to view route\r\n\t\t\t\tcancel: ssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\thooks.onBeforeCancel();\r\n\t\t\t\t\t\tlet form = $element.find('form');\r\n\t\t\t\t\t\tform.scope().$emit('ss-validate-reset');\r\n\t\t\t\t\t\tyield load();\r\n\t\t\t\t\t\tresetEditMode();\r\n\t\t\t\t\t\thooks.onAfterCancel();\r\n\t\t\t\t\t} catch(e){\r\n\t\t\t\t\t\t//>error(e)\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tsave: ssAsync(function*() {\r\n\t\t\t\t\tif (!anyFieldIsEditable) { return; }\r\n\t\t\t\t\t// if we aren't currently editing any section then skip\r\n\t\t\t\t\tif (!vm.editMode.personal && !vm.editMode.addresses && !vm.editMode.emails && !vm.editMode.phones) { return; }\r\n\t\t\t\t\thooks.onBeforeSave();\r\n\t\t\t\t\tvm.saving = true;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// run stuff to set up employee before saving\r\n\t\t\t\t\t\tssEmployeeModelHlp.preSave(vm.emp);\r\n\t\t\t\t\t\tyield vm.emp.$save();\r\n\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\tresetEditMode();\r\n\t\t\t\t\t\thooks.onAfterSave();\r\n\t\t\t\t\t\tssEventSvc.emit('personal-details-saved', vm.emp);\r\n\t\t\t\t\t\t// vm.saving = false;\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t\t//>error('problem saving employee', err)\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield load();\r\n\t\t\t\t\t\t// If saving after newly created, remove the '-edit' from route and reload otherwise just finish the save normally\r\n\t\t\t\t\t\t\t$stateParams.action === '-edit' ? $state.go('.', { action: '' }) : vm.saving = false;\r\n\t\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\t\t//>error('problem refreshing employee data', err)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tsyncOrgPerson: ssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvm.saving = true;\r\n\t\t\t\t\t\tyield ssEmployeeApi.upsertOrgPerson({employeeId : $scope.employeeId});\r\n\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\tyield load();\r\n\t\t\t\t\t\tresetEditMode();\r\n\t\t\t\t\t} catch(e){\r\n\t\t\t\t\t\t//>error(e)\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tvalidateOr(fields) {\r\n\t\t\t\t\tif (vm.permitted.ssn.raw === ssEnum.propertyAction.notVisible && vm.permitted.externalId.raw === ssEnum.propertyAction.notVisible) { return true; }\r\n\r\n\t\t\t\t\treturn ssOptionalFieldGroupHlp.validate(fields, `Please enter a SSN or an ${go.getExternalIdLabel()}.`);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tvalidateSSN() {\r\n\t\t\t\t\tif (vm.permitted === ssEnum.propertyAction.redacted) { return true; }\r\n\r\n\t\t\t\t\treturn $scope.validator.ssn(vm.emp._sSN);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tisEditDisabled(section) {\r\n\t\t\t\t\tlet sections = Object.keys(vm.editMode);\r\n\t\t\t\t\t// skip checking the self section\r\n\t\t\t\t\tsections = sections.filter(s => s !== section);\r\n\t\t\t\t\tlet disabled = false;\r\n\t\t\t\t\t// disabled is true if disabled is true or vm.editMode[oneOfTheOtherSections] is true\r\n\t\t\t\t\tsections.forEach(s => disabled = disabled || vm.editMode[s]);\r\n\t\t\t\t\treturn disabled;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets up the employee and vm objects between editMode changes\r\n\t\t\t */\r\n\t\t\tfunction load() {\r\n\t\t\t\treturn ssEmployeeApi.get({\r\n\t\t\t\t\tid: $scope.employeeId,\r\n\t\t\t\t\tfields: 'age,aliasFirstName,aliasLastName,aliasMiddleName,aliasTitle,birthDateUtc,ethnicity,externalId,firstName,gender,hasSsn,lastName,maritalStatus,middleName,race,sSN,stateEducatorId,suffix,title,orgPersonCreated,orgPersonUpdated,canonicalEmployeeEventsOutOfSync',\r\n\t\t\t\t\tinclude: 'phoneNumbers,emails,addresses'\r\n\t\t\t\t}, null, false)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tvm.emp = res;\r\n\t\t\t\t\tvm.birthDateTxt = vm.emp._birthDateUtc != null ? ssDateByOrgHlp.utcIsoToRelativeMoment(vm.emp._birthDateUtc, vm.org).format('MM/DD/YYYY') : null;\r\n\t\t\t\t\tanyFieldIsEditable = checkEditability();\r\n\t\t\t\t\tvm.permitted = vm.emp.$permitted.props;\r\n\t\t\t\t\tssEmployeeModelHlp.setupEmployee(vm.emp);\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction updateEmail(val, type) {\r\n\t\t\t\tlet email = vm.emp._emails.find(e => e._emailType === vm.emailType[type]);\r\n\t\t\t\tif (val === '') {\r\n\t\t\t\t\tlet index = vm.emp._emails.indexOf(email);\r\n\t\t\t\t\tvm.emp._emails.splice(index, 1);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (email != null) {\r\n\t\t\t\t\temail._emailAddress = val;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.emp._emails.push({\r\n\t\t\t\t\t\t_emailAddress: val,\r\n\t\t\t\t\t\t_emailType: vm.emailType[type],\r\n\t\t\t\t\t\t_isPrimary: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Returns true if you can edit the section\r\n\t\t\t * @param {*} section\r\n\t\t\t */\r\n\t\t\tfunction canEdit(section) {\r\n\t\t\t\t// Allow edits with the 'DIP' integration on.\r\n\t\t\t\tif ($scope.featureFlags.isDataIntegrationsEnabled) { return true; }\r\n\r\n\t\t\t\t// Default to normal FC permissions around editing profile info in absence of DIP or HRMS.\r\n\t\t\t\tconst perms = vm.emp.$permitted.props;\r\n\r\n\t\t\t\tif (section === 'personal') {\r\n\t\t\t\t\tif (perms.title.edit) { return true; }\r\n\t\t\t\t\tif (perms.firstName.edit) { return true; }\r\n\t\t\t\t\tif (perms.middleName.edit) { return true; }\r\n\t\t\t\t\tif (perms.lastName.edit) { return true; }\r\n\t\t\t\t\tif (perms.suffix.edit) { return true; }\r\n\r\n\t\t\t\t\tif (perms.stateEducatorId.edit) { return true; }\r\n\r\n\t\t\t\t\tif (perms.aliasFirstName.edit) { return true; }\r\n\t\t\t\t\tif (perms.aliasMiddleName.edit) { return true; }\r\n\t\t\t\t\tif (perms.aliasLastName.edit) { return true; }\r\n\r\n\t\t\t\t\tif (perms.birthDateUtc.edit) { return true; }\r\n\t\t\t\t\tif (perms.age.edit) { return true; }\r\n\t\t\t\t\tif (perms.ssn.edit) { return true; }\r\n\t\t\t\t\tif (perms.externalId.edit) { return true; }\r\n\r\n\t\t\t\t\tif (perms.maritalStatus.edit) { return true; }\r\n\t\t\t\t\tif (perms.gender.edit) { return true; }\r\n\t\t\t\t\tif (perms.ethnicity.edit) { return true; }\r\n\t\t\t\t\tif (perms.race.edit) { return true; }\r\n\t\t\t\t} else if (section === 'addresses') {\r\n\t\t\t\t\treturn perms.addresses.edit;\r\n\t\t\t\t} else if (section === 'emails') {\r\n\t\t\t\t\treturn perms.personalEmails.edit || perms.organizationEmails.edit;\r\n\t\t\t\t} else if (section === 'phones') {\r\n\t\t\t\t\treturn perms.personalPhoneNumbers.edit || perms.organizationPhoneNumbers.edit ;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Checks if the employee can edit any field\r\n\t\t\t */\r\n\t\t\tfunction checkEditability() {\r\n\t\t\t\tlet sections = Object.keys(vm.editMode);\r\n\t\t\t\tlet res = sections.map(s => canEdit(s));\r\n\t\t\t\treturn res.some(e => e === true);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates default empty functions for the hooks\r\n\t\t\t * @param {*} f\r\n\t\t\t */\r\n\t\t\tfunction hookOrDefault(f = () => {}) {\r\n\t\t\t\tif (typeof f === 'function') { return f; }\r\n\t\t\t\treturn () => {};\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the edit mode for all sections to false\r\n\t\t\t */\r\n\t\t\tfunction resetEditMode(setToTrue = false) {\r\n\t\t\t\tlet sections = Object.keys(vm.editMode);\r\n\t\t\t\tsections.forEach(s => vm.editMode[s] = setToTrue);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn new PersonalInfoNew(props, 'personal-info-new', config);\r\n}\r\n\r\n// #-- END Component (super-personal-info-new) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superPersonalInfoNew', personalInfoNew);\r\n","import { Component } from 'base-component';\r\n// #-----------------------------------------# //\r\n// #---- Component (super-personal-info) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '=',\r\n\tonBeforeSave: '&?',\r\n\tonAfterSave: '&?',\r\n\tonBeforeCancel: '&?',\r\n\tonAfterCancel: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction personalInfo() {\r\n\r\n\tclass PersonalInfo extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn new PersonalInfo(props, 'personal-info', config);\r\n}\r\n\r\n// #-- END Component (super-personal-info) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superPersonalInfo', personalInfo);\r\n","import { Component } from 'base-component';\r\n// #---------------------------------------------# //\r\n// #---- Component (super-medical-documents) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction medicalDocuments() {\r\n\r\n\tclass MedicalDocuments extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope) {\r\n\t\t\t\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\temployeeId: $scope.employeeId,\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn new MedicalDocuments(props, 'medical-documents', config);\r\n}\r\n\r\n// #-- END Component (super-medical-documents) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superMedicalDocuments', medicalDocuments);\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------# //\r\n// #---- Component (super-input-ssn) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '@',\r\n\tmodel: '=',\r\n\thasValue: '=',\r\n\tlabel: '@',\r\n\tlabelWeight: '@?',\r\n\tisDisabled: '=?',\r\n\tname: '@',\r\n\tinputId: '@',\r\n\tvalue: '=?',\r\n\trequired: '=?',\r\n\tplaceholder: '@',\r\n\tpermissions: '=?',\r\n\teditMode: '=',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction inputSsn() {\r\n\r\n\tclass InputSsn extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $element, $attrs, $timeout, ssAsync, ssEmployeeApi, ssEventSvc, enumPropertyAction) {\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tshowValue: false,\r\n\t\t\t\tredactedValue: '*********'\r\n\t\t\t};\r\n\r\n\t\t\t// created to allow assigning to model because of ng-if scope\r\n\t\t\tconst cmpt = $scope.cmpt = $scope;\r\n\r\n\t\t\t// reset the showValue state when the model is changed to null outside of this component\r\n\t\t\t$scope.$watch('model', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (nv == null && ov != null) { vm.showValue = false; }\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watchGroup(['editMode', 'permissions'], loadEditModeAndPermissions);\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tget() {\r\n\t\t\t\t\tvm.loading = true;\r\n\t\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\t\tlet ssn = yield ssEmployeeApi.getSsn($scope.employeeId);\r\n\r\n\t\t\t\t\t\tcmpt.model = ssn;\r\n\r\n\t\t\t\t\t\t// do not pass the ssn; we don't want that floating around willy-nilly\r\n\t\t\t\t\t\t// wait 50 msecs to allow the code to add the ssn to the changes array in the JsonAPI Model\r\n\t\t\t\t\t\t$timeout(() => ssEventSvc.emit('employee-ssn-retrieved'), 50);\r\n\r\n\t\t\t\t\t\tvm.showValue = true;\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t})();\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {object} nv $scope.watch values\r\n\t\t\t * @param {boolean} nv[0] editMode\r\n\t\t\t * @param {object} nv[1] permissions\r\n\t\t\t */\r\n\t\t\tfunction loadEditModeAndPermissions(nv) {\r\n\t\t\t\t// index matches expression\r\n\t\t\t\tconst editMode = nv[0];\r\n\t\t\t\tconst permissions = nv[1];\r\n\r\n\t\t\t\tconst editModeInferred = editMode == null;\r\n\t\t\t\tif (editModeInferred) {\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.editMode = editMode === true; // strict equality to not bind it to the $scope\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (permissions == null) {\r\n\t\t\t\t\tif ($attrs.permissions === undefined) {\r\n\t\t\t\t\t\t// if the component wasn't even passed a permissions object assume\r\n\t\t\t\t\t\t// edit privileges so that we actually show the expected input\r\n\t\t\t\t\t\tvm.permissions = { view: true, edit: true, redacted: false, raw: 3 };\r\n\t\t\t\t\t\tif (editModeInferred) { vm.editMode = true; }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if we expect permissions on the component, but we were\r\n\t\t\t\t\t\t// passed an empty permissions object, deny edit privileges\r\n\t\t\t\t\t\tvm.permissions = { view: true, edit: false, redacted: false, raw: 1 };\r\n\t\t\t\t\t\tif (editModeInferred) { vm.editMode = false; }\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.permissions = angular.extend({}, permissions);\r\n\r\n\t\t\t\t\t// NOTE: this component already has redacted built into it by design so remove\r\n\t\t\t\t\t// redacted values from the permissions so the super-input-text doesn't handle them\r\n\t\t\t\t\tif (vm.permissions.raw > 4) { vm.permissions.raw = vm.permissions.raw - enumPropertyAction.redacted; }\r\n\t\t\t\t\tvm.permissions.redacted = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!vm.permissions.edit) { vm.editMode = false; }\r\n\t\t\t\tif (vm.permissions.raw === enumPropertyAction.notVisible) {\r\n\t\t\t\t\t$element.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new InputSsn(props, 'input-ssn', config);\r\n}\r\n\r\n// #-- END Component (super-input-ssn) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superInputSsn', inputSsn);\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (super-employment-info) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '=',\r\n\tstartInEditMode: '=?', // load the page in edit more or not\r\n\tonBeforeSave: '&?',\r\n\tonAfterSave: '&?',\r\n\tonBeforeCancel: '&?',\r\n\tonAfterCancel: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction employmentInfo() {\r\n\r\n\tclass EmploymentInfo extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, moment, ssAssignmentApi, ssObjectHlp, ssSleepHlp, ssAsync, ssListSvc, ssDateByOrgHlp, ssDateHlp, ssValidationHlp, ssOrganizationSvc, ssEmployeeApi, ssPositionsApi, ssEventSvc, ssMultiInitiativeFeatureDetectorCCSvc, ssSaveInterrupterSvc, ssToastHlp) {\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\teducatorId: ssValidationHlp.string({ maxLength: 100 })\r\n\t\t\t};\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'hasStateEducatorIdonEmployment': false,\r\n\t\t\t\t'showTenureDate': false,\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false\r\n\t\t\t};\r\n\r\n\t\t\tconst hooks = {\r\n\t\t\t\tonBeforeSave: hookOrDefault($scope.onBeforeSave),\r\n\t\t\t\tonAfterSave: hookOrDefault($scope.onAfterSave),\r\n\t\t\t\tonBeforeCancel: hookOrDefault($scope.onBeforeCancel),\r\n\t\t\t\tonAfterCancel: hookOrDefault($scope.onAfterCancel),\r\n\t\t\t};\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tloading: false,\r\n\t\t\t\tsaving: false,\r\n\t\t\t\teditMode: $scope.startInEditMode === true, // do the comparison to not tie it to the scope variable\r\n\t\t\t\tpermitted: {},\r\n\t\t\t\tanyFieldIsEditable: false,\r\n\t\t\t};\r\n\r\n\t\t\t(function init() {\r\n\r\n\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\tssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\treturn ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t}).then((res) => {\r\n\t\t\t\t\tvm.org = res;\r\n\t\t\t\t\treturn ssListSvc.getByExternalId('employee.retirementsystems')\r\n\t\t\t\t}).then((res) => {\r\n\t\t\t\t\tvm.retirementSystems = res;\r\n\t\t\t\t\treturn loadAndProcessEmployeeData();\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\t$scope.$watch('vm.employee._retirementSystem.id', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov || nv == null || !vm.editMode) { return; } // setting to none has an actual value;\r\n\t\t\t\t\t\t// find the actual retirementSystem for this employee\r\n\t\t\t\t\t\tlet retirementSystem = vm.retirementSystems.find(rs => rs.value === nv);\r\n\t\t\t\t\t\t// we couldn't find the retirementSystem :-(\r\n\t\t\t\t\t\tif (retirementSystem == null) {\r\n\t\t\t\t\t\t\tretirementSystem = { name: 'None', id: -1, value: -1 };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvm.employee._retirementSystem = { id: retirementSystem.value, name: retirementSystem.name };\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t$scope.$watch('vm.hireDateTxt', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov || !vm.editMode) { return; }\r\n\t\t\t\t\t\tvm.employee._hireDate = nv != null ? ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), vm.org) : null;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t$scope.$watch('vm.seniorityDateTxt', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov || !vm.editMode) { return; }\r\n\t\t\t\t\t\tvm.employee._seniorityDate = nv != null ? ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), vm.org) : null;\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tif ($scope.featureFlags.showTenureDate) {\r\n\t\t\t\t\t\t$scope.$watch('vm.tenureDateTxt', (nv, ov) => {\r\n\t\t\t\t\t\t\tif (nv === ov || !vm.editMode) { return; }\r\n\t\t\t\t\t\t\tvm.employee._tenureDate = nv != null ? ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), vm.org) : null;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.anyFieldIsEditable = anyFieldIsEditable(vm.permitted);\r\n\t\t\t\t\tsetSaveInterruptor();\r\n\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tssToastHlp.error(err);\r\n\t\t\t\t}).finally(() => {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t});\r\n\t\t\t}());\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\t// switch to edit route\r\n\t\t\t\tedit: ssAsync(function*(){\r\n\t\t\t\t\tvm.loading = true;\r\n\t\t\t\t\tloadAndProcessEmployeeData().then(() => {\r\n\t\t\t\t\t\tsetSaveInterruptor();\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tssToastHlp.error(err);\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tvm.editMode = true;\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\r\n\t\t\t\t// switch to view route\r\n\t\t\t\tcancel: ssAsync(function*() {\r\n\t\t\t\t\thooks.onBeforeCancel();\r\n\t\t\t\t\tvm.loading = true;\r\n\t\t\t\t\tloadAndProcessEmployeeData().then(() => {\r\n\t\t\t\t\t\tsetSaveInterruptor({reset: true});\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tssToastHlp.error(err);\r\n\t\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\t\thooks.onAfterCancel();\r\n\t\t\t\t\t});\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tsave: ssAsync(function*() {\r\n\t\t\t\t\tif (!vm.editMode) { return; }\r\n\t\t\t\t\thooks.onBeforeSave();\r\n\t\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// save employee fields, status, and supervisor\r\n\t\t\t\t\t\tyield vm.employee.$save();\r\n\t\t\t\t\t\tvm.employee.$$applyMutators();\r\n\r\n\t\t\t\t\t\tif (vm.permitted.assignments.edit) {\r\n\t\t\t\t\t\t\t// TODO maybe this could be done better in the assignment-list component\r\n\t\t\t\t\t\t\t// set positions with a null end date to forever future\r\n\t\t\t\t\t\t\tvm.positions.filter(p => p._endDate == null).forEach(p => p._endDate = ssDateHlp.foreverFuture());\r\n\r\n\t\t\t\t\t\t\t// TODO maybe this could be done better in the 'assignment' component\r\n\t\t\t\t\t\t\t// we have added a new primary position set the previous position end date to new position start date - 1\r\n\t\t\t\t\t\t\tlet newPrimaryPosition = vm.positions.find(p => p.id == null && p.assignment._isPrimary);\r\n\t\t\t\t\t\t\tif (newPrimaryPosition != null) {\r\n\t\t\t\t\t\t\t\tconst startDate = ssDateByOrgHlp.utcIsoToRelativeMoment(newPrimaryPosition._startDate, vm.org).add(-1, 'days');\r\n\r\n\t\t\t\t\t\t\t\tvm.positions.filter(p => p.assignment._isPrimary && p.id != null && ssDateHlp.isForeverFuture(p._endDate))\r\n\t\t\t\t\t\t\t\t\t.forEach(p => p._endDate = ssDateByOrgHlp.endOfDayRelativeTo(startDate, vm.org));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// let's save existing assignment details\r\n\t\t\t\t\t\t\tlet assignmentDetails = vm.positions.filter(p => ssObjectHlp.glean(p, _ => _.assignment._details) != null)\r\n\t\t\t\t\t\t\t\t.map(p => p.assignment._details.filter(d => d.id != null));\r\n\t\t\t\t\t\t\tfor (const details of assignmentDetails) {\r\n\t\t\t\t\t\t\t\tfor (const detail of details) {\r\n\t\t\t\t\t\t\t\t\tyield detail.$save();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// save new/deletions\r\n\t\t\t\t\t\t\tyield vm.positions.$save();\r\n\r\n\t\t\t\t\t\t\t// save new/deleted details\r\n\t\t\t\t\t\t\t// position.assignment.id will be null while the _assignments[0].id will be a GUID\r\n\t\t\t\t\t\t\tfor (let i = 0; i < vm.positions.length; i++) {\r\n\t\t\t\t\t\t\t\tlet p = vm.positions[i];\r\n\t\t\t\t\t\t\t\tlet assignment = yield ssAssignmentApi.getAssignment({\r\n\t\t\t\t\t\t\t\t\tid: p.id,\r\n\t\t\t\t\t\t\t\t\tassignmentId: p._assignments[0].id,\r\n\t\t\t\t\t\t\t\t\tinclude: 'details'\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tassignment._details.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tp.assignment._details.forEach(d => assignment._details.push(d));\r\n\r\n\t\t\t\t\t\t\t\tyield assignment._details.$save({ opOrder: ['remove', 'modify', 'add'] });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// reload changes\r\n\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\thooks.onAfterSave();\r\n\t\t\t\t\t\tssEventSvc.emit('employment-details-saved', vm.employee);\r\n\t\t\t\t\t\tyield loadAndProcessEmployeeData();\r\n\t\t\t\t\t\tsetSaveInterruptor({reset: true});\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t//> error('Error', e);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tassignmentsAreLoaded: function(loaded) {\r\n\t\t\t\t\tvm.loading = !loaded;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction loadAndProcessEmployeeData() {\r\n\t\t\t\treturn getEmployeeData().then((data) => {\r\n\t\t\t\t\tconst [employee, positions] = data;\r\n\t\t\t\t\tvm.permitted = employee.$permitted.props;\r\n\t\t\t\t\tvm.employee = processEmployeeData(employee);\r\n\t\t\t\t\tvm.positions = positions;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction getEmployeeData() {\r\n\r\n\t\t\t\tconst fields = `hireDate,retirementSystem,seniorityDate,stateEducatorId${$scope.featureFlags.showTenureDate ? ',tenureDate' : ''}`;\r\n\t\t\t\tlet employee, positions;\r\n\r\n\t\t\t\treturn ssEmployeeApi.get({\r\n\t\t\t\t\tid: $scope.employeeId,\r\n\t\t\t\t\tfields,\r\n\t\t\t\t\tinclude: 'statusHistory,supervisors'\r\n\t\t\t\t}, null, false).then((emp) => {\r\n\t\t\t\t\temployee = emp;\r\n\t\t\t\t\tif (emp.$permitted.props.assignments.view) {\r\n\t\t\t\t\t\treturn ssPositionsApi.getForEmployee({\r\n\t\t\t\t\t\t\tid: emp.id,\r\n\t\t\t\t\t\t\tinclude: 'assignments'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn Promise.all(allRequests);\r\n\t\t\t\t}).then((positionData) => {\r\n\t\t\t\t\tpositions = positionData;\r\n\t\t\t\t\tif (positions) {\r\n\t\t\t\t\t\tconst assignmentDetailsRequests = positions.map((p) => {\r\n\t\t\t\t\t\t\treturn ssAssignmentApi.getAssignment({\r\n\t\t\t\t\t\t\t\tid: p.id,\r\n\t\t\t\t\t\t\t\tassignmentId: p._assignments[0].id,\r\n\t\t\t\t\t\t\t\tinclude: 'details'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn Promise.all(assignmentDetailsRequests);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).then((assignmentsData) => {\r\n\t\t\t\t\tif (assignmentsData) {\r\n\t\t\t\t\t\tassignmentsData.forEach((assignment) => {\r\n\t\t\t\t\t\t\tlet parentPosition = positions.find(pos => pos.id === assignment._positionId);\r\n\t\t\t\t\t\t\tif (parentPosition) {\r\n\t\t\t\t\t\t\t\tparentPosition.assignment = assignment;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn [employee, positions];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction processEmployeeData(employee) {\r\n\t\t\t\tif (employee._retirementSystem == null) { employee._retirementSystem = {}; }\r\n\t\t\t\tlet currentRs = null;\r\n\t\t\t\tif (employee._retirementSystem.id != null) {\r\n\t\t\t\t\tcurrentRs = vm.retirementSystems.find(system => system.value === employee._retirementSystem.id);\r\n\t\t\t\t}\r\n\t\t\t\t// if we have one set, prep the controller data to match it up so we can pass it to the view\r\n\t\t\t\tif (employee._retirementSystem.name == null && currentRs != null) {\r\n\t\t\t\t\t// id is the listHeaderId, not the value of the dropdown which is listHeaderId_ListId (value)\r\n\t\t\t\t\temployee._retirementSystem.name = currentRs.name;\r\n\t\t\t\t\temployee._retirementSystem.id = currentRs.value; // id is the listHeaderId, not the value of the dropdown which is listHeaderId_ListId (value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.hireDateTxt = employee._hireDate != null ? ssDateByOrgHlp.utcIsoToRelativeMoment(employee._hireDate, vm.org).format('MM/DD/YYYY') : '';\r\n\t\t\t\tvm.seniorityDateTxt = employee._seniorityDate != null ? ssDateByOrgHlp.utcIsoToRelativeMoment(employee._seniorityDate, vm.org).format('MM/DD/YYYY') : '';\r\n\r\n\t\t\t\tif ($scope.featureFlags.showTenureDate) {\r\n\t\t\t\t\tvm.tenureDateTxt = employee._tenureDate != null ? ssDateByOrgHlp.utcIsoToRelativeMoment(employee._tenureDate, vm.org).format('MM/DD/YYYY') : '';\r\n\t\t\t\t}\r\n\t\t\t\treturn employee;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction setSaveInterruptor({reset = false} = {}) {\r\n\t\t\t\tif($scope.featureFlags['fc_enable_employee_module_save_interrupter']){\r\n\t\t\t\t\tif(reset) {\r\n\t\t\t\t\t\t// If reloading employee data after a save or cancel button is hit clear save interrupter\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.$on('$destroy', () => {\r\n\t\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// If loading employee data for editing register on the following JSON API objects\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.employee);\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.employee._supervisors);\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.employee._statusHistory);\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.positions);\r\n\t\t\t\t\t\tvm.employee.$$resetChangesDetected();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction anyFieldIsEditable(permissions) {\r\n\t\t\t\tif (!vm.employee.$permitted.actions.edit) { return false; }\r\n\t\t\t\tif (permissions == null) { return false; }\r\n\t\t\t\tif (permissions.hireDate.edit) { return true; }\r\n\t\t\t\tif (permissions.seniorityDate.edit) { return true; }\r\n\t\t\t\tif (permissions.tenureDate.edit) { return true; }\r\n\t\t\t\tif (permissions.retirementSystem.edit) { return true; }\r\n\t\t\t\tif (permissions.supervisor.edit) { return true; }\r\n\t\t\t\tif (permissions.statusHistory.edit) { return true; }\r\n\t\t\t\tif (vm.positions.length && permissions.assignments.edit && anyAssignmentIsEditable()) { return true; }\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfunction anyAssignmentIsEditable() {\r\n\t\t\t\treturn vm.positions.reduce((acc, cur) => {\r\n\t\t\t\t\treturn cur.assignment.$permitted.actions.edit || acc;\r\n\t\t\t\t}, false);\r\n\t\t\t}\r\n\r\n\t\t\tfunction hookOrDefault(f = () => {}) {\r\n\t\t\t\tif (typeof f === 'function') { return f; }\r\n\t\t\t\treturn () => {};\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn new EmploymentInfo(props, 'employment-info', config);\r\n}\r\n\r\n// #-- END Component (super-employment-info) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superEmploymentInfo', employmentInfo);\r\n","import { Component } from 'base-component';\r\n// #---------------------------------------------# //\r\n// #---- Component (super-emergency-contact) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployee: '=?',\r\n\temployeeId: '=?',\r\n\tonBeforeSave: '&?',\r\n\tonAfterSave: '&?',\r\n\tonBeforeCancel: '&?',\r\n\tonAfterCancel: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {\r\n\t// transclude: true\r\n};\r\n\r\n/*@ngInject*/\r\nfunction emergencyContact() {\r\n\r\n\tvar emergencyContactsForms;\r\n\r\n\tclass EmergencyContact extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssAsync, ssEmployeeApi, ssSaveInterrupterSvc, ssEventSvc, ssMultiInitiativeFeatureDetectorCCSvc, ssValidateHlp, ssEmployeeModelHlp, ssJsonApiHlp, ssMutatorDataHlp, ssValidationHlp, ssSleepHlp, enumRelationshipTypes) {\r\n\r\n\t\t\tconst hooks = {\r\n\t\t\t\tonBeforeSave: hookOrDefault($scope.onBeforeSave),\r\n\t\t\t\tonAfterSave: hookOrDefault($scope.onAfterSave),\r\n\t\t\t\tonBeforeCancel: hookOrDefault($scope.onBeforeCancel),\r\n\t\t\t\tonAfterCancel: hookOrDefault($scope.onAfterCancel),\r\n\t\t\t};\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\teditMode: false,\r\n\t\t\t\toptions: enumRelationshipTypes.getEnums(),\r\n\t\t\t\temployee: $scope.employee,\r\n\t\t\t\tprimary: false,\r\n\t\t\t\tsecondary: false,\r\n\t\t\t\tsaving: false,\r\n\t\t\t\tvalidator: {\r\n\t\t\t\t\tphone: ssValidationHlp.phone(),\r\n\t\t\t\t\trequired: ssValidationHlp.required()\r\n\t\t\t\t},\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false,\r\n\t\t\t};\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t//\tresolve all feature flags\r\n\t\t\t\t\tyield ssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags);\r\n\r\n\t\t\t\t\tif ($scope.employee == null) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvm.employee = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\t\tid: $scope.employeeId,\r\n\t\t\t\t\t\t\t\tinclude: 'emergencyContacts',\r\n\t\t\t\t\t\t\t\tfields: 'id'\r\n\t\t\t\t\t\t\t}, null, false);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tssEventSvc.emit('error-404');\r\n\t\t\t\t\t\t\t//> error('Error retrieving employee', e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.employee = $scope.employee;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.permitted = vm.employee.$permitted.props;\r\n\t\t\t\t\tsetupEmployee(vm.employee);\r\n\r\n\t\t\t\t\tvm.primary = vm.employee.primaryEmergencyContact;\r\n\t\t\t\t\tvm.secondary = vm.employee.secondaryEmergencyContact;\r\n\r\n\t\t\t\t\t$scope.$watch('vm.primary._contactName', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tif (nv == null) { return; }\r\n\r\n\t\t\t\t\t\tif (ov && !ov.length && nv.length) {\r\n\t\t\t\t\t\t\tlet index = vm.employee._emergencyContacts.findIndex(c => c._isPrimary);\r\n\t\t\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\t\t\tvm.employee._emergencyContacts.splice(index, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvm.employee._emergencyContacts.push(vm.primary);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$scope.$watch('vm.secondary._contactName', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tif (nv == null) { return; }\r\n\r\n\t\t\t\t\t\tif (ov && !ov.length && nv.length) {\r\n\t\t\t\t\t\t\tlet index = vm.employee._emergencyContacts.findIndex(c => !c._isPrimary);\r\n\t\t\t\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\t\t\t\tvm.employee._emergencyContacts.splice(index, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvm.employee._emergencyContacts.push(vm.secondary);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$scope.$watchGroup(['vm.primary._relationshipType', 'vm.primary._primaryPhone', 'vm.primary._alternatePhone'], (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tupdateEmergencyContacts(nv, 'primary');\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$scope.$watchGroup(['vm.secondary._relationshipType', 'vm.secondary._primaryPhone', 'vm.secondary._alternatePhone'], (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tupdateEmergencyContacts(nv, 'secondary');\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif($scope.featureFlags['fc_enable_employee_module_save_interrupter']) {\r\n\t\t\t\t\t// clear the save interrupter when we leave\r\n\t\t\t\t\t\t$scope.$on('$destroy', () => {\r\n\t\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\tvm.employee.$$resetChangesDetected();\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.employee);\r\n\t\t\t\t\t}\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tedit() {\r\n\t\t\t\t\tvm.editMode = true;\r\n\t\t\t\t},\r\n\t\t\t\tcancel() {\r\n\t\t\t\t\thooks.onBeforeCancel();\r\n\t\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\t\tvm.employee.$refresh().then(() => {\r\n\t\t\t\t\t\tloadEmergencyContacts(vm.employee);\r\n\t\t\t\t\t\tformatPhones(vm.employee);\r\n\r\n\t\t\t\t\t\tvm.primary = vm.employee.primaryEmergencyContact;\r\n\t\t\t\t\t\tvm.secondary = vm.employee.secondaryEmergencyContact;\r\n\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\thooks.onAfterCancel();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tsave() {\r\n\t\t\t\t\tif (!vm.editMode) { return; }\r\n\r\n\t\t\t\t\thooks.onBeforeSave();\r\n\t\t\t\t\tvm.saving = true;\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tpreSave(vm.employee);\r\n\r\n\t\t\t\t\t\t\tyield vm.employee.$save();\r\n\t\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\t\tyield vm.employee.$refresh();\r\n\r\n\t\t\t\t\t\t\tloadEmergencyContacts(vm.employee);\r\n\t\t\t\t\t\t\tformatPhones(vm.employee);\r\n\t\t\t\t\t\t\tvm.primary = vm.employee.primaryEmergencyContact;\r\n\t\t\t\t\t\t\tvm.secondary = vm.employee.secondaryEmergencyContact;\r\n\r\n\t\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\t\tssSaveInterrupterSvc.register(vm.employee);\r\n\r\n\t\t\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\t\t\thooks.onAfterSave();\r\n\r\n\t\t\t\t\t\t\tssValidateHlp.resetValidation(emergencyContactsForms);\r\n\t\t\t\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t\t\t\t\t// emit here for sidebar changes to get picked up\r\n\t\t\t\t\t\t\tssEventSvc.emit('module.employee.saved', vm.employee);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tsetupEmployee(vm.employee);\r\n\t\t\t\t\t\t\t//> error('Error saving emergency contacts', err);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t},\r\n\t\t\t\tclearContact(contact) {\r\n\t\t\t\t\tlet index = vm.employee._emergencyContacts.findIndex(c => c._isPrimary === contact._isPrimary);\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t//careful: this will trigger the $watch methods\r\n\t\t\t\t\t\tcontact._contactName = '';\r\n\t\t\t\t\t\tcontact._primaryPhone = '';\r\n\t\t\t\t\t\tcontact._alternatePhone = '';\r\n\t\t\t\t\t\tcontact._relationshipType = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tvalidateOr(contact) {\r\n\t\t\t\t\tif (contact == null) { return true; }\r\n\r\n\t\t\t\t\tif (vm.employee != null) {\r\n\t\t\t\t\t\tlet match = vm.employee._emergencyContacts.find(c => c._isPrimary === contact._isPrimary);\r\n\t\t\t\t\t\tif (!contact._contactName && match === undefined) { return true; } //blank contact, passes validation\r\n\t\t\t\t\t\tif (contact._contactName && contact._contactName.length) {\r\n\t\t\t\t\t\t\treturn optionalFieldGroupValidate([\r\n\t\t\t\t\t\t\t\tcontact._contactName,\r\n\t\t\t\t\t\t\t\tcontact._primaryPhone,\r\n\t\t\t\t\t\t\t\tcontact._alternatePhone,\r\n\t\t\t\t\t\t\t\tcontact._relationshipType\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn 'Contact information requires a name';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\thideLabel(val) {\r\n\t\t\t\t\tif (vm.editMode) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (val != null) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction updateEmergencyContacts(nv, type) {\r\n\t\t\t\tconst [relationshipType, primaryPhone, alternatePhone] = nv;\r\n\r\n\t\t\t\tlet index = vm.employee._emergencyContacts.findIndex(c => {\r\n\t\t\t\t\tif (type === 'primary') {\r\n\t\t\t\t\t\treturn c._isPrimary;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn !c._isPrimary;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tvm.employee._emergencyContacts.splice(index, 1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (relationshipType != null && relationshipType !== -1) { //Relationship type selected\r\n\t\t\t\t\tvm.employee._emergencyContacts.push(vm[type]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (primaryPhone !== '' || alternatePhone !== '') {\r\n\t\t\t\t\tvm.employee._emergencyContacts.push(vm[type]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction setupEmployee(emp) {\r\n\t\t\t\tssEmployeeModelHlp.cleanEmployeeForSave(emp);\r\n\r\n\t\t\t\t// create copy the form fields can use to access the employee fields\r\n\t\t\t\tloadEmergencyContacts(emp);\r\n\t\t\t\tformatPhones(emp);\r\n\t\t\t}\r\n\r\n\t\t\tfunction loadEmergencyContacts(emp) {\r\n\t\t\t\tconst base = {\r\n\t\t\t\t\t_isPrimary: false,\r\n\t\t\t\t\t_relationshipType: -1,\r\n\t\t\t\t\t_contactName: null,\r\n\t\t\t\t\t_primaryPhone: null,\r\n\t\t\t\t\t_alternatePhone: null\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst defaults = {\r\n\t\t\t\t\t_contactName: '',\r\n\t\t\t\t\t_primaryPhone: '',\r\n\t\t\t\t\t_alternatePhone: ''\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet contacts = [...emp._emergencyContacts];\r\n\r\n\t\t\t\tif (contacts.length === 0) {\r\n\t\t\t\t\tcontacts.push(angular.extend({}, base));\r\n\t\t\t\t\tcontacts[0]._isPrimary = true;\r\n\t\t\t\t} else if (contacts.length === 1) {\r\n\t\t\t\t\tcontacts.push(angular.extend({}, base));\r\n\t\t\t\t\tcontacts[1]._isPrimary = !contacts[0]._isPrimary;\r\n\t\t\t\t}\r\n\r\n\t\t\t\temp.primaryEmergencyContact = contacts.find(c => c._isPrimary);\r\n\t\t\t\temp.secondaryEmergencyContact = contacts.find(c => !c._isPrimary);\r\n\r\n\t\t\t\tif (emp.primaryEmergencyContact != null) {\r\n\t\t\t\t\tssJsonApiHlp.setFieldDefaultValues(emp.primaryEmergencyContact, defaults);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (emp.secondaryEmergencyContact != null) {\r\n\t\t\t\t\tssJsonApiHlp.setFieldDefaultValues(emp.secondaryEmergencyContact, defaults);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Adds formatted phone numbers for display\r\n\t\t\t *\r\n\t\t\t * @param {Object} emp\r\n\t\t\t */\r\n\t\t\tfunction formatPhones(emp) {\r\n\t\t\t\tif (emp.primaryEmergencyContact != null) {\r\n\t\t\t\t\temp.primaryEmergencyContact.primaryPhoneFormatted = ssMutatorDataHlp.formatPhone(emp.primaryEmergencyContact._primaryPhone);\r\n\t\t\t\t\temp.primaryEmergencyContact.alternatePhoneFormatted = ssMutatorDataHlp.formatPhone(emp.primaryEmergencyContact._alternatePhone);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (emp.secondaryEmergencyContact != null) {\r\n\t\t\t\t\temp.secondaryEmergencyContact.primaryPhoneFormatted = ssMutatorDataHlp.formatPhone(emp.secondaryEmergencyContact._primaryPhone);\r\n\t\t\t\t\temp.secondaryEmergencyContact.alternatePhoneFormatted = ssMutatorDataHlp.formatPhone(emp.secondaryEmergencyContact._alternatePhone);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets up the employee object to be saved.\r\n\t\t\t *\r\n\t\t\t * @param {Object} emp\r\n\t\t\t */\r\n\t\t\tfunction preSave(emp) {\r\n\t\t\t\tssEmployeeModelHlp.cleanEmployeeForSave(emp);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Conditional validation\r\n\t\t\t *\r\n\t\t\t * @param {Array} fieldList\r\n\t\t\t * @param {String} errorMessage\r\n\t\t\t */\r\n\t\t\tfunction optionalFieldGroupValidate(fieldList, errorMessage) {\r\n\t\t\t\tconst defaultMessage = 'One of the fields in this group is required.';\r\n\t\t\t\tlet valid = false;\r\n\t\t\t\tfor (let q = 0; q < fieldList.length; q++) {\r\n\t\t\t\t\tif (fieldList[q] != null) {\r\n\t\t\t\t\t\tvalid = valid || fieldList[q].length > 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalid = valid || false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (valid) { return valid; }\r\n\t\t\t\tif (errorMessage == null) { errorMessage = defaultMessage; }\r\n\r\n\t\t\t\treturn errorMessage;\r\n\t\t\t}\r\n\r\n\t\t\tfunction hookOrDefault(f = () => {}) {\r\n\t\t\t\tif (typeof f === 'function') { return f; }\r\n\t\t\t\treturn () => {};\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlink(scope, elem, attrs) {\r\n\t\t\t// This element is needed for validation reset\r\n\t\t\tangular.element(document).ready(function() {\r\n\t\t\t\temergencyContactsForms = angular.element(document.getElementsByClassName('record'));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn new EmergencyContact(props, 'emergency-contact', config);\r\n}\r\n\r\n// #-- END Component (super-emergency-contact) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superEmergencyContact', emergencyContact);\r\n","import {\r\n\tComponent\r\n}\r\nfrom 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (super-document-editor) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tmodel: '=',\r\n\temployeePermissions: '=?',\r\n\tcategoryPermission: '=?',\r\n\tonRemove: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction documentEditor() {\r\n\r\n\tclass DocumentEditor extends Component {\r\n\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $stateParams, $state, $filter, $window, ssValidationHlp, ssAsync, ssFilenameHlp, ssEmployeeApi, ssToastHlp, ssFormInstancesApi, ssSaveInterrupterSvc, ssObjectHlp, ssMultiInitiativeFeatureDetectorCCSvc, ssEnum, ssActiveUserSvc, ssSleepHlp) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst regex = /.*{\"filename\":.*/;\r\n\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tcategoryEnums: {\r\n\t\t\t\t\tpersonnel: ssEnum.personnelCategory.enums,\r\n\t\t\t\t\tmedical: ssEnum.medicalCategory.enums\r\n\t\t\t\t},\r\n\t\t\t\twebFormCategory: `${$scope.model._category}-${$scope.model._subCategory}`,\r\n\t\t\t\tmodel: $scope.model,\r\n\t\t\t\tsubCategories: $scope.subcategories,\r\n\t\t\t\tfileDateUtc: fileDate($scope.model),\r\n\t\t\t\tisEdit: false,\r\n\t\t\t\tfileIcon: ssFilenameHlp.getIcon(ssFilenameHlp.getExtension($scope.model._name)) || 'file',\r\n\t\t\t\textension: ssFilenameHlp.getExtension($scope.model._name),\r\n\t\t\t\tloadingFiles: !$scope.model.isFile,\r\n\t\t\t\tfilesOnInstance: [],\r\n\t\t\t\tvalidDeniedInfo: ssObjectHlp.glean($scope.model, _ => _._deniedInfo.comments) || ssObjectHlp.glean($scope.model, _ => _._deniedInfo.denier.name),\r\n\t\t\t};\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false,\r\n\t\t\t\t'fc_enhanced_denied_form_workflow': false\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\trequired: ssValidationHlp.required()\r\n\t\t\t};\r\n\r\n\t\t\t$scope.$watch('vm.webFormCategory', (nv, ov) => {\r\n\t\t\t\tif(!nv || nv === ov) { return; }\r\n\t\t\t\t$scope.model._category = nv.split('-')[0];\r\n\t\t\t\t$scope.model._subCategory = nv.split('-')[1];\r\n\t\t\t});\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\t//\tresolve all feature flags\r\n\t\t\t\tyield ssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags);\r\n\r\n\t\t\t\tif (!$scope.model.isFile) {\r\n\t\t\t\t\tssFormInstancesApi.get({\r\n\t\t\t\t\t\tid: $scope.model._formInstanceId,\r\n\t\t\t\t\t\t\tinclude: 'steps'\r\n\t\t\t\t\t}).then(form => vm.filesOnInstance = processFileAttachments(form))\r\n\t\t\t\t\t.finally(_ => vm.loadingFiles = false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($scope.featureFlags.fc_enable_employee_module_save_interrupter) {\r\n\t\t\t\t\tssSaveInterrupterSvc.register($scope.model);\r\n\t\t\t\t}\r\n\r\n\t\t\t})();\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = {\r\n\t\t\t\t// Save all changes and tell the user upon success.\r\n\t\t\t\tsave() {\r\n\t\t\t\t\t// patch the file\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\tvm.saving = true;\r\n\t\t\t\t\t\t// Ensure that if the user takes the file extension off, that we put it back to be nice.\r\n\t\t\t\t\t\tif ($scope.model._name.indexOf('.' + vm.extension) < 0) {\r\n\t\t\t\t\t\t\t$scope.model._name += '.' + vm.extension.toLowerCase();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield $scope.model.$save();\r\n\t\t\t\t\t\t\tssToastHlp.success('Document saved successfully.');\r\n\t\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\t\tssToastHlp.error(err, 'Error saving document');\r\n\t\t\t\t\t\t\t$scope.model.$revert();\r\n\t\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t\t\tvm.isEdit = false;\r\n\t\t\t\t\t\t\t//>error('problem saving document', err)\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tssSleepHlp.sleep().then(() => {\r\n\t\t\t\t\t\t\t\t$scope.$emit('on-document-edit', $scope.model);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcancelEdit() {\r\n\t\t\t\t\t$scope.model.$revert();\r\n\t\t\t\t\tif ($scope.featureFlags.fc_enable_employee_module_save_interrupter) {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.isEdit = false;\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdownloadFiles(files) {\r\n\t\t\t\t\tfiles.forEach(file => go.downloadFile(file.id));\r\n\t\t\t\t},\r\n\r\n\t\t\t\tdownloadFile(id) {\r\n\t\t\t\t\tssEmployeeApi.getFileUrlById({\r\n\t\t\t\t\t\tid: $stateParams.employeeId,\r\n\t\t\t\t\t\tfileId: id\r\n\t\t\t\t\t}).then(success => {\r\n\t\t\t\t\t\t$window.open(success._string, '_blank');\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\r\n\t\t\t\tviewOnline(id) {\r\n\t\t\t\t\tconst route = $state.current.name.substring(($state.current.name.lastIndexOf('.') + 1));\r\n\t\t\t\t\tconst path = `/ec-forms/form-instance/${id}?returnUrl=/ec-employee/record/${$stateParams.employeeId}/${route}`;\r\n\t\t\t\t\t$window.open(path, '_self');\r\n\t\t\t\t},\r\n\t\t};\r\n\r\n\t\tfunction fileDate(file) {\r\n\t\t\tif (!file._createdUtc && !file._originalFileDateUtc) {return '';}\r\n\t\t\treturn file._originalFileDateUtc\r\n\t\t\t\t? 'originated ' + $filter('date')(file._originalFileDateUtc, 'MM/dd/yyyy')\r\n\t\t\t\t: 'added ' + $filter('date')(file._createdUtc, 'MM/dd/yyyy');\r\n\t\t}\r\n\r\n\t\tfunction processFileAttachments(form) {\r\n\t\t\tlet filesOnInstance = [];\r\n\t\t\tconst formFieldValues = form._steps\r\n\t\t\t\t.filter(stp => regex.test(stp._formFieldValues) && stp._stepAction !== ssEnum.stepAction.formCompleted)\r\n\t\t\t\t.map(stp => stp._formFieldValues);\r\n\t\t\tif (formFieldValues.length) {\r\n\t\t\t\tformFieldValues.forEach(formFieldValue => {\r\n\t\t\t\t\tconst parsedValue = JSON.parse(formFieldValue);\r\n\t\t\t\t\tObject.keys(parsedValue)\r\n\t\t\t\t\t\t.filter(key => Array.isArray(parsedValue[key]))\r\n\t\t\t\t\t\t.filter(key => parsedValue[key].every(item => !!item.filename))\r\n\t\t\t\t\t\t.forEach((key) => {\r\n\t\t\t\t\t\t\tfilesOnInstance = filesOnInstance.concat(...processFileDisplay(\r\n\t\t\t\t\t\t\t\tparsedValue[key]));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn filesOnInstance;\r\n\t\t}\r\n\r\n\t\tfunction processFileDisplay(files) {\r\n\t\t\treturn files.map(file => {\r\n\t\t\t\tlet ext = ssFilenameHlp.getExtension(file.filename);\r\n\t\t\t\tlet icon = ssFilenameHlp.getIcon(ext);\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: file.id,\r\n\t\t\t\t\tfilename: file.filename,\r\n\t\t\t\t\text,\r\n\t\t\t\t\ticon\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new DocumentEditor(props, 'document-editor', config);\r\n}\r\n\r\n// #-- END Component (super-document-editor) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superDocumentEditor',\r\n\tdocumentEditor);\r\n","import { Component } from 'base-component';\r\n// #------------------------------------------# //\r\n// #---- Component (super-credentials-list) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tcredentialsList: '=',\r\n\torg: '=',\r\n\tloggedInUserKey: '=',\r\n\tcurrentlyEditing: '=',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction credentialsList() {\r\n\r\n\tclass CredentialsList extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $q, ssAsync, ssToastHlp, ssCredentialDataAccessSvc, ssCredentialBusinessEngineSvc) {\r\n\r\n\t\t\t$scope.ctrl = $scope;\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tarchiveExpanded: true\r\n\t\t\t};\r\n\r\n\t\t\t$scope.$watch('credentialsList.length', () => {\r\n\t\t\t\tlet { recent, archive } = ssCredentialBusinessEngineSvc.filterCredentialList($scope.credentialsList);\r\n\t\t\t\tvm.recent = recent;\r\n\t\t\t\tvm.archive = archive;\r\n\t\t\t});\r\n\r\n\t\t\tfunction showModalIfAlreadyHaveRecentCredential(recentCredentials, credential, isPatched = false) {\r\n\t\t\t\tconst subjectString = credential._subjects.map(s => s.id).sort().join('_');\r\n\r\n\t\t\t\tlet exist = false;\r\n\t\t\t\tif (isPatched) {\r\n\t\t\t\t\tlet credentialsExist = recentCredentials.filter(a => a.id !== credential.id);\r\n\t\t\t\t\tif (credentialsExist.length) {\r\n\t\t\t\t\t\texist = credentialsExist.some(cred => cred._credential.credentialTypeId === credential._credential.credentialTypeId &&\r\n\t\t\t\t\t\t\tcred._credential.id === credential._credential.id &&\r\n\t\t\t\t\t\t\tcred._credential.issuer.id === credential._credential.issuer.id &&\r\n\t\t\t\t\t\t\tsubjectString === cred._subjects.map(s => s.id).sort().join('_'));\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\texist = recentCredentials.some(cred => credential.id === cred.id && subjectString === cred._subjects.map(s => s.id).sort().join('_'));\r\n\t\t\t\t}\r\n\t\t\t\tif (exist) {\r\n\t\t\t\t\tssToastHlp.info('The old credential has been moved to the Archived group at the bottom of the page.', 'Archiving Credential', false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\ttoggle() {\r\n\t\t\t\t\tvm.archiveExpanded = !vm.archiveExpanded;\r\n\t\t\t\t},\r\n\t\t\t\tsaveCredential(listItem, employee, credential, files) {\r\n\t\t\t\t\tlet deferred = $q.defer();\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (credential._id) {\r\n\t\t\t\t\t\t\t\t// deleting any file that is marked as deleted\r\n\t\t\t\t\t\t\t\tlet filesToDelete = files.filter(file => file.isDeleted && file.id !== null);\r\n\t\t\t\t\t\t\t\tif (filesToDelete.length) {\r\n\t\t\t\t\t\t\t\t\tlet filesToDeletePromises = filesToDelete.map(file => ssCredentialDataAccessSvc.deleteFile(employee.id, credential._id, file));\r\n\t\t\t\t\t\t\t\t\tyield $q.all(filesToDeletePromises);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// uploading new files\r\n\t\t\t\t\t\t\t\tlet filesToUpload = files.filter(file => file.id === null && !file.isDeleted);\r\n\t\t\t\t\t\t\t\tif (filesToUpload.length) {\r\n\t\t\t\t\t\t\t\t\tlet fileUploadPromises = filesToUpload.map(file => ssCredentialDataAccessSvc.associateFile(employee.id, credential._id, file));\r\n\t\t\t\t\t\t\t\t\tyield $q.all(fileUploadPromises);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// updating the credential\r\n\t\t\t\t\t\t\t\tlet updatedCredential = yield ssCredentialDataAccessSvc.patchEmployeeCredential(employee, credential);\r\n\t\t\t\t\t\t\t\tif (updatedCredential) {\r\n\t\t\t\t\t\t\t\t\tshowModalIfAlreadyHaveRecentCredential(vm.recent, updatedCredential, true);\r\n\t\t\t\t\t\t\t\t\tlet index = $scope.credentialsList.indexOf(listItem);\r\n\t\t\t\t\t\t\t\t\t$scope.credentialsList[index] = updatedCredential;\r\n\t\t\t\t\t\t\t\t\t$scope.currentlyEditing = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdeferred.resolve(updatedCredential);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// creating the new credential\r\n\t\t\t\t\t\t\t\tlet newCredential = yield ssCredentialDataAccessSvc.addEmployeeCredential(employee, credential);\r\n\r\n\t\t\t\t\t\t\t\t// uploading the files\r\n\t\t\t\t\t\t\t\tlet filesToUpload = files.filter(file => file.id === null && !file.isDeleted);\r\n\t\t\t\t\t\t\t\tif (filesToUpload.length) {\r\n\t\t\t\t\t\t\t\t\tlet fileUploadPromises = filesToUpload.map(file => ssCredentialDataAccessSvc.associateFile(employee.id, newCredential.id, file));\r\n\t\t\t\t\t\t\t\t\tyield $q.all(fileUploadPromises);\r\n\t\t\t\t\t\t\t\t\t// fetching the credential again so we have files object updated in it.\r\n\t\t\t\t\t\t\t\t\tnewCredential = yield ssCredentialDataAccessSvc.getEmployeeCredentialById(employee, newCredential);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (newCredential) {\r\n\t\t\t\t\t\t\t\t\tshowModalIfAlreadyHaveRecentCredential(vm.recent, newCredential);\r\n\t\t\t\t\t\t\t\t\t$scope.credentialsList.push(newCredential);\r\n\t\t\t\t\t\t\t\t\t$scope.currentlyEditing = null;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tdeferred.resolve(newCredential);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tdeferred.reject(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t\treturn deferred.promise;\r\n\t\t\t\t},\r\n\t\t\t\tdeleteCredential(credential) {\r\n\t\t\t\t\t$scope.credentialsList = $scope.credentialsList.filter(c => c !== credential);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn new CredentialsList(props, 'credentials-list', config);\r\n}\r\n\r\n// #-- END Component (super-credentials-list) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superCredentialsList', credentialsList);\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------------# //\r\n// #---- Component (super-credentials-cntr) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temployeeId: '=',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction credentialsCntr() {\r\n\r\n\tclass CredentialsCntr extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $q, ssAsync, ssToastHlp, ssActiveUserSvc, ssCredentialDataAccessSvc, ssCredentialFactorySvc,\r\n\t\t\t\tssCredentialViewModelFactorySvc, ssCredentialBusinessEngineSvc, ssOrganizationSvc) {\r\n\r\n\t\t\tconst credentialConstants = ssCredentialBusinessEngineSvc.credentialConstants;\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tcurrentlyEditing: null,\r\n\t\t\t\tsavingCredential: false,\r\n\t\t\t\tnewCredential: null,\r\n\t\t\t\tloadingCredentialList: true,\r\n\t\t\t\tcredentials: [],\r\n\t\t\t};\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvm.loggedInUserKey = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\t\t\t\t\tvm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\r\n\t\t\t\t\tlet certIssuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(credentialConstants.CERTIFICATE_LICENSE, credentialConstants.STATE_NATIONAL);\r\n\t\t\t\t\tlet clearIssuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(credentialConstants.CLEARANCES, credentialConstants.STATE_NATIONAL);\r\n\t\t\t\t\tlet stateDmvIssuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(credentialConstants.DRIVER_LICENSE, credentialConstants.STATE_NATIONAL);\r\n\r\n\t\t\t\t\t$scope.stateIssuers = [];\r\n\t\t\t\t\t$scope.stateIssuers[credentialConstants.CERTIFICATE_LICENSE] = certIssuers;\r\n\t\t\t\t\t$scope.stateIssuers[credentialConstants.CLEARANCES] = clearIssuers;\r\n\t\t\t\t\t$scope.stateIssuers[credentialConstants.DRIVER_LICENSE] = stateDmvIssuers;\r\n\r\n\t\t\t\t\t$scope.customIssuers = yield ssCredentialDataAccessSvc.getIssuers(credentialConstants.DISTRICT_CUSTOM);\r\n\t\t\t\t\tvm.credentials = yield ssCredentialDataAccessSvc.getCredentialsByEmployee($scope.employeeId);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loadingCredentialList = false;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\r\n\t\t\tfunction showModalIfAlreadyHaveRecentCredential(credential) {\r\n\t\t\t\tconst subjectString = credential._subjects.map(s => s.id).sort().join('_');\r\n\t\t\t\tconst exist = vm.credentials.some(cred => credential._credential.id === cred._credential.id && subjectString === cred._subjects.map(s => s.id).sort().join('_'));\r\n\t\t\t\tif (exist) {\r\n\t\t\t\t\tssToastHlp.info('The old credential has been moved to the Archived group at the bottom of the page.', 'Archiving Credential', false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\taddCredential() {\r\n\t\t\t\t\tlet credentialShellObject = ssCredentialFactorySvc.create();\r\n\t\t\t\t\tlet credentialVm = ssCredentialViewModelFactorySvc.create(credentialShellObject);\r\n\t\t\t\t\tvm.currentlyEditing = vm.newCredential = credentialVm;\r\n\t\t\t\t},\r\n\t\t\t\tsaveCredential(credential, files) {\r\n\t\t\t\t\tvm.savingCredential = true;\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvar newCredential = yield ssCredentialDataAccessSvc.addEmployeeCredential({ id: $scope.employeeId }, credential);\r\n\t\t\t\t\t\t\tlet filesToUpload = files.filter(file => file.id === null && !file.isDeleted);\r\n\t\t\t\t\t\t\tif (filesToUpload.length) {\r\n\t\t\t\t\t\t\t\tlet fileUploadPromises = filesToUpload.map(file => ssCredentialDataAccessSvc.associateFile($scope.employeeId, newCredential.id, file));\r\n\t\t\t\t\t\t\t\tyield $q.all(fileUploadPromises);\r\n\t\t\t\t\t\t\t\t// fetching the credential again so we have files object updated in it.\r\n\t\t\t\t\t\t\t\tnewCredential = yield ssCredentialDataAccessSvc.getEmployeeCredentialById({ id: $scope.employeeId }, newCredential);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (newCredential) {\r\n\t\t\t\t\t\t\t\tshowModalIfAlreadyHaveRecentCredential(newCredential);\r\n\t\t\t\t\t\t\t\tvm.credentials.push(newCredential);\r\n\t\t\t\t\t\t\t\tvm.currentlyEditing = vm.newCredential = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.savingCredential = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t},\r\n\t\t\t\tcancelCredential() {\r\n\t\t\t\t\tvm.newCredential = vm.currentlyEditing = null;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn new CredentialsCntr(props, 'credentials-cntr', config);\r\n}\r\n\r\n// #-- END Component (super-credentials-cntr) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superCredentialsCntr', credentialsCntr);\r\n","import { Component } from 'base-component';\r\n// #---------------------------------------------# //\r\n// #---- Component (super-credential-status) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tcredential: '=',\r\n\tcredentialTypeId: '=',\r\n\tcredentialId: '=',\r\n\tissuer: '=',\r\n\tparentDirty: '=',\r\n\tloggedInUserKey: '<',\r\n\tisCloning: '<?'\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction credentialStatus() {\r\n\r\n\tclass CredentialStatus extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssCredentialBusinessEngineSvc, ssDateHlp, ssValidationHlp, ssObjectHlp, ssSaveInterrupterSvc, ssAsync, ssMultiInitiativeFeatureDetectorCCSvc) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tlet credential = $scope.credential;\r\n\t\t\tconst credentialData = credential.data;\r\n\t\t\tconst credentialTypeId = $scope.credentialTypeId;\r\n\t\t\tconst originalCopy = ssObjectHlp.deepFreeze(ssObjectHlp.deepCopy(credentialData));\r\n\t\t\tconst isEditing = credentialData._id !== null;\r\n\t\t\tconst credentialConstants = ssCredentialBusinessEngineSvc.credentialConstants;\r\n\t\t\tconst allCredentialStatuses = ssCredentialBusinessEngineSvc.allCredentialStatuses;\r\n\t\t\tconst viewModelDates = {\r\n\t\t\t\tstateStartedDay: isEditing ? moment(credentialData._stateStartedDay).toISOString() : '',\r\n\t\t\t\texpirationDay: credentialData._isGrantedForLife || !isEditing ? '' : moment(credentialData._expirationDay).toISOString()\r\n\t\t\t};\r\n\t\t\tconst issueReason = (isEditing && ssCredentialBusinessEngineSvc.getCredentialStatus(credentialData, moment()).value) || credentialConstants.ACTIVE;\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\trequired: ssValidationHlp.required()\r\n\t\t\t};\r\n\r\n\t\t\tconst vm = $scope.vm = Object.assign({\r\n\t\t\t\tcredentialConstants,\r\n\t\t\t\tallCredentialStatuses: credentialTypeId === credentialConstants.DRIVER_LICENSE ? allCredentialStatuses.filter(s => s.value !== credentialConstants.IN_PROGRESS) : allCredentialStatuses,\r\n\t\t\t\tcredentialStatus: allCredentialStatuses.find(s => s.value === issueReason).value,\r\n\t\t\t\tisRenewal: credentialData._issuedReason === credentialConstants.CREDENTIAL_RENEWED,\r\n\t\t\t\tisGrantedForLife: credentialData._isGrantedForLife,\r\n\t\t\t\tisVerified: isVerified(credentialData),\r\n\t\t\t\tisInProgress: issueReason === credentialConstants.CREDENTIAL_INPROGRESS,\r\n\t\t\t\tparentDirty: false,\r\n\t\t\t\tstateStartedDtOptions: isEditing ? credential.getDateOptionsForIssueDate(viewModelDates.expirationDay) : {},\r\n\t\t\t\texpirationDtOptions: isEditing ? credential.getDateOptionsForExpirationDate(viewModelDates.stateStartedDay) : {}\r\n\t\t\t}, viewModelDates);\r\n\r\n\t\t\t/**\r\n\t\t\t * Determines if the employee credential is verified or not\r\n\t\t\t *\r\n\t\t\t * @param {Object} empCred The employee credential to check\r\n\t\t\t * @returns {boolean} is the EmpCred verified?\r\n\t\t\t */\r\n\t\t\tfunction isVerified(empCred) {\r\n\t\t\t\tvar ret = true;\r\n\r\n\t\t\t\tif (empCred.verifier == null) {\tret = false;\t} /* eslint-disable-line eqeqeq */\r\n\t\t\t\tif (empCred._verifiedDay === null) { ret = false; }\r\n\t\t\t\tlet name = ssObjectHlp.glean(credentialData, _=>_.verifier.name, null);\r\n\t\t\t\tif (name === null) { ret = false; }\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t//\tresolve all feature flags\r\n\t\t\t\tyield ssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags);\r\n\t\t\t})();\r\n\r\n\t\t\t// Listens for parent component to determine whether it's dirty or not\r\n\t\t\t$scope.$on('cred-parent-dirty-changed', (evt, data) => {\r\n\t\t\t\tcompareOriginalVal(data.parentIsDirty);\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.isRenewal', (newValue, oldValue) => {\r\n\t\t\t\tif (newValue === oldValue) { return; }\r\n\t\t\t\tlet _issuedReason = ssCredentialBusinessEngineSvc.issuedReasonByCredentialStatus(vm.credentialStatus, newValue);\r\n\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credential.data, { _issuedReason });\r\n\t\t\t\tObject.assign(credential.data, newCredentialState);\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.isVerified', (newValue, oldValue) => {\r\n\t\t\t\tif (newValue === oldValue) { return; }\r\n\t\t\t\tlet _verifiedDay = newValue ? moment().format('YYYY-MM-DD') : null;\r\n\t\t\t\tlet newCredentialState = {};\r\n\r\n\t\t\t\tvm.isVerified = newValue;\r\n\t\t\t\t// Sometimes this is null and I don't know from where yet so we get this. :D\r\n\t\t\t\tif (newValue == null) { /* eslint-disable-line eqeqeq */\r\n\t\t\t\t\tvm.isVerified = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnewCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credentialData, { _verifiedDay });\r\n\r\n\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.isGrantedForLife', (newValue, oldValue) => {\r\n\t\t\t\tif (newValue === oldValue) { return; }\r\n\r\n\t\t\t\tvm.expirationDay = '';\r\n\t\t\t\tlet _expirationDay = '';\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\t_expirationDay = moment(ssDateHlp.foreverFuture()).format('YYYY-MM-DD');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet _isGrantedForLife = newValue;\r\n\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credentialData, { _expirationDay, _isGrantedForLife });\r\n\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.stateStartedDay', (newValue, oldValue) => {\r\n\t\t\t\tif (newValue === oldValue) { return; }\r\n\t\t\t\tvm.expirationDtOptions = credential.getDateOptionsForExpirationDate(newValue);\r\n\t\t\t\tif (!(newValue instanceof Date)) { return; }\r\n\t\t\t\tlet _stateStartedDay = moment(newValue).format('YYYY-MM-DD');\r\n\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credentialData, { _stateStartedDay });\r\n\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.expirationDay', (newValue, oldValue) => {\r\n\t\t\t\tif (newValue === oldValue) { return; }\r\n\t\t\t\tvm.stateStartedDtOptions = credential.getDateOptionsForIssueDate(newValue);\r\n\t\t\t\tif (!(newValue instanceof Date)) { return; }\r\n\t\t\t\tlet _expirationDay = moment(newValue).format('YYYY-MM-DD');\r\n\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credentialData, { _expirationDay });\r\n\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.credentialStatus', (newCredentialStatus, oldCredentialStatus) => {\r\n\t\t\t\tif (credential == null) { return; }\r\n\t\t\t\tif (newCredentialStatus === oldCredentialStatus) { return; }\r\n\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t\treset(resetByCredentialStatus);\r\n\r\n\t\t\t\tvm.isInProgress = newCredentialStatus === credentialConstants.IN_PROGRESS;\r\n\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credentialData, {\r\n\t\t\t\t\t_issuedReason: ssCredentialBusinessEngineSvc.issuedReasonByCredentialStatus(newCredentialStatus, vm.isRenewal)\r\n\t\t\t\t}); // Changing the credential data that we will going to send back to server\r\n\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('credentialTypeId', (newCredentialType, oldCredentialType) => {\r\n\t\t\t\tif (newCredentialType === oldCredentialType) { return; }\r\n\t\t\t\treset(resetByCredentialStatus);\r\n\t\t\t\tvm.allCredentialStatuses = newCredentialType === credentialConstants.DRIVER_LICENSE ?\r\n\t\t\t\t\tallCredentialStatuses.filter(s => s.value !== credentialConstants.IN_PROGRESS) :\r\n\t\t\t\t\tallCredentialStatuses;\r\n\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('credentialId', (newCredentialId, oldCredentialId) => {\r\n\t\t\t\tif (newCredentialId === oldCredentialId) { return; }\r\n\t\t\t\tvm.credentialStatus = allCredentialStatuses.find(s => s.value === credentialConstants.ACTIVE).value;\r\n\t\t\t\treset(resetByCredentialStatus);\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('issuer', (newIssuer, oldIssuer) => {\r\n\t\t\t\t// TODO: needs some more love\r\n\t\t\t\tif (newIssuer === oldIssuer) { return; }\r\n\t\t\t\tif (newIssuer == null) { reset(resetByCredentialStatus); }\r\n\r\n\t\t\t\tif ((oldIssuer == null && newIssuer != null) || newIssuer === -1) {\r\n\t\t\t\t\tvm.credentialStatus = allCredentialStatuses.find(s => s.value === credentialConstants.ACTIVE).value;\r\n\t\t\t\t\tresetByCredentialStatus();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (newIssuer.id === oldIssuer.id) { return; }\r\n\t\t\t\tvm.credentialStatus = allCredentialStatuses.find(s => s.value === credentialConstants.ACTIVE).value;\r\n\r\n\t\t\t\treset(resetByCredentialStatus);\r\n\t\t\t\tcompareOriginalVal();\r\n\t\t\t});\r\n\r\n\t\t\tfunction reset() {\r\n\t\t\t\t[...arguments].forEach(arg => arg());\r\n\t\t\t}\r\n\r\n\t\t\tfunction resetByCredentialStatus() {\r\n\t\t\t\tObject.assign(vm, { stateStartedDay: '', expirationDay: '', isVerified: false, isGrantedForLife: false, isRenewal: false }); // Resetting the vm dates that are bound to UI\r\n\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(credentialData, {\r\n\t\t\t\t\t_stateStartedDay: '',\r\n\t\t\t\t\t_expirationDay: '',\r\n\t\t\t\t\t_isGrantedForLife: false,\r\n\t\t\t\t\t_issuedReason: credentialConstants.CREDENTIAL_NEW\r\n\t\t\t\t}); // Changing the credential data that we will going to send back to server\r\n\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t}\r\n\r\n\t\t\t// Checks VM properties against \"originalCopy\". If these checks pass and parent is not dirty, clear the save interrupter.\r\n\t\t\t// Otherwise register it.\r\n\t\t\tfunction compareOriginalVal(parentIsDirty){\r\n\t\t\t\tif ($scope.featureFlags['fc_enable_employee_module_save_interrupter']) {\r\n\t\t\t\t\tif (credentialData._expirationDay === originalCopy._expirationDay &&\r\n\t\t\t\t\t\tcredentialData._isGrantedForLife === originalCopy._isGrantedForLife &&\r\n\t\t\t\t\t\tcredentialData._stateStartedDay === originalCopy._stateStartedDay &&\r\n\t\t\t\t\t\tcredentialData._verifiedDay === originalCopy._verifiedDay && !parentIsDirty\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(credential);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tvalidateOr(expirationDay, isGrantedForLife) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t\tIf status is in Progress we don't want to trigger this validation\r\n\t\t\t\t\t\tbecause in that case tentative date is required.\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tif (vm.isInProgress) { return true; }\r\n\r\n\t\t\t\t\tlet baseMessage = `Please fill expiration date`;\r\n\t\t\t\t\tif (!expirationDay && !isGrantedForLife) {\r\n\t\t\t\t\t\treturn ($scope.credentialTypeId === credentialConstants.DRIVER_LICENSE) ? baseMessage : `${baseMessage} or select lifetime.`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tvalidateExpiration() {\r\n\t\t\t\t\t// If status is in progress we have to make sure expiration date is filled\r\n\t\t\t\t\t// NOTE: the test is in parens and compared to true because minification was returning the object when expiration day was not null\r\n\t\t\t\t\treturn (vm.isInProgress && !vm.expirationDay) === true ? 'Tentative completion date is required.' : true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvm.isVerified = isVerified(credentialData); // ensure that the isVerified flag is set properly\r\n\t\t}\r\n\t}\r\n\r\n\treturn new CredentialStatus(props, 'credential-status', config);\r\n}\r\n\r\n// #-- END Component (super-credential-status) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superCredentialStatus', credentialStatus);\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------------# //\r\n// #---- Component (super-credential-files) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfiles: '=',\r\n\tisUploading: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction credentialFiles() {\r\n\r\n\tclass CredentialFiles extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $window, $stateParams, ssAsync, ssFilenameHlp, ssToastHlp, ssCredentialDataAccessSvc) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst ACCEPTED_FILE_TYPES = ['.csv',\r\n\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n\t\t\t\t'application/vnd.ms-excel,application/pdf,application/msword',\r\n\t\t\t\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n\t\t\t];\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\taccept: ACCEPTED_FILE_TYPES.join(', '),\r\n\t\t\t};\r\n\r\n\t\t\tfunction validateFile(file) {\r\n\t\t\t\tconst errorMessages = [];\r\n\t\t\t\tif (file.name === '' || file.name === null || file.name === undefined) {\r\n\t\t\t\t\terrorMessages.push('The selected file does not have a name.');\r\n\t\t\t\t}\r\n\t\t\t\tif (file.size >= ((Math.pow(2, 20) * 50))) {\r\n\t\t\t\t\terrorMessages.push('The selected file cannot be larger than 50MB.');\r\n\t\t\t\t}\r\n\t\t\t\treturn errorMessages;\r\n\t\t\t}\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = {\r\n\t\t\t\tgetExtension(file) {\r\n\t\t\t\t\treturn ssFilenameHlp.getExtension(file.name);\r\n\t\t\t\t},\r\n\t\t\t\tgetIcon(file) {\r\n\t\t\t\t\treturn ssFilenameHlp.getIcon(go.getExtension(file));\r\n\t\t\t\t},\r\n\t\t\t\tdownload(file) {\r\n\t\t\t\t\tfile.isDownloading = true;\r\n\t\t\t\t\tssCredentialDataAccessSvc\r\n\t\t\t\t\t\t.downloadFile(file.fileId, $stateParams.employeeId)\r\n\t\t\t\t\t\t.then(success => {\r\n\t\t\t\t\t\t\tif (success != null) {\r\n\t\t\t\t\t\t\t\t$window.open(success._string, '_blank');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.finally(() => file.isDownloading = false);\r\n\t\t\t\t},\r\n\t\t\t\tdeleteFile(file) {\r\n\t\t\t\t\t$scope.$emit('cred-file-changed');\r\n\t\t\t\t\tfile.isDeleted = true;\r\n\t\t\t\t},\r\n\t\t\t\tsendFile(event) {\r\n\t\t\t\t\tlet file = event.target.files[0];\r\n\t\t\t\t\tlet validation = validateFile(file);\r\n\t\t\t\t\tif (validation.length) {\r\n\t\t\t\t\t\tssToastHlp.error(validation, 'Error', false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.isUploading = true;\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet uploadedFile = yield ssCredentialDataAccessSvc.uploadFile($stateParams.employeeId, file);\r\n\t\t\t\t\t\t\t$scope.files.push(fileForAssociation(uploadedFile));\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\t$scope.$emit('cred-file-changed');\r\n\t\t\t\t\t\t\t$scope.isUploading = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tfunction fileForAssociation(file) {\r\n\t\t\t\treturn { id: null, fileId: file.id, name: file.name || file.filename, isDeleted: false, createdUtc: new Date() };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new CredentialFiles(props, 'credential-files', config);\r\n}\r\n\r\n// #-- END Component (super-credential-files) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superCredentialFiles', credentialFiles);\r\n","import {\r\n\tComponent\r\n}\r\nfrom 'base-component';\r\n\r\n// #-----------------------------------------------# //\r\n// #---- Component (super-credential-add-edit) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tcredential: '=',\r\n\tsaveCredential: '<',\r\n\tcancelCredential: '<',\r\n\torg: '=',\r\n\tloggedInUserKey: '<',\r\n\tisCloning: '<?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction credentialAddEdit() {\r\n\r\n\tclass CredentialAddEdit extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $rootScope, ssToastHlp, ssObjectHlp, ssValidationHlp, ssModalSvc, ssAsync, ssCredentialBusinessEngineSvc, ssCredentialDataAccessSvc,ssCredentialViewModelFactorySvc, ssDateHlp, ssSaveInterrupterSvc,ssMultiInitiativeFeatureDetectorCCSvc) {\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false\r\n\t\t\t};\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst org = $scope.org;\r\n\t\t\tconst credential = $scope.credential;\r\n\t\t\tconst credentialData = $scope.credential.data;\r\n\t\t\tconst files = credentialData.files ? [...credentialData.files] : [];\r\n\t\t\tconst originalCopy = ssObjectHlp.deepFreeze(ssObjectHlp.deepCopy(\r\n\t\t\t\tcredentialData));\r\n\t\t\tconst loggedInUserKey = $scope.loggedInUserKey;\r\n\t\t\tconst isNew = credentialData._credentialId == null;\r\n\t\t\tconst credentialConstants = ssCredentialBusinessEngineSvc.credentialConstants;\r\n\t\t\tconst validator = $scope.validator = {\r\n\t\t\t\tlimit: ssValidationHlp.string({\r\n\t\t\t\t\tmaxLength: 100\r\n\t\t\t\t}),\r\n\t\t\t\tdlLimit: ssValidationHlp.string({\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 1,\r\n\t\t\t\t\tmaxLength: 100\r\n\t\t\t\t}),\r\n\t\t\t};\r\n\t\t\tlet credentialTypes = [];\r\n\r\n\t\t\tlet deletedIssuer = null;\r\n\r\n\t\t\t// get a copy of the issuers from the parent scope chain // TODO: refactor this please since using a parent lookup is an anti-pattern. Use one-way binding instead.\r\n\t\t\tconst stateIssuers = ssObjectHlp.deepCopy($rootScope.utils.findInParentScope(\r\n\t\t\t\t'stateIssuers', $scope)); // array of 3 issuer types; each type is an array of state/national issuers\r\n\t\t\tconst customIssuers = ssObjectHlp.deepCopy($rootScope.utils.findInParentScope(\r\n\t\t\t\t'customIssuers', $scope)); // array of custom issuers\r\n\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tisEdit: !isNew,\r\n\t\t\t\tcredentialTypeId: credentialData.credentialTypeId,\r\n\t\t\t\tcredentialConstants,\r\n\t\t\t\tcredentialId: credentialData._credentialId,\r\n\t\t\t\tisCustomCredential: parseInt(credentialData.credentialTypeId, 10) === 3,\r\n\t\t\t\tissuer: credentialData.issuer ? credentialData.issuer.id : null,\r\n\t\t\t\tissuersToLoad: [],\r\n\t\t\t\tselectedSubjects: [],\r\n\t\t\t\tcredentialNumber: credentialData._credentialNumber,\r\n\t\t\t\tloadingCredentialTypes: false,\r\n\t\t\t\tloadingIssuers: false,\r\n\t\t\t\tloadingCredentials: false,\r\n\t\t\t\tloadingSubjects: false,\r\n\t\t\t\tisUploading: false,\r\n\t\t\t\tfiles,\r\n\t\t\t\tchangeLockdown: false, // when an issuer or credential is deleted we have to prevent changes to the EmpCred\r\n\t\t\t\tdeletedIssuerLockdown: false, // when an issuer is deleted we need to lock things down so that we can prevent changes to major items\r\n\t\t\t\tdeletedCredentialLockdown: false, // when a credential type is deleted we need to lock things down to prevent changes to major items\r\n\t\t\t\tnewFileAdded: false,\r\n\t\t\t\tisDirty: false\r\n\t\t\t};\r\n\r\n\t\t\tvm.deletedIssuerLockdown = credentialData.issuer ? !ssDateHlp.isForeverFuture(\r\n\t\t\t\tcredentialData.issuer.deletedUtc) : false;\r\n\t\t\tvm.deletedCredentialLockdown = credentialData.credential ? !ssDateHlp.isForeverFuture(\r\n\t\t\t\tcredentialData.credential.deletedUtc) : false;\r\n\t\t\tvm.changeLockdown = vm.deletedCredentialLockdown || vm.deletedIssuerLockdown ||\r\n\t\t\t\t$scope.isCloning;\r\n\r\n\t\t\tfunction setDisableCredentialTypesBySelection(isCustom) {\r\n\t\t\t\tvar currentlyEnabledCredentialTypes = [];\r\n\r\n\t\t\t\tisCustom = (isCustom === true || isCustom === 1 || isCustom === '1');\r\n\t\t\t\tcredentialTypes.forEach(t => {\r\n\t\t\t\t\tif (isCustom === true && parseInt(t.id) === 3) {\r\n\t\t\t\t\t\tcurrentlyEnabledCredentialTypes.push(t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isCustom === false && parseInt(t.id) < 3) {\r\n\t\t\t\t\t\tcurrentlyEnabledCredentialTypes.push(t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn currentlyEnabledCredentialTypes;\r\n\t\t\t}\r\n\r\n\t\t\tssAsync(function*() {\r\n\r\n\t\t\t\t//\tresolve all feature flags\r\n\t\t\t\tyield ssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags);\r\n\r\n\t\t\t\tif (!isNew) {\r\n\t\t\t\t\tlet currentIssuer = null; // the issuer we are trying to render\r\n\r\n\t\t\t\t\t// Attempt to find the current emp cred issuer in the active issuers lists\r\n\t\t\t\t\tif (parseInt(vm.credentialTypeId, 10) === 3) {\r\n\t\t\t\t\t\t// Custom Issuer\r\n\t\t\t\t\t\tcurrentIssuer = customIssuers.find(issuer => issuer.id ===\r\n\t\t\t\t\t\t\tcredentialData.issuer.id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Not custom Issuer\r\n\t\t\t\t\t\tcurrentIssuer = stateIssuers.find(issuer => issuer.id ===\r\n\t\t\t\t\t\t\tcredentialData.issuer.id);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentIssuer == null) {\r\n\t\t\t\t\t\t// Issuer is deleted, so let's get the value from the DB\r\n\t\t\t\t\t\tcurrentIssuer = deletedIssuer = yield ssCredentialDataAccessSvc.getIssuerById(\r\n\t\t\t\t\t\t\tvm.issuer);\r\n\r\n\t\t\t\t\t\t// We have a deleted issuer so just force the array to be the deleted one, we can't do anything with the data at this point\r\n\t\t\t\t\t\tvm.issuersToLoad = [currentIssuer];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// bind it to the vm to render\r\n\t\t\t\t\tvm.issuer = currentIssuer.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvm.loadingCredentialTypes = true;\r\n\t\t\t\t\tcredentialTypes = yield ssCredentialDataAccessSvc.getCredentialTypes();\r\n\t\t\t\t\tcredential.credentialTypes = setDisableCredentialTypesBySelection(\r\n\t\t\t\t\t\tparseInt(vm.credentialTypeId, 10) === 3);\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t//> error('Error', error);\r\n\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loadingCredentialTypes = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.$watch('credential.data', (nv, ov) => {\r\n\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Listening for changes in super-credential-file\r\n\t\t\t\t$scope.$on('cred-file-changed', function() {\r\n\t\t\t\t\tvm.newFileAdded = true;\r\n\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('vm.credentialNumber', (nv, ov) => {\r\n\t\t\t\t\tif (nv === ov) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet _credentialNumber = nv && nv.length ? nv : null;\r\n\t\t\t\t\tlet model = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t\t_credentialNumber\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tObject.assign(credentialData, model);\r\n\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('vm.isCustomCredential', (isCustomCredentialType, ov) => {\r\n\t\t\t\t\tif (isCustomCredentialType === ov) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.credentialTypeId = null;\r\n\r\n\t\t\t\t\tcredential.credentialTypes = setDisableCredentialTypesBySelection(\r\n\t\t\t\t\t\tisCustomCredentialType === '1');\r\n\r\n\t\t\t\t\tvm.isCredentialTypeSelected = true; // we touched the S&N or Custom radios, so we can enable the cred type dropdown\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('vm.credentialTypeId', (newCredentialTypeId, ov) => {\r\n\t\t\t\t\tif (newCredentialTypeId == null) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Values change from old to new - reset the values\r\n\t\t\t\t\tif (newCredentialTypeId !== ov) {\r\n\t\t\t\t\t\tvm.issuer = -1;\r\n\t\t\t\t\t\treset(resetByIssuer, resetByCredentials);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// get issuers\r\n\t\t\t\t\tif (!vm.deletedIssuerLockdown) {\r\n\t\t\t\t\t\t// if the issuer isn't deleted go get the issuers on the credential type change\r\n\t\t\t\t\t\tvm.issuersToLoad = parseInt(vm.credentialTypeId, 10) === 3 ?\r\n\t\t\t\t\t\t\tcustomIssuers : stateIssuers[newCredentialTypeId];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!vm.issuersToLoad.length) {\r\n\t\t\t\t\t\tvm.issuer = -1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (org._address && vm.issuersToLoad.length) {\r\n\t\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\t\t// Pre-select the issuer that is most relevant to them\r\n\t\t\t\t\t\t\tlet defaultIssuer = vm.issuersToLoad.find(issuer => issuer._stateId ===\r\n\t\t\t\t\t\t\t\t$scope.org._address.state);\r\n\t\t\t\t\t\t\tif (defaultIssuer == null) {\r\n\t\t\t\t\t\t\t\t// we didn't find one in this org's state. Default to first in list\r\n\t\t\t\t\t\t\t\tdefaultIssuer = vm.issuersToLoad[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (defaultIssuer != null) {\r\n\t\t\t\t\t\t\t\tvm.issuer = defaultIssuer.id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (vm.issuer !== -1) {\r\n\t\t\t\t\t\t\t// we're editing an existing credential, see if the issuer is in the list of issuers\r\n\t\t\t\t\t\t\tlet foundIssuer = vm.issuersToLoad.find(v => v.id === vm.issuer);\r\n\r\n\t\t\t\t\t\t\tvm.deletedIssuerLockdown = false;\r\n\r\n\t\t\t\t\t\t\t// if the found issuer is deleted lock things down.  If the user just change the dropdown then that's cool.\r\n\t\t\t\t\t\t\tif (foundIssuer == null) {\r\n\t\t\t\t\t\t\t\t// lock down all of the dropdowns since we can't change anything that is deleted\r\n\t\t\t\t\t\t\t\tvm.deletedIssuerLockdown = true;\r\n\r\n\t\t\t\t\t\t\t\t// add the deleted issuer to the list of issuers so the dropdown can populate\r\n\t\t\t\t\t\t\t\tvm.issuersToLoad.push(deletedIssuer);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (vm.issuersToLoad.length) {\r\n\t\t\t\t\t\t// default to first in list\r\n\t\t\t\t\t\tvm.issuer = vm.issuersToLoad[0].id;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Push the changed value onto the credential\r\n\t\t\t\t\tcredentialData.credentialTypeId = newCredentialTypeId;\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('vm.issuer', (nv, ov) => {\r\n\t\t\t\t\tif (nv == null || nv === -1) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Values change from old to new reset the values\r\n\t\t\t\t\tif (nv !== ov && isNew) {\r\n\t\t\t\t\t\treset(resetByIssuer, resetByCredentials);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvm.loadingSubjects = vm.loadingCredentials = true;\r\n\r\n\t\t\t\t\t\t\tlet credentials = yield ssCredentialDataAccessSvc.getCredentialsByIssuer(\r\n\t\t\t\t\t\t\t\tnv);\r\n\t\t\t\t\t\t\tlet subjects = [];\r\n\t\t\t\t\t\t\t// if the credential type is DriverLicense UI is automatically setting the credential Id in this model.\r\n\t\t\t\t\t\t\t// We don't need subject so we are not going to make the call to get subjects.\r\n\t\t\t\t\t\t\tif (vm.credentialTypeId === credentialConstants.DRIVER_LICENSE) {\r\n\t\t\t\t\t\t\t\tlet _credentialId = vm.credentialId = credentials.length ?\r\n\t\t\t\t\t\t\t\t\tcredentials[0].id : -1;\r\n\t\t\t\t\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t\t\t\t\t_credentialId\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsubjects = yield ssCredentialDataAccessSvc.getSubjectsByIssuer(\r\n\t\t\t\t\t\t\t\t\tnv);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!isNew && vm.deletedCredentialLockdown) {\r\n\t\t\t\t\t\t\t\t// Put the current credential's credential in the list since deleted credentials do not get returned from the getMany call\r\n\t\t\t\t\t\t\t\tcredentials.push({\r\n\t\t\t\t\t\t\t\t\t_name: $scope.credential.data.credential.name,\r\n\t\t\t\t\t\t\t\t\tid: $scope.credential.data.credential.id\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet newCredentialVm = ssCredentialViewModelFactorySvc.updatedCredentialViewModelState(\r\n\t\t\t\t\t\t\t\tcredential, {\r\n\t\t\t\t\t\t\t\t\tcredentials, subjects\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tObject.assign(credential, newCredentialVm);\r\n\t\t\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\r\n\t\t\t\t\t\t\t$scope.$applyAsync(() => vm.selectedSubjects = subjects.filter(\r\n\t\t\t\t\t\t\t\tsubject => credentialData._subjectIds.includes(subject.id)));\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t//> error('Error', error);\r\n\t\t\t\t\t\t\tssToastHlp.error(error.message, 'Error', false);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.loadingSubjects = vm.loadingCredentials = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('vm.credentialId', (nv, ov) => {\r\n\t\t\t\t\tif (nv === null) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!isNew && nv !== ov) {\r\n\t\t\t\t\t\treset(resetByCredentials);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet model = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t\t_credentialId: nv\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tObject.assign(credentialData, model);\r\n\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watchCollection('vm.selectedSubjects', (nv, ov) => {\r\n\t\t\t\t\tif (nv === ov) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet model = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t\t_subjectIds: nv.map(x => x.id)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tObject.assign(credentialData, model);\r\n\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\t\t\t\t});\r\n\t\t\t})();\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tsaveCredential() {\r\n\t\t\t\t\t\t// 1. We are new\r\n\t\t\t\t\t\t// OR 2. There is no verify\r\n\t\t\t\t\t\t// OR 3. the verifier is the same\r\n\t\t\t\t\t\t// OR 4. the object is the same\r\n\t\t\t\t\t\t// OR 5. the user has the Verify perm\r\n\t\t\t\t\t\tif (isNew ||\r\n\t\t\t\t\t\t\tcredentialData.verifier == null ||\r\n\t\t\t\t\t\t\tssCredentialBusinessEngineSvc.isVerifierValid(credentialData,\r\n\t\t\t\t\t\t\t\tloggedInUserKey) ||\r\n\t\t\t\t\t\t\tObject.is(JSON.stringify(originalCopy), JSON.stringify(credentialData)) ||\r\n\t\t\t\t\t\t\t$rootScope.isPermitted.employeeCredentials.verify) {\r\n\r\n\t\t\t\t\t\t\tif ($rootScope.isPermitted.employeeCredentials.verify !== true) {\r\n\t\t\t\t\t\t\t\tdelete credentialData._verifiedDay;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t$scope.saveCredential(credentialData, vm.files);\r\n\t\t\t\t\t\t\tvm.deletedIssuerLockdown = false;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Following if condition is applicable only\r\n\t\t\t\t\t\t\t// 1. User is Editing the existing credential.\r\n\t\t\t\t\t\t\t// AND 2. User making an edit is different then person who verified the credential.\r\n\t\t\t\t\t\t\t// AND 3. If user has made any change to the record, object values are different.\r\n\t\t\t\t\t\t\t// AND 4. User does not have the Verify permission\r\n\r\n\t\t\t\t\t\t\tvar warningTemplateConfig = {\r\n\t\t\t\t\t\t\t\ttitle: 'Credential was verified',\r\n\t\t\t\t\t\t\t\tcontent: 'This credential was previously marked as verified, but is no longer due to your recent edit.',\r\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\r\n\t\t\t\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tssModalSvc.showStandard(warningTemplateConfig).then(() => {\r\n\t\t\t\t\t\t\t\tlet newCredentialState = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t\t\t\t\t_verifiedDay: null\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tObject.assign(credentialData, newCredentialState);\r\n\t\t\t\t\t\t\t\tregisterSaveIntIfDirtyOrNew();\r\n\r\n\t\t\t\t\t\t\t\tif ($rootScope.isPermitted.employeeCredentials.verify !== true) {\r\n\t\t\t\t\t\t\t\t\tdelete credentialData._verifiedDay;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t$scope.saveCredential(credentialData, vm.files);\r\n\t\t\t\t\t\t\t\tvm.deletedIssuerLockdown = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear(credential);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcancelAddingCredential() {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear(credential);\r\n\t\t\t\t\t\t$scope.cancelCredential();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalidateCredentialNumber(num) {\r\n\t\t\t\t\t\treturn vm.credentialTypeId === vm.credentialConstants.DRIVER_LICENSE ?\r\n\t\t\t\t\t\t\tvalidator.dlLimit(num) :\r\n\t\t\t\t\t\t\tvalidator.limit(num);\r\n\t\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tfunction reset() {\r\n\t\t\t\t[...arguments].forEach(arg => arg());\r\n\t\t\t}\r\n\r\n\t\t\tfunction resetByIssuer() {\r\n\t\t\t\tlet credentials = [];\r\n\t\t\t\tlet subjects = [];\r\n\t\t\t\tlet _credentialId = null;\r\n\t\t\t\tvm.credentialId = null;\r\n\t\t\t\tlet state = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t_credentialId\r\n\t\t\t\t\t});\r\n\t\t\t\tlet model = ssCredentialViewModelFactorySvc.updatedCredentialViewModelState(\r\n\t\t\t\t\tcredential, {\r\n\t\t\t\t\t\tcredentials, subjects\r\n\t\t\t\t\t});\r\n\t\t\t\tObject.assign(credential, model); // Updating View Model part of the Object\r\n\t\t\t\tObject.assign(credentialData, state); // Updating the reset part of data model\r\n\t\t\t}\r\n\r\n\t\t\tfunction registerSaveIntIfDirtyOrNew() {\r\n\t\t\t\tif ($scope.featureFlags['fc_enable_employee_module_save_interrupter']) {\r\n\t\t\t\t\t// If new credential register interrupter\r\n\t\t\t\t\tif (isNew) {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(credential);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Existing Credential:\r\n\t\t\t\t// Check all fields tied to VM, if they match the 'original copy' and no new files were added, don't register or set dirty\r\n\t\t\t\t// back to false\r\n\t\t\t\tif (!checkIfCredIsDirty()) {\r\n\t\t\t\t\t$scope.$broadcast('cred-parent-dirty-changed', {parentIsDirty: false});\r\n\t\t\t\t\t// If there is something that differs from the original copy, broadcast down tree to tell super-credential-status that\r\n\t\t\t\t\t// its parent is dirty\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$scope.$broadcast('cred-parent-dirty-changed', {parentIsDirty: true});\r\n\t\t\t\t\tssSaveInterrupterSvc.register(credential);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction checkIfCredIsDirty() {\r\n\t\t\t\tif (!isNew && originalCopy.credential.credentialTypeId === parseInt(vm.credentialTypeId) &&\r\n\t\t\t\t\toriginalCopy.credential.id === vm.credentialId &&\r\n\t\t\t\t\tJSON.stringify(originalCopy._subjectIds) === JSON.stringify(\r\n\t\t\t\t\t\tcredentialData._subjectIds) &&\r\n\t\t\t\t\toriginalCopy._credentialNumber === credentialData._credentialNumber &&\r\n\t\t\t\t\toriginalCopy.files.length === vm.files.length && !vm.newFileAdded\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tfunction resetByCredentials() {\r\n\t\t\t\tlet _credentialNumber = null;\r\n\t\t\t\tlet _subjectIds = [];\r\n\t\t\t\tvm.selectedSubjects = [];\r\n\t\t\t\tvm.credentialNumber = null;\r\n\t\t\t\tlet state = ssCredentialBusinessEngineSvc.updatedCredentialState(\r\n\t\t\t\t\tcredentialData, {\r\n\t\t\t\t\t\t_credentialNumber, _subjectIds\r\n\t\t\t\t\t});\r\n\t\t\t\tObject.assign(credentialData, state);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn new CredentialAddEdit(props, 'credential-add-edit', config);\r\n}\r\n\r\n// #-- END Component (super-credential-add-edit) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superCredentialAddEdit',\r\n\tcredentialAddEdit);\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------# //\r\n// #---- Component (super-credential) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tcredential: '=',\r\n\torg: '=',\r\n\tcurrentlyEditing: '=',\r\n\tdeleteCredential: '=',\r\n\tsaveCredential: '='\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction credential() {\r\n\r\n\tclass Credential extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $window, moment, ssFilenameHlp, ssAsync, $stateParams, ssToastHlp, ssDateHlp, ssModalSvc,\r\n\t\t\tssCredentialBusinessEngineSvc, ssCredentialDataAccessSvc, ssCredentialViewModelFactorySvc) {\r\n\r\n\t\t\tconst org = $scope.org;\r\n\t\t\tconst cred = $scope.credential;\r\n\t\t\tconst status = ssCredentialBusinessEngineSvc.getCredentialStatus(cred, moment());\r\n\t\t\tconst credentialConstants = ssCredentialBusinessEngineSvc.credentialConstants;\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tisProcessing: false,\r\n\t\t\t\tisCloning: false,\r\n\t\t\t\tcredentialConstants,\r\n\t\t\t\torg,\r\n\t\t\t\tcredentialBeingEdited: null,\r\n\t\t\t\tdeletedIssuer: false,\r\n\t\t\t\tdeletedCredentialType: false\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tonEdit,\r\n\t\t\t\tonRenew,\r\n\t\t\t\tonMakeActive,\r\n\t\t\t\tonDelete,\r\n\t\t\t\tsaveCredential,\r\n\t\t\t\tcancelCredential,\r\n\t\t\t\tdownloadFile,\r\n\t\t\t\texpiresSoon,\r\n\t\t\t\tisExpired,\r\n\t\t\t\tgetExpirationLabel,\r\n\t\t\t\tgetSubjects,\r\n\t\t\t\tisForeverFuture,\r\n\t\t\t\tisRenewed,\r\n\t\t\t\tshowDate,\r\n\t\t\t\tgetIcon(file) {\r\n\t\t\t\t\treturn ssFilenameHlp.getIcon(ssFilenameHlp.getExtension(file.name));\r\n\t\t\t\t},\r\n\t\t\t\t/**\r\n\t\t\t\t * Is the credential active and have active dates?\r\n\t\t\t\t */\r\n\t\t\t\thasActiveDates() {\r\n\t\t\t\t\treturn (status.value === credentialConstants.ACTIVE || status.value === credentialConstants.NOT_ACTIVE) && (cred._stateStartedDay || cred._expirationDay || cred._verifiedDay);\r\n\t\t\t\t},\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Is the credential active and have in progress dates?\r\n\t\t\t\t */\r\n\t\t\t\thasInProgressDates() {\r\n\t\t\t\t\treturn status.value === credentialConstants.IN_PROGRESS;\r\n\t\t\t\t},\r\n\t\t\t\tshowActions() {\r\n\t\t\t\t\tlet perms = $scope.$root.isPermitted.employeeCredentials;\r\n\t\t\t\t\treturn perms.edit || perms.softDelete;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// Check the Employee Credential for a deleted CredentialType and Issuer\r\n\t\t\t// update this when we get the actual attributes from the updated data call.\r\n\t\t\tvm.deletedCredentialType = !ssDateHlp.isForeverFuture(cred._credential.deletedUtc);\r\n\t\t\tvm.deletedIssuer = !ssDateHlp.isForeverFuture(cred._credential.issuer.deletedUtc);\r\n\r\n\t\t\t/**\r\n\t\t\t * Downloads the file\r\n\t\t\t */\r\n\t\t\tfunction downloadFile(file) {\r\n\t\t\t\tfile.isDownloading = true;\r\n\t\t\t\tssCredentialDataAccessSvc.downloadFile(file.fileId, $stateParams.employeeId)\r\n\t\t\t\t\t.then(success => {\r\n\t\t\t\t\t\tif (success != null) {\r\n\t\t\t\t\t\t\t$window.open(success._string, '_blank');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.finally(() => file.isDownloading = false);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Get Expiration Date label\r\n\t\t\t */\r\n\t\t\tfunction getExpirationLabel() {\r\n\t\t\t\tif (ssCredentialBusinessEngineSvc.isExpired(cred, moment())) { return 'Expired'; }\r\n\t\t\t\tif (ssCredentialBusinessEngineSvc.isExpiring(cred, moment())) { return 'Expires Soon'; }\r\n\t\t\t\treturn 'Expires';\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Does the credential expire soon?\r\n\t\t\t */\r\n\t\t\tfunction expiresSoon() {\r\n\t\t\t\treturn ssCredentialBusinessEngineSvc.isExpiring(cred, moment());\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t *  Is the credential Expired?\r\n\t\t\t*/\r\n\t\t\tfunction isExpired() {\r\n\t\t\t\treturn ssCredentialBusinessEngineSvc.isExpired(cred, moment());\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Comma separate that list of subjects\r\n\t\t\t */\r\n\t\t\tfunction getSubjects() {\r\n\t\t\t\treturn cred._subjects.map(s => s.name).join(', ');\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Is the credential forever future?\r\n\t\t\t */\r\n\t\t\tfunction isForeverFuture() {\r\n\t\t\t\treturn ssDateHlp.isForeverFuture(cred._expirationDay);\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Is the credential a renewal?\r\n\t\t\t */\r\n\t\t\tfunction isRenewed() {\r\n\t\t\t\treturn cred._issuedReason === credentialConstants.CREDENTIAL_RENEWED;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Show date in org timezone relative\r\n\t\t\t * @param d Date to set relative to the org\r\n\t\t\t */\r\n\t\t\tfunction showDate(d) {\r\n\t\t\t\treturn moment(d).format('MM/DD/YYYY');\r\n\t\t\t}\r\n\r\n\t\t\tfunction onDelete() {\r\n\t\t\t\tvar deleteTemplateConfig = {\r\n\t\t\t\t\ttitle: 'Delete Credential',\r\n\t\t\t\t\tcontent: 'Are you sure you want to delete this credential?',\r\n\t\t\t\t\tprimaryText: 'Continue',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\t\t\t\tssModalSvc.showDestructive(deleteTemplateConfig).then(() => {\r\n\t\t\t\t\tvm.isProcessing = true;\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet deletedCredential = yield cred.$remove();\r\n\t\t\t\t\t\t\tif (deletedCredential) {\r\n\t\t\t\t\t\t\t\t$scope.deleteCredential(cred);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.isProcessing = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction onRenew() {\r\n\t\t\t\tsetupCredentialForProcessing(() => ssCredentialViewModelFactorySvc.renew(cred));\r\n\t\t\t\tvm.isCloning = true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction onMakeActive() {\r\n\t\t\t\tsetupCredentialForProcessing(() => ssCredentialViewModelFactorySvc.makeActive(cred));\r\n\t\t\t\tvm.isCloning = true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction onEdit() {\r\n\t\t\t\tsetupCredentialForProcessing(() => ssCredentialViewModelFactorySvc.create(cred));\r\n\t\t\t}\r\n\r\n\t\t\tfunction cancelCredential() {\r\n\t\t\t\tvm.credentialBeingEdited = $scope.currentlyEditing = null;\r\n\t\t\t\tvm.isCloning = false;\r\n\t\t\t}\r\n\r\n\t\t\tfunction saveCredential(credToSave, files) {\r\n\t\t\t\tvm.isProcessing = true;\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet credentialFromServer = yield $scope.saveCredential(cred, cred._employee, credToSave, files);\r\n\t\t\t\t\t\tif (credentialFromServer) {\r\n\t\t\t\t\t\t\tvm.credentialBeingEdited = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.isProcessing = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\r\n\t\t\tfunction setupCredentialForProcessing(handler) {\r\n\t\t\t\tvm.isProcessing = true;\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet credentialFromServer = yield ssCredentialDataAccessSvc.getEmployeeCredentialById(cred._employee, cred);\r\n\t\t\t\t\t\tif (credentialFromServer) {\r\n\t\t\t\t\t\t\t$scope.currentlyEditing = $scope.credential;\r\n\t\t\t\t\t\t\tlet credentialVm = handler();\r\n\t\t\t\t\t\t\tvm.credentialBeingEdited = credentialVm;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.isProcessing = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn new Credential(props, 'credential', config);\r\n}\r\n\r\n// #-- END Component (super-credential) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superCredential', credential);\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (super-assignment-list) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\teditMode: '=',\r\n\temployee: '=',\r\n\torg: '=',\r\n\tpositions: '=',\r\n\tonLoad: '&'\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction assignmentList() {\r\n\r\n\tclass AssignmentList extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, ssAsync, ssAssignmentApi, ssDateByOrgHlp, ssDateHlp, ssModalSvc, ssToastHlp) {\r\n\r\n\t\t\tconst emp = $scope.employee;\r\n\t\t\tconst positions = $scope.positions;\r\n\t\t\tconst org = $scope.org;\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tloading: true,\r\n\t\t\t\teditingId: null,\r\n\t\t\t\tpermissions: emp.$permitted.props,\r\n\t\t\t\tpastPositionsExpanded: false,\r\n\t\t\t\tpastOtherPositionsExpanded: false,\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\tvalidate: () => {\r\n\t\t\t\t\t// if not currently in edit mode or we're loading then don't validate\r\n\t\t\t\t\tif (vm.loading || !vm.editMode) { return true; }\r\n\r\n\t\t\t\t\t// assuming descending order\r\n\t\t\t\t\t// only need to verify overlapping primary positions\r\n\t\t\t\t\tconst primaryPositions = positions.filter(p => p.assignment._isPrimary);\r\n\r\n\t\t\t\t\t// clear errors\r\n\t\t\t\t\tprimaryPositions.forEach(p => p.hasError = false);\r\n\r\n\t\t\t\t\t// we don't have overlapping dates if we don't have 2 or more positions\r\n\t\t\t\t\tif (primaryPositions.length < 2) { return true; }\r\n\r\n\t\t\t\t\t// sort them\r\n\t\t\t\t\tprimaryPositions.sort((a, b) => new Date(b._startDate) - new Date(a._startDate));\r\n\t\t\t\t\tprimaryPositions.sort((a, b) => new Date(b.assignment._createdUtc) - new Date(a.assignment._createdUtc));\r\n\t\t\t\t\tprimaryPositions.sort((a, b) => new Date(b.assignment._startDateUtc) - new Date(a.assignment._startDateUtc));\r\n\r\n\t\t\t\t\t// test overlapping dates. List is desc. Start on the second and compare detail._endDate with the after._startDate\r\n\t\t\t\t\tfor (let i = 1; i < primaryPositions.length; i++) {\r\n\t\t\t\t\t\tconst current = primaryPositions[i];\r\n\t\t\t\t\t\tconst future = primaryPositions[i - 1];\r\n\t\t\t\t\t\tif (moment(current._endDate).isAfter(moment(future._startDate))) {\r\n\t\t\t\t\t\t\tcurrent.hasError = true;\r\n\t\t\t\t\t\t\tfuture.hasError = true;\r\n\t\t\t\t\t\t\treturn 'This employee cannot have overlapping primary assignments.';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\taddPrimary() {\r\n\t\t\t\t\tconst primaryPositions = positions.filter(p => p.assignment._isPrimary);\r\n\t\t\t\t\tconst latestPrimaryPosition = primaryPositions[0];\r\n\t\t\t\t\tlet startDate = null;\r\n\t\t\t\t\t// latest assignment can be undefined when user does not have any assignment and setting up new one.\r\n\t\t\t\t\tif (latestPrimaryPosition) {\r\n\t\t\t\t\t\tstartDate = ssDateHlp.isForeverFuture(latestPrimaryPosition._endDate) ? nextDay(latestPrimaryPosition._startDate) : nextDay(latestPrimaryPosition._endDate);\r\n\r\n\t\t\t\t\t\tif (ssDateHlp.isForeverFuture(startDate)) { startDate = null; }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.newPrimaryPosition = makePosition(true, startDate);\r\n\t\t\t\t\tvm.editingId = 'new';\r\n\t\t\t\t\tpositions.push(vm.newPrimaryPosition);\r\n\t\t\t\t\tresetErrors();\r\n\t\t\t\t},\r\n\r\n\t\t\t\taddSecondary() {\r\n\t\t\t\t\tvm.newPosition = makePosition();\r\n\t\t\t\t\tvm.editingId = 'new';\r\n\t\t\t\t\tpositions.push(vm.newPosition);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcancelPosition(position) {\r\n\t\t\t\t\tposition.isUpdating = true;\r\n\t\t\t\t\tif (position.id == null) {\r\n\t\t\t\t\t\t// remove from list new position\r\n\t\t\t\t\t\tlet index = positions.findIndex(p => p.id === position.id && p.assignment._isPrimary === position.assignment._isPrimary);\r\n\t\t\t\t\t\tif (index >= 0) { positions.splice(index, 1); }\r\n\r\n\t\t\t\t\t\tif (position.assignment._isPrimary) {\r\n\t\t\t\t\t\t\tvm.newPrimaryPosition = null;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvm.newPosition = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvm.editingId = null; // reset\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// revert changes on existing position\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield position.$revert();\r\n\t\t\t\t\t\t\tposition.assignment._details = [];\r\n\t\t\t\t\t\t\t// revert the details\r\n\t\t\t\t\t\t\tyield getDetails(position);\r\n\t\t\t\t\t\t\tvm.editingId = null; // reset\r\n\t\t\t\t\t\t\tresetErrors();\r\n\t\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\t\tssToastHlp.error('there was a problem retrieving assignment details');\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tposition.isUpdating = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t},\r\n\r\n\t\t\t\tgetMode(position) {\r\n\t\t\t\t\tif (!vm.editMode) { return 'view'; }\r\n\r\n\t\t\t\t\t// we are in edit mode for the tab\r\n\t\t\t\t\tif (vm.editingId === 'delete') { return 'delete'; }\r\n\t\t\t\t\tif (vm.editingId === 'new') {\r\n\t\t\t\t\t\tif (position.id == null) {\r\n\t\t\t\t\t\t\treturn 'new';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn 'view';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// not deleting or adding a new one. Test to see if we are currently editing a position\r\n\r\n\t\t\t\t\tif (vm.editingId == null || position == null || vm.editingId === position.id) { return 'edit'; }\r\n\r\n\t\t\t\t\t// return view because if we are here that means that vm.editingId is a GUID which means we are editing already\r\n\t\t\t\t\treturn 'view';\r\n\t\t\t\t},\r\n\r\n\t\t\t\tremovePosition(position, list = null) {\r\n\t\t\t\t\tlet confirmation = {\r\n\t\t\t\t\t\ttitle: 'Are you sure?',\r\n\t\t\t\t\t\tcontent: 'Are you sure you want to delete this assignment?',\r\n\t\t\t\t\t\tprimaryText: 'Delete Assignment',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t\t};\r\n\t\t\t\t\tssModalSvc.showDestructive(confirmation).then(() => {\r\n\t\t\t\t\t\tlet index;\r\n\r\n\t\t\t\t\t\tif (list != null) {\r\n\t\t\t\t\t\t\tindex = list.findIndex(p => p.id === position.id);\r\n\t\t\t\t\t\t\tif (index >= 0) { list.splice(index, 1); }\r\n\t\t\t\t\t\t} else if (position.id != null) {\r\n\t\t\t\t\t\t\tif (position.assignment._isPrimary) {\r\n\t\t\t\t\t\t\t\tvm.primaryPosition = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tindex = positions.findIndex(p => p.id === position.id && p.assignment._isPrimary === position.assignment._isPrimary);\r\n\t\t\t\t\t\tif (index >= 0) { positions.splice(index, 1); }\r\n\r\n\t\t\t\t\t\tvm.editingId = 'delete'; // we can delete multiple\r\n\t\t\t\t\t\tresetErrors();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t$scope.$on('assignment-edit', (evt, id) => {\r\n\t\t\t\tvm.editingId = id;\r\n\t\t\t\tevt.stopPropagation();\r\n\t\t\t});\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\tfunction load(newEditMode) {\r\n\t\t\t\t// reset new positions\r\n\t\t\t\tvm.newPosition = null;\r\n\t\t\t\tvm.newPrimaryPosition = null;\r\n\t\t\t\tvm.editMode = newEditMode;\r\n\r\n\t\t\t\t// force view mode if we don't have edit permissions\r\n\t\t\t\tif (!vm.permissions.assignments.edit) {\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tfor (let i = 0; i < positions.length; i++) {\r\n\t\t\t\t\t\t\tlet position = positions[i];\r\n\r\n\t\t\t\t\t\t\t// position <-> assignment is 1-1\r\n\t\t\t\t\t\t\tif (position._assignments[0] != null) {\r\n\t\t\t\t\t\t\t\tyield getDetails(position);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (positions.length > 1) {\r\n\t\t\t\t\t\t\t// sort descending\r\n\t\t\t\t\t\t\tpositions.sort((a, b) => new Date(b._startDate) - new Date(a._startDate));\r\n\t\t\t\t\t\t\tpositions.sort((a, b) => new Date(b.assignment._createdUtc) - new Date(a.assignment._createdUtc));\r\n\t\t\t\t\t\t\tpositions.sort((a, b) => new Date(b.assignment._startDateUtc) - new Date(a.assignment._startDateUtc));\r\n\r\n\t\t\t\t\t\t\tconst primary = positions.filter(p => p.assignment._isPrimary);\r\n\r\n\t\t\t\t\t\t\tif (primary.length > 1) {\r\n\t\t\t\t\t\t\t\t// add any date picker options if needed\r\n\t\t\t\t\t\t\t\tlet lastIndex = primary.length - 1;\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < primary.length; i++) {\r\n\t\t\t\t\t\t\t\t\tlet future, past, d;\r\n\t\t\t\t\t\t\t\t\tlet current = primary[i];\r\n\t\t\t\t\t\t\t\t\tcurrent.dateOptions = {};\r\n\r\n\t\t\t\t\t\t\t\t\t// need start options on all except the last index\r\n\t\t\t\t\t\t\t\t\tif (i < lastIndex) {\r\n\t\t\t\t\t\t\t\t\t\tpast = primary[i + 1]; // the next past position is the index + 1\r\n\r\n\t\t\t\t\t\t\t\t\t\td = new Date(ssDateByOrgHlp.startOfDayRelativeTo(moment(past._endDate).startOf('day'), org));\r\n\t\t\t\t\t\t\t\t\t\t// add 1 day\r\n\t\t\t\t\t\t\t\t\t\td = moment(d).add(1, 'days').toDate();\r\n\r\n\t\t\t\t\t\t\t\t\t\tcurrent.dateOptions.minDate = d;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// need end options on all except the first index\r\n\t\t\t\t\t\t\t\t\tif (i > 0) {\r\n\t\t\t\t\t\t\t\t\t\tfuture = primary[i - 1]; // the next future position is the index - 1\r\n\r\n\t\t\t\t\t\t\t\t\t\td = new Date(ssDateByOrgHlp.startOfDayRelativeTo(moment(future._startDate).startOf('day'), org));\r\n\t\t\t\t\t\t\t\t\t\t// subtract 1 day\r\n\t\t\t\t\t\t\t\t\t\td = moment(d).subtract(1, 'days').toDate();\r\n\r\n\t\t\t\t\t\t\t\t\t\tcurrent.dateOptions.maxDate = d;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcreatePositionBuckets();\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t//> error('Error', error);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\t// $scope.onLoad({$loaded: true});\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t};\r\n\r\n\t\t\tfunction getDetails(position) {\r\n\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\tlet assignment = position._assignments[0];\r\n\t\t\t\t\t// get the details and attach to assignment\r\n\t\t\t\t\tlet a = yield ssAssignmentApi.getAssignment({\r\n\t\t\t\t\t\tid: position.id,\r\n\t\t\t\t\t\tassignmentId: assignment.id,\r\n\t\t\t\t\t\tinclude: 'details'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// copy the permissions and details over to the position's assignment\r\n\t\t\t\t\tassignment.$permitted = a.$permitted;\r\n\t\t\t\t\tassignment._details = a._details;\r\n\r\n\t\t\t\t\t// put the value from the mutator on the assignment because we may need to change it\r\n\t\t\t\t\t// assignment.jobType = position.jobType;\r\n\r\n\t\t\t\t\tposition.assignment = assignment;\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\r\n\t\t\tfunction createPositionBuckets() {\r\n\t\t\t\t// create buckets for the primary positions\r\n\t\t\t\tvm.primaryPosition = positions.find(p => p.assignment._isPrimary && ssDateByOrgHlp.isCurrent({ obj: p, fromProp: '_startDate', toProp: '_endDate', org }));\r\n\t\t\t\tvm.futurePrimaryPositions = positions.filter(p => p.assignment._isPrimary && ssDateByOrgHlp.isInFuture({ obj: p, fromProp: '_startDate', toProp: '_endDate', org }));\r\n\t\t\t\tvm.pastPositions = positions.filter(p => p.assignment._isPrimary && ssDateByOrgHlp.isInPast({ obj: p, fromProp: '_startDate', toProp: '_endDate', org }));\r\n\r\n\t\t\t\t// create buckets for the secondary positions\r\n\t\t\t\tvm.otherPositions = positions.filter(p => !p.assignment._isPrimary && ssDateByOrgHlp.isCurrent({ obj: p, fromProp: '_startDate', toProp: '_endDate', org }));\r\n\t\t\t\tvm.futureOtherPositions = positions.filter(p => !p.assignment._isPrimary && ssDateByOrgHlp.isInFuture({ obj: p, fromProp: '_startDate', toProp: '_endDate', org }));\r\n\t\t\t\tvm.pastOtherPositions = positions.filter(p => !p.assignment._isPrimary && ssDateByOrgHlp.isInPast({ obj: p, fromProp: '_startDate', toProp: '_endDate', org }));\r\n\t\t\t}\r\n\r\n\t\t\tfunction makePosition(isPrimary = false, startDate = null) {\r\n\t\t\t\tlet date = ssDateHlp.foreverPast();\r\n\t\t\t\t// start date will come in as moment object or null.\r\n\t\t\t\t// extract the Year, Month and Date from it generate start date relative to org\r\n\t\t\t\tif (startDate) {\r\n\t\t\t\t\tdate = ssDateByOrgHlp.startOfDayRelativeTo(moment({\r\n\t\t\t\t\t\tyears: startDate.get('year'),\r\n\t\t\t\t\t\tmonths: startDate.get('month'),\r\n\t\t\t\t\t\tdate: startDate.get('date')\r\n\t\t\t\t\t}), org);\r\n\t\t\t\t}\r\n\t\t\t\tlet endDate = ssDateHlp.foreverFuture();\r\n\r\n\t\t\t\tconst assignment = {\r\n\t\t\t\t\t_employee: { id: emp.id },\r\n\t\t\t\t\t_isPrimary: isPrimary,\r\n\t\t\t\t\t_startDateUtc: date,\r\n\t\t\t\t\t_endDateUtc: endDate,\r\n\t\t\t\t\t_details: [],\r\n\t\t\t\t\t$isDirty: () => true,\r\n\t\t\t\t\t$permitted: {\r\n\t\t\t\t\t\tactions: { create: true, delete: true },\r\n\t\t\t\t\t\tprops: { details: { view: true, edit: true, redacted: false, raw: 3 } } // if we have permission to add then we have permission to add details\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t_name: '',\r\n\t\t\t\t\t_location: {},\r\n\t\t\t\t\t_jobType: {},\r\n\t\t\t\t\t_department: {},\r\n\t\t\t\t\t_startDate: date,\r\n\t\t\t\t\t_endDate: endDate,\r\n\t\t\t\t\t_assignments: [assignment],\r\n\t\t\t\t\tassignment,\r\n\t\t\t\t\t$isDirty: () => true\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tfunction nextDay(fromDate) {\r\n\t\t\t\tlet startDate = ssDateByOrgHlp.utcIsoToRelativeMoment(fromDate, org);\r\n\t\t\t\treturn startDate.clone().add(1, 'days').startOf('day');\r\n\t\t\t}\r\n\r\n\t\t\tfunction resetErrors() {\r\n\t\t\t\t// reset the errors state\r\n\t\t\t\tpositions.forEach(p => p.hasError = false);\r\n\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new AssignmentList(props, 'assignment-list', config);\r\n}\r\n\r\n// #-- END Component (super-assignment-list) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superAssignmentList', assignmentList);\r\n","import { Component } from 'base-component';\r\n\r\n// #----------------------------------------------# //\r\n// #---- Component (super-assignment-details) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tdetails: '=',\r\n\teditMode: '=',\r\n\tjobType: '=',\r\n\torg: '=',\r\n\tpermissions: '=', // assignment permissions\r\n\tremove: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction assignmentDetails() {\r\n\r\n\tclass AssignmentDetails extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $element, ssJobTypeHlp, ssEmployeeAssignmentHlp, ssDateByOrgHlp, ssDateHlp, ssEnum, ssValidationHlp, enumPayRateFrequency, ssFlagCCSvc, ssSaveInterrupterSvc) {\r\n\r\n\t\t\tlet details = $scope.details;\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tpayRateOptions: ssEnum.salaryType.getEnums(),\r\n\r\n\t\t\t\tcollapsed: true,\r\n\r\n\t\t\t\tjobTypeDetailsCols: ssEmployeeAssignmentHlp.jobTypeDetailFields(),\r\n\r\n\t\t\t\t// setting start date to null when details is new and the its first assignment\r\n\t\t\t\tstartDate: details.id == null && !details._fromDateUtc ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(details._fromDateUtc, $scope.org).format('MM/DD/YYYY'),\r\n\t\t\t\tendDate: ssDateHlp.isForeverFuture(details._toDateUtc) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(details._toDateUtc, $scope.org).format('MM/DD/YYYY'),\r\n\r\n\t\t\t\tisNew: false,\r\n\t\t\t\tisFuture: false,\r\n\t\t\t\tisPast: false,\r\n\t\t\t\tisCurrent: false,\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\trequired: (val, field) => {\r\n\t\t\t\t\t// if not currently editing this details and parent assignment then don't validate\r\n\t\t\t\t\tif (!vm.editMode) { return true; }\r\n\t\t\t\t\treturn ssValidationHlp.required()(val, field);\r\n\t\t\t\t},\r\n\t\t\t\tdates() {\r\n\t\t\t\t\t// if not currently editing this details and parent assignment then don't validate\r\n\t\t\t\t\tif (!vm.editMode) { return true; }\r\n\r\n\t\t\t\t\tdetails.hasError = false;\r\n\r\n\t\t\t\t\tif ($scope.validator.required(vm.startDate, 'start date') !== true) {\r\n\t\t\t\t\t\tdetails.hasError = true;\r\n\t\t\t\t\t\treturn $scope.validator.required(vm.startDate, 'start date');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (moment(details._fromDateUtc).isAfter(moment(details._toDateUtc))) {\r\n\t\t\t\t\t\tdetails.hasError = true;\r\n\t\t\t\t\t\treturn 'The start date of this details cannot come after the end date.';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tstep() {\r\n\t\t\t\t\t// if not currently editing this details and parent assignment then don't validate\r\n\t\t\t\t\tif (details._payLane == null) { return true; }\r\n\t\t\t\t\treturn ssValidationHlp.required()(details._payStep, 'pay step');\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\trevert(prop) {\r\n\t\t\t\t\tdetails[prop] = null;\r\n\r\n\t\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t// run on editMode changes\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\t// not using an ng-class because parent is doing same on implementing putting on $last\r\n\t\t\t$scope.$watch('details.hasError', nv => {\r\n\t\t\t\tif (nv) { $element.addClass('has-error'); } else { $element.removeClass('has-error'); }\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.startDate', (nv, ov) => {\r\n\t\t\t\tif (nv === ov || !(nv instanceof Date)) { return; }\r\n\t\t\t\tdetails._fromDateUtc = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\tloadLanesAndSteps();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.endDate', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tdetails._toDateUtc = nv === null ? ssDateHlp.foreverFuture() : ssDateByOrgHlp.endOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\tloadLanesAndSteps();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('jobType', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tloadLanesAndSteps();\r\n\t\t\t});\r\n\r\n\t\t\t// reset pay steps base on the value of payLane\r\n\t\t\t$scope.$watch('details._payLane', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tsyncLanesAndSteps(nv, ov);\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('details._payStep', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tupdatePayAndSalary();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('details._payRateFrequency', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tdetails._payRate = null;\r\n\t\t\t\tupdatePayAndSalary();\r\n\t\t\t});\r\n\r\n\t\t\tfunction load() {\r\n\t\t\t\tvm.editMode = $scope.editMode === true;\r\n\t\t\t\t// force view mode if we don't have edit permissions\r\n\t\t\t\tif (!$scope.permissions.details.edit) {\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vm.editMode) { $element.addClass('edit-mode'); } else { $element.removeClass('edit-mode'); }\r\n\r\n\t\t\t\tssFlagCCSvc.ready.then(() => {\r\n\t\t\t\t\treturn ssFlagCCSvc.checkState('fc_enable_employee_module_save_interrupter');\r\n\t\t\t\t}).then(enabled => {\r\n\t\t\t\t\tif(enabled) {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.register(details);\r\n\t\t\t\t\t\tdetails.$$resetChangesDetected();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tgetDateRangeAndTag();\r\n\t\t\t\tloadLanesAndSteps();\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Determines if the details is past, present, future, new. Adds tagText to that effect\r\n\t\t\t */\r\n\t\t\tfunction getDateRangeAndTag() {\r\n\t\t\t\tvm.isNew = details.id == null;\r\n\t\t\t\tvm.isFuture = false;\r\n\t\t\t\tvm.isCurrent = false;\r\n\t\t\t\tvm.isPast = false;\r\n\r\n\t\t\t\tif (vm.isNew) {\r\n\t\t\t\t\tvm.tagText = 'New';\r\n\t\t\t\t\tvm.collapsed = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.isFuture = ssDateByOrgHlp.isInFuture({ obj: details, fromProp: '_fromDateUtc', toProp: '_toDateUtc', org: $scope.org });\r\n\t\t\t\t\tvm.isCurrent = ssDateByOrgHlp.isCurrent({ obj: details, fromProp: '_fromDateUtc', toProp: '_toDateUtc', org: $scope.org });\r\n\t\t\t\t\tvm.isPast = ssDateByOrgHlp.isInPast({ obj: details, fromProp: '_fromDateUtc', toProp: '_toDateUtc', org: $scope.org });\r\n\r\n\t\t\t\t\tif (vm.isCurrent) {\r\n\t\t\t\t\t\tvm.tagText = 'In Effect';\r\n\t\t\t\t\t} else if (vm.isFuture) {\r\n\t\t\t\t\t\tvm.tagText = 'Upcoming';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.tagText = 'Past';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet formattedStartDate = ssDateByOrgHlp.utcIsoToRelativeMoment(details._fromDateUtc, $scope.org).format('MM/DD/YYYY');\r\n\t\t\t\t\tlet endDate = ssDateHlp.isForeverFuture(details._toDateUtc) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(details._toDateUtc, $scope.org).format('MM/DD/YYYY');\r\n\t\t\t\t\tif (endDate != null) {\r\n\t\t\t\t\t\tvm.dateRange = `${formattedStartDate} - ${endDate}`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (vm.isCurrent) {\r\n\t\t\t\t\t\t\tvm.dateRange = `${formattedStartDate} - Current`;\r\n\t\t\t\t\t\t} else if (vm.isFuture) {\r\n\t\t\t\t\t\t\tvm.dateRange = `Effective ${formattedStartDate}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction loadLanesAndSteps() {\r\n\t\t\t\tif ($scope.jobType == null) { return; }\r\n\r\n\t\t\t\tvar paySchedule = ssJobTypeHlp.getPaySchedule({\r\n\t\t\t\t\tstartDate: details._fromDateUtc,\r\n\t\t\t\t\tendDate: details._toDateUtc,\r\n\t\t\t\t\tjobType: $scope.jobType,\r\n\t\t\t\t\torg: $scope.org\r\n\t\t\t\t});\r\n\r\n\t\t\t\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t\t\t\t// Index the lanes and steps so the fluid filter single select can bind to the \"index\" of the item in the array.\r\n\t\t\t\t//\tNot sure why we like to store indexes vs keys here, but we do!\r\n\t\t\t\tvar indexedPL = paySchedule._payLanes.map((v, idx) => {\r\n\t\t\t\t\tv.index = idx;\r\n\t\t\t\t\t// console.log(v);\r\n\t\t\t\t\tlet steps = v.paySteps.map((s,ix) => {\r\n\t\t\t\t\t\ts.index = ix;\r\n\t\t\t\t\t\treturn s;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tv.paySteps = steps;\r\n\t\t\t\t\treturn v;\r\n\t\t\t\t});\r\n\t\t\t\tpaySchedule._payLanes = indexedPL;\r\n\t\t\t\t///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\t\t\t\tdetails.paySchedule = paySchedule;\r\n\r\n\t\t\t\tvm.jobTypeDetails = ssJobTypeHlp.getJobTypeDetail({\r\n\t\t\t\t\tstartDate: details._fromDateUtc,\r\n\t\t\t\t\tendDate: details._toDateUtc,\r\n\t\t\t\t\tjobType: $scope.jobType,\r\n\t\t\t\t\torg: $scope.org\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsyncLanesAndSteps(details._payLane, details._payLane);\r\n\t\t\t\tupdatePayAndSalary();\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * What do you do?\r\n\t\t\t * @param {Number} laneIdx\r\n\t\t\t * @param {Number} oldLaneIdx\r\n\t\t\t */\r\n\t\t\tfunction syncLanesAndSteps(laneIdx, oldLaneIdx) {\r\n\t\t\t\tif (laneIdx == null) {\r\n\t\t\t\t\tdetails._payLane = null;\r\n\t\t\t\t\tdetails._payStep = null;\r\n\t\t\t\t\tvm.paySteps = [];\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tWe ran into this first check when on the selected PS payLane and payStep\r\n\t\t\t\tdoes not exist on the next PS to be selected\r\n\t\t\t\te.g\r\n\t\t\t\t\tPS - Test 1\r\n\t\t\t\t\tselected payLane = 10\r\n\t\t\t\t\tselected payStep = 10\r\n\r\n\t\t\t\t\tnow user try to change the JT and PS we got back doesn't not have payLane 10 and payStep 10, computation will throw an error.\r\n\r\n\t\t\t\t\tCheck below we make sure if we have enough payLanes otherwise we reset back to first item in the payLanes of new selected Pay Schedule.\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tlet payLane;\r\n\t\t\t\tlet validPs = ssJobTypeHlp.isValidPS(details.paySchedule);\r\n\t\t\t\tif (laneIdx >= details.paySchedule._payLanes.length || !validPs) {\r\n\t\t\t\t\tpayLane = details.paySchedule._payLanes[0];\r\n\t\t\t\t\tdetails._payLane = 0;\r\n\t\t\t\t\tdetails._payStep = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpayLane = details.paySchedule._payLanes[laneIdx];\r\n\t\t\t\t\tif (laneIdx !== oldLaneIdx || (details._payStep != null && details._payStep >= details.paySchedule._stepNames.length)) {\r\n\t\t\t\t\t\tdetails._payStep = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvm.paySteps = payLane.paySteps;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * What do you do?\r\n\t\t\t */\r\n\t\t\tfunction updatePayAndSalary() {\r\n\t\t\t\tif ($scope.jobType == null) { return; }\r\n\r\n\t\t\t\tlet paySchedule = details.paySchedule;\r\n\r\n\t\t\t\tconst jobTypeDetailValues = ssEmployeeAssignmentHlp.jobTypeValuesForAssignment({\r\n\t\t\t\t\tpaySchedule,\r\n\t\t\t\t\tjobTypeDetails: vm.jobTypeDetails,\r\n\t\t\t\t\tassignmentDetails: details,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvm.payScheduleIsValid = ssJobTypeHlp.isValidPS(paySchedule);\r\n\t\t\t\tvm.jobTypeDetailValuesAreValid = jobTypeDetailValues._jobTypeValuesForAssignmentAreValid;\r\n\r\n\t\t\t\tif (vm.payScheduleIsValid || vm.jobTypeDetailValuesAreValid) {\r\n\t\t\t\t\tlet foundPayRate = ssEmployeeAssignmentHlp.getPayRate({ paySchedule, currentDetails: details });\r\n\t\t\t\t\tlet validPayRate = details._payRate == null ? foundPayRate : details._payRate;\r\n\t\t\t\t\tlet payRateFrequency = jobTypeDetailValues._payRateFrequency;\r\n\t\t\t\t\tlet calculatedSalary = ssEmployeeAssignmentHlp.calculateAnnualSalary({\r\n\t\t\t\t\t\tpayRateFrequency,\r\n\t\t\t\t\t\tpayRate: validPayRate,\r\n\t\t\t\t\t\thoursPerDay: jobTypeDetailValues._hoursPerDay,\r\n\t\t\t\t\t\tworkDaysPerYear: jobTypeDetailValues._workDaysPerYear\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvm.payPerPeriod = ssEmployeeAssignmentHlp.calculatePayPerPeriod({\r\n\t\t\t\t\t\tcalculatedSalary,\r\n\t\t\t\t\t\tpayPeriodsPerYear: jobTypeDetailValues._payPeriodsPerYear\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (vm.editMode) {\r\n\t\t\t\t\t\tvm.annualSalary = foundPayRate;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.annualSalary = getDisplayRate({ calculatedSalary, validPayRate, payRateFrequency });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.payRateFrequencyString = ssEmployeeAssignmentHlp.getPayRateFrequencyString(payRateFrequency, vm.payRateOptions);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (vm.editMode) {\r\n\t\t\t\t\t\tvm.annualSalary = vm.payPerPeriod = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.annualSalary = details._payRate;\r\n\t\t\t\t\t\tvm.payPerPeriod = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.payRateFrequencyString = ssEmployeeAssignmentHlp.getPayRateFrequencyString(details._payRateFrequency, vm.payRateOptions);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction getDisplayRate({ calculatedSalary, validPayRate, payRateFrequency }) {\r\n\t\t\t\tif (payRateFrequency === enumPayRateFrequency.hourly) { return validPayRate; } else { return calculatedSalary; }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new AssignmentDetails(props, 'assignment-details', config);\r\n}\r\n\r\n// #-- END Component (super-assignment-details) --# //\r\n// #----------------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superAssignmentDetails', assignmentDetails);\r\n","import { Component } from 'base-component';\r\n\r\n// #--------------------------------------# //\r\n// #---- Component (super-assignment) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tmode: '=', // edit (edit mode), view (view mode), delete (enable delete option only), new (also edit mode)\r\n\torg: '=',\r\n\tpermissions: '=', // employee permissions\r\n\tposition: '=',\r\n\tcancel: '&?',\r\n\tremove: '&?',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction assignment() {\r\n\r\n\tclass Assignment extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, moment, ssAsync, ssDateByOrgHlp, ssDateHlp, ssValidationHlp, ssDepartmentSvc, ssLocationSvc, ssListSvc, ssJobTypeSvc, ssJobTypesApi, ssModalSvc, ssMultiInitiativeFeatureDetectorCCSvc, ssSaveInterrupterSvc, ssToastHlp) {\r\n\r\n\t\t\tlet position = $scope.position;\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tdepartments: ssDepartmentSvc.getAll().sort((a, b) => a._name.localeCompare(b._name)),\r\n\t\t\t\tlocations: ssLocationSvc.getAll().sort((a, b) => a._name.localeCompare(b._name)),\r\n\t\t\t\tjobTypes: ssJobTypeSvc.getAll().sort((a, b) => a._name.localeCompare(b._name)),\r\n\t\t\t\tpositionTypes: [],\r\n\t\t\t\temploymentGroups: [],\r\n\t\t\t\ttagText: '',\r\n\t\t\t\tdateRange: '',\r\n\t\t\t\tpermissions: $scope.permissions,\r\n\t\t\t\tisNew: false,\r\n\t\t\t\tisFuture: false,\r\n\t\t\t\tisCurrent: false,\r\n\t\t\t\tisPast: false,\r\n\t\t\t};\r\n\r\n\t\t\t$scope.featureFlags = {\r\n\t\t\t\t'fc_enable_employee_module_save_interrupter': false,\r\n\t\t\t\t'fc_job_type_cache': false,\r\n\t\t\t\tshowEmploymentGroups: false\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\trequired: (val, field) => {\r\n\t\t\t\t\t// if not currently editing this assignment then don't validate\r\n\t\t\t\t\tif (!vm.editing) { return true; }\r\n\t\t\t\t\treturn ssValidationHlp.required()(val, field);\r\n\t\t\t\t},\r\n\t\t\t\tvalidate() {\r\n\t\t\t\t\t// if not currently editing this assignment then don't validate\r\n\t\t\t\t\tif (!vm.editing) { return true; }\r\n\r\n\t\t\t\t\t// first index must be same start date as position, no gaps, last index must be same end date as position\r\n\t\t\t\t\tif (position.assignment._details == null || !position.assignment._details.length) { return true; }\r\n\r\n\t\t\t\t\tlet details = position.assignment._details.slice(0);\r\n\r\n\t\t\t\t\t// sort the copied array leaving the source intact\r\n\t\t\t\t\tdetails.sort((a, b) => new Date(b._fromDateUtc) - new Date(a._fromDateUtc));\r\n\r\n\t\t\t\t\t// clear errors\r\n\t\t\t\t\tposition.hasError = false;\r\n\t\t\t\t\tdetails.forEach(d => d.hasError = false);\r\n\r\n\t\t\t\t\t// assuming descending order\r\n\t\t\t\t\tlet first = details[details.length - 1];\r\n\t\t\t\t\tlet last = details[0];\r\n\r\n\t\t\t\t\tif (moment(first._fromDateUtc).isBefore(moment(position._startDate))) {\r\n\t\t\t\t\t\tposition.hasError = true;\r\n\t\t\t\t\t\tfirst.hasError = true;\r\n\t\t\t\t\t\treturn 'The first assignment details must not start before the assignment begins.';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// This guard condition prevents precision of forever future end dates from throwing validation error\r\n\t\t\t\t\tif (moment(last._toDateUtc).year() !== 9999 && moment(position._endDate).year() !== 9999) {\r\n\t\t\t\t\t\tif (moment(last._toDateUtc).isAfter(moment(position._endDate))) {\r\n\t\t\t\t\t\t\tposition.hasError = true;\r\n\t\t\t\t\t\t\tlast.hasError = true;\r\n\t\t\t\t\t\t\treturn 'The last assignment details must not end after the assignment completes.';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (moment(position._startDate).isAfter(moment(position._endDate))) {\r\n\t\t\t\t\t\tposition.hasError = true;\r\n\t\t\t\t\t\treturn 'The start date of this assignment cannot come after the end date.';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// if we only have 1 detail then we are done testing\r\n\t\t\t\t\tif (details.length === 1) { return true; }\r\n\r\n\t\t\t\t\t// list is sorted descending. Start on the second and compare current._toDateUtc with the future._fromDateUtc\r\n\t\t\t\t\tfor (let i = 1; i < details.length; i++) {\r\n\t\t\t\t\t\tconst current = details[i];\r\n\t\t\t\t\t\tconst future = details[i - 1];\r\n\r\n\t\t\t\t\t\t// check for overlapping\r\n\t\t\t\t\t\tif (moment(current._toDateUtc).isAfter(moment(future._fromDateUtc))) {\r\n\t\t\t\t\t\t\tposition.hasError = true;\r\n\t\t\t\t\t\t\tfuture.hasError = true;\r\n\t\t\t\t\t\t\tcurrent.hasError = true;\r\n\t\t\t\t\t\t\treturn 'This assignment cannot have overlapping details.';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\texternalId: ssValidationHlp.string({ maxLength: 100 })\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\taddDetails() {\r\n\t\t\t\t\t// validating if mandatory fields are selected in Assignment\r\n\t\t\t\t\tif (position._jobType == null || position._jobType.id == null || !vm.startDate) {\r\n\t\t\t\t\t\tssToastHlp.error('Please enter values for required assignment fields before adding assignment details.', new String(''));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet newDetail = {\r\n\t\t\t\t\t\t_payLane: null,\r\n\t\t\t\t\t\t_payStep: null,\r\n\t\t\t\t\t\t_fromDateUtc: position._startDate,\r\n\t\t\t\t\t\t_toDateUtc: position._endDate,\r\n\t\t\t\t\t\tdateOptions: {},\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tsetDetailOptions(newDetail);\r\n\t\t\t\t\tposition.assignment._details.push(newDetail);\r\n\r\n\t\t\t\t\tresetErrors();\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcancel() {\r\n\t\t\t\t\tvm.editing = false;\r\n\t\t\t\t\tresetErrors();\r\n\t\t\t\t\t$scope.cancel();\r\n\t\t\t\t},\r\n\r\n\t\t\t\tedit() {\r\n\t\t\t\t\tif (vm.mode === 'delete') { return; }\r\n\r\n\t\t\t\t\t// setting start date to null when position is new and the its first assignment\r\n\t\t\t\t\tvm.startDate = position._startDate == null || ssDateHlp.isForeverPast(position._startDate) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(position._startDate, $scope.org).format('MM/DD/YYYY');\r\n\t\t\t\t\tvm.endDate = position._endDate == null || ssDateHlp.isForeverFuture(position._endDate) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(position._endDate, $scope.org).format('MM/DD/YYYY');\r\n\r\n\t\t\t\t\tvm.editing = true;\r\n\t\t\t\t\t$scope.$emit('assignment-edit', position.id);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tremoveDetails(index) {\r\n\t\t\t\t\tlet confirmation = {\r\n\t\t\t\t\t\ttitle: 'Are you sure?',\r\n\t\t\t\t\t\tcontent: 'Are you sure you want to delete this assignment details?',\r\n\t\t\t\t\t\tprimaryText: 'Delete Assignment Details',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t\t};\r\n\t\t\t\t\tssModalSvc.showDestructive(confirmation).then(() => {\r\n\t\t\t\t\t\tposition.assignment._details.splice(index, 1);\r\n\t\t\t\t\t\tresetErrors();\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tssAsync(function* () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t//\tresolve all feature flags\r\n\t\t\t\t\tyield ssMultiInitiativeFeatureDetectorCCSvc.resolveAll($scope.featureFlags);\r\n\t\t\t\t\tvm.employmentGroups = yield ssListSvc.getByExternalId('jobtype.employmentgroups');\r\n\t\t\t\t\tvm.positionTypes = yield ssListSvc.getByExternalId('position.types');\r\n\t\t\t\t\t// run on mode changes\r\n\t\t\t\t\t$scope.$watch('mode', load);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\r\n\t\t\t$scope.$watch('vm.startDate', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tposition._startDate = nv == null ? ssDateHlp.foreverPast() : ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\tposition.assignment._startDateUtc = position._startDate;\r\n\r\n\t\t\t\tsetAllDetailOptions();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.endDate', (nv, ov) => {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tposition._endDate = nv === null ? ssDateHlp.foreverFuture() : ssDateByOrgHlp.endOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\tposition.assignment._endDateUtc = position._endDate;\r\n\r\n\t\t\t\tsetAllDetailOptions();\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('position._jobType.id', (nv, ov) => {\r\n\t\t\t\tif (nv == null) { return; }\r\n\r\n\t\t\t\tif ($scope.featureFlags['fc_job_type_cache']) {\r\n\t\t\t\t\tposition.assignment.jobType = vm.jobTypes.find(jt => jt.id === nv);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tssJobTypesApi.get({\r\n\t\t\t\t\t\tid: nv,\r\n\t\t\t\t\t\tinclude: 'jobTypeDetails,paySchedules'\r\n\t\t\t\t\t}).then((res) => {\r\n\t\t\t\t\t\tposition.assignment.jobType = res;\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t//>error(err)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction load(newMode) {\r\n\t\t\t\tvm.mode = newMode; // ties to newMode and not $scope.mode\r\n\r\n\t\t\t\tvm.editing = false;\r\n\t\t\t\tif (vm.mode === 'new') {\r\n\t\t\t\t\t// a new position was added. Set editing to true on load\r\n\t\t\t\t\tvm.editing = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgetDateRangeAndTag();\r\n\r\n\t\t\t\tposition.name = ssListSvc.mapName(position._name, vm.positionTypes);\r\n\r\n\t\t\t\t// reset the options\r\n\t\t\t\tvm.dateOptions = position.dateOptions || {};\r\n\r\n\t\t\t\tif (position.assignment._details == null) {\r\n\t\t\t\t\tposition.assignment._details = [];\r\n\t\t\t\t}\r\n\t\t\t\tif (position.assignment._details.length > 1) {\r\n\t\t\t\t\t// sort descending\r\n\t\t\t\t\tposition.assignment._details.sort((a, b) => new Date(b._fromDateUtc) - new Date(a._fromDateUtc));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetAllDetailOptions();\r\n\r\n\t\t\t\tif ($scope.featureFlags['fc_enable_employee_module_save_interrupter']) {\r\n\t\t\t\t\tssSaveInterrupterSvc.register(position);\r\n\t\t\t\t\tssSaveInterrupterSvc.register(position.assignment);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Determines if the position is past, present, future, new. Adds tagText to that effect\r\n\t\t\t */\r\n\t\t\tfunction getDateRangeAndTag() {\r\n\t\t\t\tvm.isNew = position.id == null;\r\n\t\t\t\tvm.isFuture = false;\r\n\t\t\t\tvm.isCurrent = false;\r\n\t\t\t\tvm.isPast = false;\r\n\r\n\t\t\t\tif (vm.isNew) {\r\n\t\t\t\t\tvm.tagText = 'New';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.isFuture = ssDateByOrgHlp.isInFuture({ obj: position, fromProp: '_startDate', toProp: '_endDate', org: $scope.org });\r\n\t\t\t\t\tvm.isCurrent = ssDateByOrgHlp.isCurrent({ obj: position, fromProp: '_startDate', toProp: '_endDate', org: $scope.org });\r\n\t\t\t\t\tvm.isPast = ssDateByOrgHlp.isInPast({ obj: position, fromProp: '_startDate', toProp: '_endDate', org: $scope.org });\r\n\r\n\t\t\t\t\tif (vm.isCurrent) {\r\n\t\t\t\t\t\tvm.tagText = 'In Effect';\r\n\t\t\t\t\t} else if (vm.isFuture) {\r\n\t\t\t\t\t\tvm.tagText = 'Upcoming';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.tagText = 'Past';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet formattedStartDate = ssDateByOrgHlp.utcIsoToRelativeMoment(position._startDate, $scope.org).format('MM/DD/YYYY');\r\n\t\t\t\t\tlet endDate = ssDateHlp.isForeverFuture(position._endDate) ? null : ssDateByOrgHlp.utcIsoToRelativeMoment(position._endDate, $scope.org).format('MM/DD/YYYY');\r\n\t\t\t\t\tif (endDate != null) {\r\n\t\t\t\t\t\tvm.dateRange = `${formattedStartDate} - ${endDate}`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (vm.isCurrent) {\r\n\t\t\t\t\t\t\tvm.dateRange = `${formattedStartDate} - Current`;\r\n\t\t\t\t\t\t} else if (vm.isFuture) {\r\n\t\t\t\t\t\t\tvm.dateRange = `Effective ${formattedStartDate}`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Set date picker options based on the position dates\r\n\t\t\t */\r\n\t\t\tfunction setAllDetailOptions() { position.assignment._details.forEach(setDetailOptions); }\r\n\r\n\t\t\t/**\r\n\t\t\t * Set date picker options based on the position dates\r\n\t\t\t */\r\n\t\t\tfunction setDetailOptions(detail) {\r\n\t\t\t\tif (detail.startDateOptions == null) { detail.startDateOptions = {}; }\r\n\t\t\t\tif (detail.endDateOptions == null) { detail.endDateOptions = {}; }\r\n\r\n\t\t\t\tdetail.startDateOptions.minDate = ssDateHlp.isForeverPast(position._startDate) ? null : moment(ssDateByOrgHlp.startOfDayRelativeTo(moment(position._startDate), $scope.org)).toDate();\r\n\t\t\t\tdetail.startDateOptions.maxDate = ssDateHlp.isForeverFuture(position._endDate) ? null : moment(ssDateByOrgHlp.endOfDayRelativeTo(moment(position._endDate), $scope.org)).toDate();\r\n\r\n\t\t\t\tdetail.endDateOptions.minDate = ssDateHlp.isForeverPast(position._startDate) ? null : moment(ssDateByOrgHlp.startOfDayRelativeTo(moment(position._startDate), $scope.org)).toDate();\r\n\t\t\t\tdetail.endDateOptions.maxDate = ssDateHlp.isForeverFuture(position._endDate) ? null : moment(ssDateByOrgHlp.endOfDayRelativeTo(moment(position._endDate), $scope.org)).toDate();\r\n\t\t\t}\r\n\r\n\t\t\tfunction resetErrors() {\r\n\t\t\t\t// reset the errors state\r\n\t\t\t\tposition.hasError = false;\r\n\t\t\t\tposition.assignment._details.forEach(d => d.hasError = false);\r\n\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Assignment(props, 'assignment', config);\r\n}\r\n\r\n// #-- END Component (super-assignment) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superAssignment', assignment);\r\n","import { Component } from 'base-component';\r\n// #----------------------------------------# //\r\n// #---- Component (super-address-list) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\taddresses: '=',\r\n\teditMode: '=?',\r\n\torg: '=',\r\n\tpermissions: '=',\r\n};\r\n\r\n// directive definition object overrides\r\nconst config = {};\r\n\r\n/*@ngInject*/\r\nfunction addressList() {\r\n\r\n\tclass AddressList extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, moment, ssAsync, ssEnum, ssDateHlp, ssDateByOrgHlp, ssEmployeeModelHlp, ssValidationHlp) {\r\n\t\t\tconst watchers = {\r\n\t\t\t\tcurrent: null,\r\n\t\t\t\tfuture: null,\r\n\t\t\t};\r\n\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tcurrent: null,\r\n\t\t\t\tpast: [],\r\n\t\t\t\tfuture: null,\r\n\r\n\t\t\t\thasNoValidAddresses: true,\r\n\r\n\t\t\t\tfutureDtPickerOpt: {},\r\n\t\t\t\tcurrentDtPickerOpt: {},\r\n\r\n\t\t\t\texpanded: false,\r\n\r\n\t\t\t\tstates: ssEnum.states.getEnums(),\r\n\t\t\t};\r\n\r\n\t\t\t$scope.validator = {\r\n\t\t\t\tzip: ssValidationHlp.zip(),\r\n\t\t\t};\r\n\r\n\t\t\t$scope.$watch('editMode', load);\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\t\tadd: () => {\r\n\t\t\t\t\tvm.future = processDates(ssEmployeeModelHlp.newAddress($scope.addresses, $scope.org));\r\n\t\t\t\t\t$scope.addresses.push(vm.future);\r\n\t\t\t\t},\r\n\r\n\t\t\t\tremoveFuture: () => {\r\n\t\t\t\t\tvar index = $scope.addresses.indexOf(vm.future);\r\n\t\t\t\t\t$scope.addresses.splice(index, 1);\r\n\t\t\t\t\tvm.future = null;\r\n\t\t\t\t\tif (vm.current) {\r\n\t\t\t\t\t\tvm.current.endDateTxt = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\ttoggle() { vm.expanded = !vm.expanded; },\r\n\r\n\t\t\t\tisAddDisabled() { return vm.future != null || vm.hasNoValidAddresses; },\r\n\t\t\t};\r\n\r\n\t\t\tfunction load() {\r\n\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\tvm.editMode = $scope.editMode === true;\r\n\t\t\t\t\t// force view mode if we don't have edit permissions\r\n\t\t\t\t\tif (!$scope.permissions.edit) {\r\n\t\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (typeof watchers.current === 'function') {\r\n\t\t\t\t\t\twatchers.current();\r\n\t\t\t\t\t\twatchers.current = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof watchers.future === 'function') {\r\n\t\t\t\t\t\twatchers.future();\r\n\t\t\t\t\t\twatchers.future = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprocessAddresses();\r\n\r\n\t\t\t\t\tif (vm.editMode) {\r\n\t\t\t\t\t\twatchers.current = $scope.$watch('vm.current.startDateTxt', (nv, ov) => {\r\n\t\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\t\tif (nv instanceof Date) {\r\n\t\t\t\t\t\t\t\tvm.current._from = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\t\t\t\t\tvm.futureDtPickerOpt.minDate = ssEmployeeModelHlp.nextDay(vm.current._from, $scope.org).toDate();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvm.current._from = ssDateHlp.foreverPast();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t$scope.$watch('vm.future.startDateTxt', (nv, ov) => {\r\n\t\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\t\tif (nv instanceof Date && vm.future) {\r\n\t\t\t\t\t\t\t\tvm.future._from = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\r\n\t\t\tfunction processAddresses() {\r\n\t\t\t\tif ($scope.addresses.length > 0) {\r\n\t\t\t\t\tvar home = $scope.addresses.filter(x => x._addressType === ssEnum.addressType.home);\r\n\r\n\t\t\t\t\tvm.future = home.find(x => ssDateByOrgHlp.isInFuture({ obj: x, fromProp: '_from', toProp: '_to', org: $scope.org }));\r\n\t\t\t\t\tvm.current = home.find(x => ssDateByOrgHlp.isCurrent({ obj: x, fromProp: '_from', toProp: '_to', org: $scope.org }));\r\n\t\t\t\t\tvm.past = home.filter(x => ssDateByOrgHlp.isInPast({ obj: x, fromProp: '_from', toProp: '_to', org: $scope.org })).sort((a, b) => {\r\n\t\t\t\t\t\treturn new Date(b._from) - new Date(a._from);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tprocessDates(vm.future);\r\n\t\t\t\t\tprocessDates(vm.current);\r\n\t\t\t\t\tvm.past.forEach(processDates);\r\n\r\n\t\t\t\t\tif (vm.current !== null) {\r\n\t\t\t\t\t\tvm.futureDtPickerOpt.minDate = ssEmployeeModelHlp.nextDay(vm.current._from, $scope.org).toDate();\r\n\r\n\t\t\t\t\t\tvm.hasNoValidAddresses = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vm.past.length > 0) {\r\n\t\t\t\t\t\tvm.currentDtPickerOpt.minDate = ssEmployeeModelHlp.nextDay(vm.past[0]._from, $scope.org).toDate();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we have no addresses yet\r\n\t\t\t\tvm.current = {\r\n\t\t\t\t\t_from: ssDateHlp.foreverPastString,\r\n\t\t\t\t\t_to: ssDateHlp.foreverFutureString,\r\n\t\t\t\t\t_addressType: ssEnum.addressType.home,\r\n\t\t\t\t\t_isPrimary: true,\r\n\t\t\t\t\t_street1: null,\r\n\t\t\t\t\t_street2: null,\r\n\t\t\t\t\t_city: null,\r\n\t\t\t\t\t_state: null,\r\n\t\t\t\t\t_zip: null,\r\n\t\t\t\t\tisCurrent: true,\r\n\t\t\t\t\tisFuture: false,\r\n\t\t\t\t\tisPast: false,\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$scope.$watchGroup(['vm.current._street1', 'vm.current._street2', 'vm.current._city', 'vm.current._state', 'vm.current._zip'], (nv, ov) => {\r\n\t\t\t\t\tif (nv === ov) { return; }\r\n\r\n\t\t\t\t\tif (nv.some(val => (val != null && val !== ''))) {\r\n\t\t\t\t\t\tlet current = $scope.addresses.find(a => a.isCurrent);\r\n\t\t\t\t\t\tif (current == null) {\r\n\t\t\t\t\t\t\t$scope.addresses.push(vm.current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet current = $scope.addresses.find(a => a.isCurrent);\r\n\t\t\t\t\t\t$scope.addresses.splice(current, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * @param {Object} address\r\n\t\t\t */\r\n\t\t\tfunction processDates(address) {\r\n\t\t\t\tif (address == null) { return; }\r\n\r\n\t\t\t\tvar fromDate = ssDateByOrgHlp.utcIsoToRelativeMoment(address._from, $scope.org);\r\n\t\t\t\tvar toDate = ssDateByOrgHlp.utcIsoToRelativeMoment(address._to, $scope.org);\r\n\r\n\t\t\t\tif (ssDateHlp.isForeverPast(address._from)) {\r\n\t\t\t\t\taddress.startDateTxt = '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddress.startDateTxt = fromDate.format('MM/DD/YYYY');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ssDateHlp.isForeverFuture(address._to)) {\r\n\t\t\t\t\taddress.endDateTxt = '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\taddress.endDateTxt = toDate.format('MM/DD/YYYY');\r\n\t\t\t\t}\r\n\r\n\t\t\t\taddress.hasAddressInformation = !(address._street1 || address._city || address._state || address._zip);\r\n\r\n\t\t\t\treturn address;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn new AddressList(props, 'address-list', config);\r\n}\r\n\r\n// #-- END Component (super-address-list) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('super-suit-components').directive('superAddressList', addressList);\r\n","// #------------------------------------------# //\r\n// #---- Helper (ssOptionalFieldGroupHlp) ----# //\r\n\r\n/*@ngInject*/\r\nfunction ssOptionalFieldGroupHlp() {\r\n\treturn {\r\n\r\n\t\tvalidate(fieldList, errorMessage) {\r\n\t\t\tconst defaultMessage = 'One of the fields in this group is required.';\r\n\t\t\tvar valid = false;\r\n\t\t\tfor (var q = 0; q < fieldList.length; q++) {\r\n\t\t\t\tif (fieldList[q] != null) {\r\n\t\t\t\t\tvalid = valid || fieldList[q].length > 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalid = valid || false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (valid) { return valid; }\r\n\t\t\tif (errorMessage == null) { errorMessage = defaultMessage; }\r\n\r\n\t\t\treturn errorMessage;\r\n\t\t}\r\n\r\n\t};\r\n}\r\n// #-- END Helper (ssOptionalFieldGroupHlp) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('super-suit-helpers').factory('ssOptionalFieldGroupHlp', ssOptionalFieldGroupHlp);\r\n","// #-----------------------------# //\r\n// #---- Helper (ssSleepHlp) ----# //\r\n\r\n/*\r\nThis sleep helper is only meant to mitigate the eventual consistency on the UI. Any place where\r\nwe notice data been not consistent add this sleep call between POST / PATCH and GET Call.\r\n*/\r\n\r\n/*@ngInject*/\r\nfunction ssSleepHlp($q, $timeout) {\r\n\tconst DEFAULT_TIME_IN_MILLISECONDS = 2000;\r\n\treturn {\r\n\t\tsleep(timeInMilliseconds) {\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\t$timeout(() => deferred.resolve(), timeInMilliseconds || DEFAULT_TIME_IN_MILLISECONDS);\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\t};\r\n}\r\n// #-- END Helper (ssSleepHlp) --# //\r\n// #-----------------------------# //\r\n\r\nangular.module('super-suit-helpers').factory('ssSleepHlp', ssSleepHlp);\r\n","(function(e){try{e=angular.module(\"super-templates\")}catch(t){e=angular.module(\"super-templates\",[])}e.run([\"$templateCache\",function(c){c.put('components/super-address-list/address-list.html',`<div class=\"super-address-list\" data-test=\"address-list\"><h3 id=\"address-heading\">Address</h3><super-button smp class=\"add-address\" label=\"Add New Address\" ng-click=\"go.add()\" ss-icon=\"plus-circle\" ng-if=\"vm.editMode\" is-disabled=\"go.isAddDisabled()\" data-test=\"address-add\"></super-button><!-- Future Address --><div class=\"gd-row future-address\" ng-if=\"vm.future != null\" data-test=\"future-address\"><h4>Upcoming Address:</h4><ul class=\"record-list date-row\"><li class=\"gd-20p\"><super-input-datepicker model=\"vm.future.startDateTxt\" options=\"vm.futureDtPickerOpt\" label=\"Start Date\" edit-mode=\"vm.editMode\" data-test=\"address-start-date\"></super-input-datepicker></li><li class=\"gd-80p\" ng-show=\"vm.editMode\"><super-button smp label=\"Remove\" ng-click=\"go.removeFuture(vm.future)\" ss-icon=\"times\" data-test=\"remove\"></super-button></li></ul><ul class=\"record-list\"><li class=\"gd-40p\"><super-input-text input-id=\"future-address-line-1\" model=\"vm.future._street1\" label=\"Address Line 1\" aria-label=\"address line 1\" name=\"AddressLine1\" edit-mode=\"vm.editMode\" data-test=\"address-1\"></super-input-text></li><li class=\"gd-40p\"><super-input-text input-id=\"future-address-line-2\" model=\"vm.future._street2\" label=\"Address Line 2\" aria-label=\"address line 2\" name=\"AddressLine2\" edit-mode=\"vm.editMode\" data-test=\"address-2\"></super-input-text></li></ul><ul class=\"record-list\"><li class=\"gd-20p\"><super-input-text input-id=\"future-city\" model=\"vm.future._city\" label=\"City\" aria-label=\"city\" name=\"city\" edit-mode=\"vm.editMode\" data-test=\"address-city\"></super-input-text></li><li class=\"gd-45p\"><super-single-filter-list edit-mode=\"vm.editMode\" databind-name=\"name\" databind-value=\"value\" label=\"State\" model=\"vm.future._state\" items=\"vm.states\" data-test=\"address-state\" permissions=\"permissions\"></super-single-filter-list></li><li class=\"gd-20p\"><super-input-text input-id=\"future-zip\" model=\"vm.future._zip\" label=\"Zip Code\" name=\"zip\" aria-label=\"zip code\" ss-validate=\"validator.zip(vm.future._zip)\" edit-mode=\"vm.editMode\" data-test=\"address-zip\"></super-input-text></li></ul></div><!-- Current Address --><div class=\"gd-row current-address\" ng-if=\"vm.current != null\" data-test=\"current-address\"><h4>Current Address:</h4><ul class=\"record-list date-row\"><li class=\"gd-20p\"><super-input-datepicker edit-mode=\"vm.editMode && vm.future == null\" model=\"vm.current.startDateTxt\" label=\"Start Date\" aria-label=\"start date\" options=\"vm.currentDtPickerOpt\" data-test=\"address-start-date\"></super-input-datepicker></li><li class=\"gd-20p\"><label class=\"label\">End Date</label><div>{{ vm.current.endDateTxt }}</div></li></ul><ul class=\"record-list\"><li class=\"gd-40p\"><super-input-text input-id=\"current-address-line-1\" model=\"vm.current._street1\" label=\"Address Line 1\" aria-label=\"address line 1\" name=\"AddressLine1\" edit-mode=\"vm.editMode\" data-test=\"address-1\"></super-input-text></li><li class=\"gd-40p\"><super-input-text input-id=\"current-address-line-2\" model=\"vm.current._street2\" label=\"Address Line 2\" aria-label=\"address line 2\" name=\"AddressLine1\" edit-mode=\"vm.editMode\" data-test=\"address-2\"></super-input-text></li></ul><ul class=\"record-list\"><li class=\"gd-20p\"><super-input-text input-id=\"current-city\" model=\"vm.current._city\" label=\"City\" aria-label=\"city\" name=\"city\" edit-mode=\"vm.editMode\" data-test=\"address-cty\"></super-input-text></li><li class=\"gd-45p\"><super-single-filter-list edit-mode=\"vm.editMode\" databind-name=\"name\" databind-value=\"value\" label=\"State\" model=\"vm.current._state\" items=\"vm.states\" data-test=\"address-state\" permissions=\"permissions\"></super-single-filter-list></li><li class=\"gd-20p\"><super-input-text input-id=\"current-zip\" model=\"vm.current._zip\" label=\"Zip Code\" aria-label=\"zip code\" name=\"zip\" ss-validate=\"validator.zip(vm.current._zip)\" edit-mode=\"vm.editMode\" data-test=\"address-zip\"></super-input-text></li></ul></div><!-- Past Addresses --><div ng-if=\"vm.past.length > 0\"><button type=\"button\" class=\"smp show-hide-details {{ (vm.expanded) ? 'fa-angle-down-after' : 'fa-angle-up-after' }} ss-toggle-closed\" ss-toggle=\"past-address\" ng-click=\"go.toggle()\" ss-toggle-start-expanded=\"{{vm.expanded}}\" data-test=\"past-addresses-toggle\"><span>{{ vm.expanded ? 'Hide' : 'View' }} Address history</span></button><div class=\"gd-row past-address\" data-test=\"past-addresses-content\"><h4>Past Address(es):</h4><ul class=\"record-list\" ng-repeat=\"address in vm.past\" data-test=\"past-address\"><li class=\"gd-100p dates\">{{ address.startDateTxt }} - {{ address.endDateTxt }}</li><li class=\"gd-100p\" ng-if=\"address.hasAddressInformation\">Address information not available.</li><li class=\"gd-100p\" ng-if=\"!address.hasAddressInformation\"><ul><li class=\"gd-100p\">{{ address._street1 }}</li><li class=\"gd-100p\">{{ address._street2 }}</li><li class=\"gd-100p\">{{ address._city }} {{ address._state }} {{ address._zip }}</li></ul></li></ul></div></div></div>`);c.put('components/super-assignment/assignment.html',`<div class=\"super-assignment\" ng-class=\"{'edit-mode': vm.editing, 'has-error': position.hasError}\" ss-validate=\"validator.validate()\" data-test-type=\"assignment\" data-test-position-id=\"{{position.id}}\" data-test-assignment-id=\"{{position.assignment.id}}\" ss-pending=\"position.isUpdating\"><div class=\"position\"><div class=\"header\"><div ng-bind=\"vm.tagText\" class=\"ss-tag\" data-test=\"tag\" ng-class=\"{'ss-tag-positive': vm.isCurrent, 'ss-tag-primary': vm.isFuture}\"></div><h4 class=\"title\" ng-bind=\"vm.isNew ? 'Assignment Information' : position.name\" data-test=\"name\"></h4><div class=\"date-range\" ng-if=\"!vm.editing\" ng-bind=\"vm.dateRange\" data-test=\"date-range\"></div><div class=\"date-range\" ng-if=\"vm.editing\" ss-validate=\"validator.required(vm.startDate, 'start date')\" data-test=\"date-range\"><super-input-datepicker edit-mode=\"vm.editing\" placeholder=\"Start Date\" model=\"vm.startDate\" class=\"assignment-start-date\" required=\"true\" options=\"vm.dateOptions\" required=\"true\" data-test=\"start-date\"></super-input-datepicker><super-input-datepicker edit-mode=\"vm.editing\" placeholder=\"End Date\" model=\"vm.endDate\" class=\"assignment-end-date\" options=\"vm.dateOptions\" data-test=\"end-date\"></super-input-datepicker></div><!-- Create menu --><div class=\"actions\" ng-if=\"vm.mode === 'new'\"><super-button ss-icon-after=\"angle-down\" data-test=\"assignment-actions-menu\"><item class=\"create\" ss-permitted=\"assignments.create\" ng-if=\"position.assignment.$permitted.actions.create\" ng-click=\"go.addDetails()\" data-test=\"assignment-add-details\">Add New Assignment Details</item><item class=\"cancel\" ng-if=\"vm.editing\" ng-click=\"go.cancel()\" data-test=\"assignment-cancel\">Cancel</item></super-button></div><!-- EDIT menu --><div class=\"actions\" ng-if=\"vm.mode !== 'view' && position.assignment.$permitted.actions.edit\"><super-button ss-icon-after=\"angle-down\" data-test=\"actions\"><item class=\"edit\" ng-if=\"!vm.editing\" ng-click=\"go.edit()\" ng-disabled=\"vm.mode === 'delete'\" data-test=\"edit\">Edit</item><item class=\"cancel\" ng-if=\"vm.editing\" ng-click=\"go.cancel()\" data-test=\"cancel\">Cancel</item><item class=\"create\" ss-permitted=\"assignments.create\" ng-if=\"vm.editing && position.assignment.$permitted.actions.create\" ng-disabled=\"position._jobType == null || position._jobType.id == null\" ng-click=\"go.addDetails()\" data-test=\"add-details\">Add New Assignment Details</item><item class=\"remove\" ss-permitted=\"assignments.delete\" ng-if=\"position.id != null && position.assignment.$permitted.actions.delete\" ng-click=\"remove()\" data-test=\"remove\">Delete</item></super-button></div></div><div class=\"assignment\"><div class=\"gd-row\"><ul class=\"record-list\"><li><super-single-filter-list ng-if=\"vm.positionTypes.length > 0\" edit-mode=\"vm.editing\" databind-name=\"name\" databind-value=\"value\" permissions=\"vm.permissions.positions\" class=\"position-name\" data-test=\"position-name\" label=\"Position Name\" model=\"position._name\" ss-validate=\"validator.required(position._name, 'position name')\" required=\"true\" items=\"vm.positionTypes\"></super-single-filter-list></li><li><super-single-filter-list required=\"true\" label=\"Job Type\" class=\"job-type\" data-test=\"job-type\" databind-name=\"_name\" databind-value=\"id\" permissions=\"vm.permissions.jobTypes\" ss-validate=\"validator.required(position._jobType.id, 'job type')\" required=\"true\" items=\"vm.jobTypes\" model=\"position._jobType.id\" edit-mode=\"vm.editing\" include-none-option=\"false\"></super-single-filter-list></li><li ng-if=\"featureFlags.showEmploymentGroups\"><super-input-text edit-mode=\"false\" permissions=\"vm.permissions.jobTypes\" class=\"employment-group\" label=\"Employment Group / CBU\" model=\"position.jobType.employmentGroup.name\" data-test=\"employment-group\"></super-input-text></li></ul></div><div class=\"gd-row\"><ul class=\"record-list\"><li><super-single-filter-list required=\"true\" label=\"Location\" class=\"location\" data-test=\"location\" databind-name=\"_name\" databind-value=\"id\" permissions=\"vm.permissions.locations\" ss-validate=\"validator.required(position._location.id, 'location')\" required=\"true\" items=\"vm.locations\" model=\"position._location.id\" edit-mode=\"vm.editing\" include-none-option=\"false\"></super-single-filter-list></li><li><super-single-filter-list required=\"true\" label=\"Department\" class=\"department\" data-test=\"department\" databind-name=\"_name\" databind-value=\"id\" permissions=\"vm.permissions.departments\" ss-validate=\"validator.required(position._department.id, 'department')\" required=\"true\" items=\"vm.departments\" model=\"position._department.id\" edit-mode=\"vm.editing\" include-none-option=\"false\"></super-single-filter-list></li><li><super-input-text required=\"false\" label=\"External ID\" class=\"externalId\" data-test=\"externalId\" model=\"position.assignment._externalId\" edit-mode=\"vm.editing\" ss-validate=\"validator.externalId(position.assignment._externalId)\" ss-validate-message=\"Value must not exceed 100 characters in length\"></super-input-text></li></ul></div></div></div><super-assignment-details ng-class=\"{'last': $last}\" details=\"details\" ng-repeat=\"details in position.assignment._details\" edit-mode=\"vm.editing\" permissions=\"position.assignment.$permitted.props\" job-type=\"position.assignment.jobType\" org=\"org\" remove=\"go.removeDetails($index)\"></super-assignment-details></div>`);c.put('components/super-assignment-details/assignment-details.html',`<div class=\"super-assignment-details\" data-test=\"assignment-details\" data-test-id=\"{{details.id}}\"><div class=\"header gd-row\"><div class=\"collapse\" ss-icon=\"plus-square\" ng-if=\"vm.collapsed && !vm.isNew\" ng-click=\"vm.collapsed = false\" data-test=\"collapse\"></div><div class=\"collapse\" ss-icon=\"minus-square\" ng-if=\"!vm.collapsed && !vm.isNew\" ng-click=\"vm.collapsed = true\" data-test=\"collapse\"></div><div ng-bind=\"vm.tagText\" class=\"ss-tag\" ng-class=\"{'ss-tag-positive': vm.isCurrent, 'ss-tag-primary': vm.isFuture}\" data-test=\"tag\"></div><h4 class=\"title\">Assignment Details</h4><div class=\"actions\" ng-if=\"vm.editMode\"><super-button ss-icon-after=\"angle-down\" data-test=\"actions\"><item class=\"remove\" ng-click=\"remove()\" data-test=\"remove\">Delete</item></super-button></div><div class=\"date-range\" ng-if=\"!vm.editMode\" ng-bind=\"vm.dateRange\" data-test=\"date-range\"></div><div class=\"date-range\" ng-if=\"vm.editMode\" ss-validate=\"validator.dates()\"><super-input-datepicker class=\"assignment-details-start-date\" edit-mode=\"vm.editMode\" placeholder=\"Start Date\" options=\"details.startDateOptions\" model=\"vm.startDate\" required=\"true\" data-test=\"start-date\"></super-input-datepicker><super-input-datepicker class=\"assignment-details-end-date\" edit-mode=\"vm.editMode\" placeholder=\"End Date\" options=\"details.endDateOptions\" model=\"vm.endDate\" data-test=\"end-date\"></super-input-datepicker></div></div><div class=\"details\" ng-show=\"!vm.collapsed\"><div class=\"gd-row\"><ul class=\"record-list\" ng-repeat=\"col in vm.jobTypeDetailsCols\"><li class=\"revertable-field\" ng-repeat=\"field in col\" ng-class=\"{'empty-field': !vm.editMode && details[field.prop] == null}\"><super-input-text class=\"{{field.prop}}\" ng-if=\"!vm.editMode\" edit-mode=\"vm.editMode\" label=\"{{ field.displayText }}\" type=\"number\" step=\"0.001\" model=\"details[field.prop] != null ? details[field.prop] : vm.jobTypeDetails[field.prop]\" data-test=\"{{field.dataTest}}\"></super-input-text><super-input-text class=\"{{field.prop}}\" ng-if=\"vm.editMode\" edit-mode=\"vm.editMode\" label=\"{{ field.displayText }}\" type=\"number\" step=\"0.001\" model=\"details[field.prop]\" placeholder=\"{{ vm.jobTypeDetails[field.prop] }}\" data-test=\"{{field.dataTest}}\"></super-input-text><button type=\"button\" ss-icon-after=\"rotate-left\" title=\"Revert\" class=\"revert-val\" ng-click=\"go.revert(field.prop)\" ng-if=\"vm.editMode && details[field.prop] != null && jobTypeDetails != null\" data-test=\"{{field.dataTest}}-revert\">(<span ng-bind=\"vm.jobTypeDetails[field.prop]\"></span>)</button></li></ul></div><!-- Pay schedules available --><div class=\"gd-row\" ng-if=\"jobType != null\"><ul class=\"record-list\"><li><super-input-text class=\"pay-schedule\" edit-mode=\"false\" label=\"Pay Schedule\" model=\"details.paySchedule._name\" data-test=\"pay-schedule-name\">N/A</super-input-text></li><li><super-select-list class=\"pay-lane\" edit-mode=\"vm.editMode\" ng-if=\"vm.payScheduleIsValid\" label=\"Pay Lane\" model=\"details._payLane\" ss-validate=\"validator.required(details._payLane, 'pay lane')\" data-test=\"pay-lane\"><super-select-list-item value=\"$index\" label=\"lane.name\" ng-repeat=\"lane in details.paySchedule._payLanes\"></super-select-list-item></super-select-list><dl data-test=\"pay-lane\" class=\"data-field pay-lane\" ng-if=\"!vm.payScheduleIsValid\"><dt>Pay Lane</dt><dd>N/A</dd></dl></li><li><super-select-list class=\"pay-step\" edit-mode=\"vm.editMode\" ng-if=\"vm.payScheduleIsValid\" label=\"Pay Step\" model=\"details._payStep\" ss-validate=\"validator.step()\" data-test=\"pay-step\"><super-select-list-item value=\"$index\" label=\"step.name\" ng-repeat=\"step in vm.paySteps\"></super-select-list-item></super-select-list><dl data-test=\"pay-step\" class=\"data-field pay-step\" ng-if=\"!vm.payScheduleIsValid\"><dt>Pay Step</dt><dd>N/A</dd></dl></li></ul></div><div class=\"gd-row\" ng-if=\"jobType != null\"><ul class=\"record-list\"><li><super-select-list class=\"pay-type\" edit-mode=\"vm.editMode\" default-option-label=\"None\" ng-if=\"!vm.payScheduleIsValid\" label=\"Pay Type\" model=\"details._payRateFrequency\" data-test=\"pay-type\"><super-select-list-item label=\"'None'\" value=\"null\"></super-select-list-item><super-select-list-item ng-repeat=\"option in vm.payRateOptions\" label=\"option.name\" value=\"option.value\"></super-select-list-item></super-select-list><dl class=\"data-field pay-type\" ng-if=\"vm.payScheduleIsValid\" data-test=\"pay-type\"><dt>Pay Type</dt><dd ng-bind=\"vm.payRateFrequencyString\"></dd></dl></li><li><super-input-text class=\"pay-period\" label=\"Pay/Period\" edit-mode=\"false\" model=\"vm.payPerPeriod | currency\" data-test=\"pay-period\">N/A</super-input-text></li><li class=\"revertable-field\" ng-class=\"{'empty-field': !vm.editMode && details._payPeriodsPerYear == null}\"><super-input-text class=\"periods-year\" ng-if=\"!vm.editMode\" edit-mode=\"vm.editMode\" type=\"number\" step=\"0.001\" label=\"Periods/Year\" model=\"details._payPeriodsPerYear != null ? details._payPeriodsPerYear : vm.jobTypeDetails._payPeriodsPerYear\" data-test=\"periods-year\"></super-input-text><super-input-text class=\"periods-year\" ng-if=\"vm.editMode\" edit-mode=\"vm.editMode\" type=\"number\" step=\"0.001\" label=\"Periods/Year\" model=\"details._payPeriodsPerYear\" placeholder=\"{{ vm.jobTypeDetails._payPeriodsPerYear }}\" data-test=\"periods-year\"></super-input-text><button type=\"button\" ss-icon-after=\"rotate-left\" title=\"Revert\" class=\"revert-val\" ng-click=\"go.revert('_payPeriodsPerYear')\" ng-if=\"vm.editMode && details._payPeriodsPerYear != null\" data-test=\"periods-year-revert\">(<span ng-bind=\"vm.jobTypeDetails._payPeriodsPerYear\"></span>)</button></li><li class=\"annual-salary-number revertable-field\" ng-if=\"vm.payRateFrequencyString != null\" ng-class=\"{'empty-field': !vm.editMode && details._payRate == null}\"><super-input-text class=\"salary\" type=\"number\" step=\"0.001\" ng-if=\"!vm.editMode\" edit-mode=\"vm.editMode\" label=\"{{ vm.payRateFrequencyString }}\" model=\"vm.annualSalary | currency\" data-test=\"annual-salary\"></super-input-text><span ng-if=\"vm.editMode\">$</span><super-input-text class=\"salary\" type=\"number\" step=\"0.001\" ng-if=\"vm.editMode\" edit-mode=\"vm.editMode\" label=\"{{ vm.payRateFrequencyString }}\" model=\"details._payRate\" placeholder=\"{{ vm.annualSalary }}\" data-test=\"annual-salary\"></super-input-text><button type=\"button\" ss-icon-after=\"rotate-left\" title=\"Revert\" class=\"revert-val\" ng-click=\"go.revert('_payRate')\" ng-if=\"vm.editMode && details._payRate != null\" data-test=\"annual-salary-revert\">(<span ng-bind=\"vm.annualSalary | currency\"></span>)</button></li></ul><div class=\"hourly-help-text\" ng-if=\"(!vm.payScheduleIsValid && !vm.jobTypeDetailValuesAreValid)\" data-test=\"hourly-help-text\">Please input the Pay Type, Hours/Day, Work Days/Year and Periods/Year to calculate the Hourly Salary.</div></div><!-- No pay schedule available so everything is N/A --><div class=\"gd-row\" ng-if=\"jobType == null\"><ul class=\"record-list\"><li><dl class=\"data-field pay-schedule\"><dt>Pay Schedule</dt><dd>N/A</dd></dl></li><li><dl data-test=\"pay-lane\" class=\"data-field pay-lane\"><dt>Pay Lane</dt><dd>N/A</dd></dl></li><li><dl data-test=\"pay-step\" class=\"data-field pay-step\"><dt>Pay Step</dt><dd>N/A</dd></dl></li></ul></div><div class=\"gd-row\" ng-if=\"jobType == null\"><ul class=\"record-list\"><li><dl class=\"data-field pay-period\"><dt>Pay/Period</dt><dd>N/A</dd></dl></li><li><dl class=\"data-field periods-year\"><dt>Periods/Year</dt><dd>N/A</dd></dl></li><li><dl class=\"data-field salary\"><dt>Salary</dt><dd>N/A</dd></dl></li></ul></div></div></div>`);c.put('components/super-assignment-list/assignment-list.html',`<div class=\"super-assignment-list\" ss-pending=\"vm.loading\" data-test=\"assignments\"><!-- PRIMARY assignments --><div class=\"record\" ss-validate=\"validator.validate()\" data-test=\"primary-assignments\"><h3>Primary Assignment</h3><super-button smp ng-if=\"vm.editMode\" ss-permitted=\"assignments.create\" ng-click=\"go.addPrimary()\" label=\"Add New Primary Assignment\" ss-icon=\"plus-circle\" ng-disabled=\"vm.editingId != null\" data-test=\"add-primary-assignment\"></super-button><div class=\"no-assignments\" ng-if=\"!vm.newPrimaryPosition && !vm.primaryPosition && !vm.futurePrimaryPositions.length && !vm.pastPositions.length\" data-test=\"no-primary-assignment\">No Primary Assignment</div><!-- NEW PRIMARY position --><super-assignment ng-if=\"vm.newPrimaryPosition\" position=\"vm.newPrimaryPosition\" mode=\"go.getMode(vm.newPrimaryPosition)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(vm.newPrimaryPosition)\" cancel=\"go.cancelPosition(vm.newPrimaryPosition)\" data-test=\"new-primary-assignment\"></super-assignment><!-- FUTURE PRIMARY positions --><super-assignment ng-if=\"vm.futurePrimaryPositions.length\" position=\"position\" ng-repeat=\"position in vm.futurePrimaryPositions\" mode=\"go.getMode(position)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(position, vm.futurePrimaryPositions)\" cancel=\"go.cancelPosition(position)\" data-test=\"future-primary-assignment\"></super-assignment><!-- PRIMARY position --><super-assignment ng-if=\"vm.primaryPosition\" position=\"vm.primaryPosition\" mode=\"go.getMode(vm.primaryPosition)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(vm.primaryPosition)\" cancel=\"go.cancelPosition(vm.primaryPosition)\" data-test=\"current-primary-assignment\"></super-assignment><!-- PAST positions --><div ng-if=\"vm.pastPositions.length\"><button type=\"button\" class=\"smp show-hide-details {{ vm.pastPositionsExpanded ? 'fa-angle-down-after' : 'fa-angle-up-after' }} ss-toggle-closed\" ss-toggle=\"toggle-content\" ss-toggle-start-expanded=\"{{vm.pastPositionsExpanded}}\" ng-click=\"vm.pastPositionsExpanded = !vm.pastPositionsExpanded\" data-test=\"past-primary-assignments-toggle\">{{ vm.pastPositionsExpanded ? 'Hide' : 'View' }} Past Assignments</button><div class=\"toggle-content\" data-test=\"past-primary-assignments\"><h3>Past Assignment(s)</h3><super-assignment position=\"position\" ng-repeat=\"position in vm.pastPositions\" mode=\"go.getMode(position)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(position, vm.pastPositions)\" cancel=\"go.cancelPosition(position)\" data-test=\"past-primary-assignment\"></super-assignment></div></div></div><!-- ADDITIONAL assignments --><div class=\"record\" data-test=\"secondary-assignments\"><h3>Additional Assignment</h3><super-button smp ng-if=\"vm.editMode\" ss-permitted=\"assignments.create\" ng-click=\"go.addSecondary()\" label=\"Add New Additional Assignment\" ss-icon=\"plus-circle\" ng-disabled=\"vm.editingId != null\" data-test=\"add-secondary-assignment\"></super-button><div class=\"no-assignments\" ng-if=\"!vm.newPosition && !vm.futureOtherPositions.length && !vm.otherPositions.length && !vm.pastOtherPositions.length\" data-test=\"no-secondary-assignment\">No Additional Assignment</div><!-- NEW ADDITIONAL position --><super-assignment ng-if=\"vm.newPosition != null\" position=\"vm.newPosition\" mode=\"go.getMode(vm.newPosition)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(vm.newPosition)\" cancel=\"go.cancelPosition(vm.newPosition)\" data-test=\"new-secondary-assignment\"></super-assignment><!-- FUTURE OTHER postions --><super-assignment ng-if=\"vm.futureOtherPositions\" position=\"position\" ng-repeat=\"position in vm.futureOtherPositions\" mode=\"go.getMode(position)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(position, vm.futureOtherPositions)\" cancel=\"go.cancelPosition(position)\" data-test=\"future-secondary-assignment\"></super-assignment><!-- OTHER positions --><super-assignment ng-if=\"vm.otherPositions\" position=\"position\" ng-repeat=\"position in vm.otherPositions\" mode=\"go.getMode(position)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(position, vm.otherPositions)\" cancel=\"go.cancelPosition(position)\" data-test=\"current-secondary-assignment\"></super-assignment><!-- PAST OTHER positions --><div ng-if=\"vm.pastOtherPositions.length\"><button type=\"button\" class=\"smp show-hide-details {{ vm.pastOtherPositionsExpanded ? 'fa-angle-down-after' : 'fa-angle-up-after' }} ss-toggle-closed\" ss-toggle=\"toggle-content\" ss-toggle-start-expanded=\"{{vm.pastOtherPositionsExpanded}}\" ng-click=\"vm.pastOtherPositionsExpanded = !vm.pastOtherPositionsExpanded\" data-test=\"past-secondary-assignment-toggle\">{{ vm.pastOtherPositionsExpanded ? 'Hide' : 'View' }} Past Assignments</button><div class=\"toggle-content\" data-test=\"past-secondary-assignments\"><h3>Past Assignment(s)</h3><super-assignment position=\"position\" ng-repeat=\"position in vm.pastOtherPositions\" mode=\"go.getMode(position)\" org=\"org\" permissions=\"vm.permissions\" remove=\"go.removePosition(position, vm.pastOtherPositions)\" cancel=\"go.cancelPosition(position)\" data-test=\"past-secondary-assignment\"></super-assignment></div></div></div></div>`);c.put('components/super-credential/credential.html',`<div class=\"super-credential\"><div class=\"edit-container\" ng-if=\"vm.credentialBeingEdited !== null\" ss-pending=\"vm.isProcessing\"><super-credential-add-edit credential=\"vm.credentialBeingEdited\" save-credential=\"go.saveCredential\" cancel-credential=\"go.cancelCredential\" org=\"vm.org\" logged-in-user-key=\"loggedInUserKey\" is-cloning=\"vm.isCloning\"></super-credential-add-edit></div><article class=\"non-edit-container\" ng-class=\"'empcred-{{credential.id}}'\" ng-if=\"vm.credentialBeingEdited === null\" ss-pending=\"vm.isProcessing\"><header><p ng-show=\"vm.deletedIssuer\" class=\"information\" ss-icon=\"info-circle\" role=\"alert\" aria-live=\"polite\">The issuer for this credential has been deleted. To make active or renew, delete this one and add a new credential.</p><p ng-show=\"vm.deletedCredentialType\" class=\"information\" ss-icon=\"info-circle\" role=\"alert\" aria-live=\"polite\">This credential can no longer be issued. To make active or renew, delete this one and add a new credential</p><h4 class=\"credential-name\" ng-bind=\"credential._credential.name\"></h4><ul class=\"credential-meta ss-pipe-children\"><li class=\"meta-item credential-issuer\" ng-if=\"credential._credential.issuer.name\" ng-bind=\"credential._credential.issuer.name\"></li><li class=\"meta-item credential-number\" ng-if=\"credential._credentialNumber\" ng-bind=\"credential._credentialNumber\"></li></ul></header><div><p class=\"subjects\" ng-if=\"credential._subjects.length\" ng-bind=\"go.getSubjects()\"></p><div class=\"dates active\" ng-if=\"go.hasActiveDates()\"><span class=\"issued\" ng-if=\"credential._stateStartedDay\"><span ng-if=\"go.isRenewed()\">Renewed:</span> <span ng-if=\"!go.isRenewed()\">Issued:</span> {{go.showDate(credential._stateStartedDay)}} </span><span class=\"expired\" ng-class=\"{'expires-soon': go.expiresSoon() || go.isExpired() }\" ng-if=\"credential._expirationDay && !go.isForeverFuture()\"><span aria-hidden=\"true\" ng-if=\"go.expiresSoon()\"><i ss-icon=\"warning\"></i>&nbsp;</span> {{go.getExpirationLabel()}}: {{go.showDate(credential._expirationDay)}} </span><span class=\"verifier\" ng-if=\"credential._verifier && credential._verifier.verifiedDay\"><i class=\"shield\" aria-hidden=\"true\" ss-icon=\"shield\"></i> &nbsp;Verified: {{go.showDate(credential._verifier.verifiedDay)}} by {{credential._verifier.name}}</span></div><div class=\"dates in-progress\" ng-if=\"go.hasInProgressDates()\"><span class=\"label\">In Progress</span> <span class=\"started\" ng-if=\"credential._stateStartedDay\">Started: {{go.showDate(credential._stateStartedDay)}}</span> <span class=\"tentative-completion\" ng-if=\"credential._expirationDay\">Tentative Completion: {{go.showDate(credential._expirationDay)}}</span></div><ul class=\"files\" ng-if=\"credential._files.length\" ss-permitted=\"employeeCredentials.viewEmployeeCredentialFiles\"><li ng-repeat=\"file in credential._files\"><i class=\"file-icon\" ss-icon=\"{{ file.isDownloading ? 'spinner' :  go.getIcon(file) }}\"></i><super-button aria-label=\"Download {{ file.name }}\" class=\"add-credential\" link=\"\" label=\"{{ file.name }}\" ng-click=\"go.downloadFile(file)\" is-disabled=\"file.isDownloading\"></super-button></li></ul></div><div class=\"actions-button\"><super-button ng-hide=\"vm.deletedIssuer || vm.deletedCredentialType\" ss-permitted=\"employeeCredentials.create\" class=\"hide-when-archive\" ng-click=\"go.onRenew()\" label=\"Renew\" is-disabled=\"currentlyEditing !== null || (vm.deletedIssuer || vm.deletedCredentialType)\" ng-if=\"!credential._isGrantedForLife && credential._issuedReason !== vm.credentialConstants.CREDENTIAL_INPROGRESS\"></super-button><super-button ng-hide=\"vm.deletedIssuer || vm.deletedCredentialType\" ss-permitted=\"employeeCredentials.create\" class=\"hide-when-archive\" title=\"Change from In-Progress to Active\" ng-click=\"go.onMakeActive()\" label=\"Make Active\" is-disabled=\"currentlyEditing !== null || (vm.deletedIssuer || vm.deletedCredentialType)\" ng-if=\"!credential._isGrantedForLife && credential._issuedReason === vm.credentialConstants.CREDENTIAL_INPROGRESS\"></super-button><super-button class=\"other-empcred-options\" ss-icon-after=\"angle-down\" is-disabled=\"currentlyEditing !== null\" ng-if=\"go.showActions()\"><item class=\"edit-btn hide-when-archive\" ss-permitted=\"employeeCredentials.edit\" ng-click=\"go.onEdit()\"><h6>Edit</h6></item><item class=\"delete-btn\" ng-click=\"go.onDelete()\" ss-permitted=\"employeeCredentials.softDelete\"><h6>Delete</h6></item></super-button></div></article></div>`);c.put('components/super-credential-add-edit/credential-add-edit.html',`<div class=\"super-credential-add-edit\"><form ss-validate-form ng-submit=\"go.saveCredential()\" autocomplete=\"off\"><div class=\"gd-row\"><div ng-if=\"vm.deletedIssuerLockdown\" class=\"message\" ss-icon-before=\"info-circle\">Editing of this credential is limited since the issuer is deleted.</div><div ng-if=\"vm.deletedCredentialLockdown\" class=\"message\" ss-icon-before=\"info-circle\">Editing of this credential is limited since the credential is deleted.</div><br><fieldset class=\"gd-70p\" aria-label=\"Select credential group\" ng-class=\"{ 'block-section': isCloning }\" ng-disabled=\"vm.isEdit\"><div class=\"gd-40p right-border\"><super-input-radio ng-disabled=\"vm.isEdit\" label=\"State & National\" name=\"credential-type\" value=\"0\" model=\"vm.isCustomCredential\"></super-input-radio><div aria-label=\"Credentials added by Frontline Education\" class=\"sub-label\">Added by Frontline Education</div></div><div class=\"gd-60p\"><super-input-radio ng-disabled=\"vm.isEdit\" label=\"Custom\" name=\"credential-type\" value=\"1\" model=\"vm.isCustomCredential\"></super-input-radio><div aria-label=\"Credential added by your district\" class=\"sub-label\">Added by {{ org._name }}</div></div></fieldset><div class=\"gd-30p right\"><super-button ng-click=\"go.cancelAddingCredential()\" label=\"Cancel\" class=\"cancel\"></super-button><super-button smp pri aria-label=\"Save Credential\" type=\"submit\" is-disabled=\"vm.credentialTypeId === null || vm.issuer === null || vm.credentialId === null || credential.data._stateStartedDay === '' || vm.isUploading\" label=\"Save\"></super-button></div></div><div class=\"gd-row no-border\"><div class=\"gd-50p\" ng-class=\"{ 'block-section': isCloning }\"><super-single-filter-list class=\"auto-credential-types\" label=\"Credential Type\" items=\"credential.credentialTypes\" model=\"vm.credentialTypeId\" databind-name=\"_name\" databind-value=\"id\" include-none-option=\"false\" edit-mode=\"!vm.loadingCredentialTypes && !vm.changeLockdown\"></super-single-filter-list><span ss-icon=\"spinner\" class=\"fadeSpinner\" ng-show=\"vm.loadingCredentialTypes\"></span></div></div><div class=\"gd-row border-top fade ng-cloak\" ng-show=\"vm.credentialTypeId !== null\"><div class=\"gd-50p\" ng-class=\"{'right-border': vm.credentialTypeId !== vm.credentialConstants.DRIVER_LICENSE, 'block-section': isCloning}\"><super-single-filter-list required=\"true\" class=\"auto-issuers\" label=\"Issued By\" items=\"vm.issuersToLoad\" model=\"vm.issuer\" databind-name=\"_name\" databind-value=\"id\" include-none-option=\"false\" edit-mode=\"!vm.loadingIssuers && !vm.changeLockdown\"></super-single-filter-list><span ss-icon=\"spinner\" class=\"fadeSpinner\" ng-show=\"vm.loadingIssuers\"></span></div><div class=\"gd-50p\" ng-if=\"vm.credentialTypeId !== vm.credentialConstants.DRIVER_LICENSE\" ng-class=\"{ 'block-section': vm.issuer === null || isCloning }\"><super-single-filter-list required=\"true\" class=\"auto-credentials\" label=\"{{ credential.getCredentialLabelsByCredentialType(vm.credentialTypeId) }}\" items=\"credential.credentials\" model=\"vm.credentialId\" databind-name=\"_name\" databind-value=\"id\" include-none-option=\"false\" edit-mode=\"credential.credentials.length > 0 && !vm.loadingCredentials && !vm.changeLockdown\"></super-single-filter-list><div ng-if=\"vm.issuer != null && !credential.credentials.length && !vm.loadingCredentials && vm.issuer !== -1\" class=\"message\" ss-icon-before=\"info-circle\">There are no available items for this Issuer.</div><span ss-icon=\"spinner\" class=\"fadeSpinner\" ng-show=\"!credential.credentials.length && vm.loadingCredentials\"></span></div></div><div class=\"gd-row fade ng-cloak\" ng-show=\"vm.credentialTypeId !== null\"><div class=\"gd-50p right-border\" ng-if=\"vm.credentialTypeId !== vm.credentialConstants.DRIVER_LICENSE\" ng-class=\"{ 'block-section': vm.issuer === null }\"><super-multi-filter-list class=\"auto-subjects\" label=\"{{ credential.getSubjectAreaLabelByCredentialType(vm.credentialTypeId) }}\" display=\"tags\" selected=\"vm.selectedSubjects\" is-disabled=\"!credential.subjects.length || vm.loadingSubjects || vm.changeLockdown\"><super-multi-filter-list-item ng-repeat=\"subject in credential.subjects\" option=\"subject\"></super-multi-filter-list-item></super-multi-filter-list><div ng-if=\"vm.issuer != null && !credential.subjects.length && !vm.loadingSubjects && vm.issuer !== -1\" class=\"message\" ss-icon-before=\"info-circle\">Thereare no available items for this Issuer.</div><span ss-icon=\"spinner\" class=\"fadeSpinner\" ng-show=\"!credential.subjects.length && vm.loadingSubjects\"></span></div><div class=\"gd-50p\" ng-class=\"{ 'block-section': vm.issuer === null }\"><super-input-text ss-validate=\"go.validateCredentialNumber(vm.credentialNumber)\" class=\"auto-certification-number\" model=\"vm.credentialNumber\" required=\"vm.credentialTypeId === vm.credentialConstants.DRIVER_LICENSE\" label=\"{{ credential.getCredentialIdentifierByCredentialType(vm.credentialTypeId) }}\"></super-input-text></div></div><div class=\"gd-row fade ng-cloak\" ng-show=\"vm.credentialTypeId !== null\"><super-credential-status ng-class=\"{ 'block-section': vm.issuer === null }\" credential=\"credential\" credential-type-id=\"vm.credentialTypeId\" credential-id=\"vm.credentialId\" issuer=\"vm.issuer\" logged-in-user-key=\"loggedInUserKey\" is-cloning=\"isCloning\"></super-credential-status></div><div class=\"gd-row file-attachments\" ng-if=\"vm.credentialTypeId !== null\" ss-permitted=\"employeeCredentials.viewEmployeeCredentialFiles\"><div class=\"gd-20p\">Attachments</div><div class=\"gd-80p\"><super-credential-files files=\"vm.files\" is-uploading=\"vm.isUploading\"></super-credential-files></div></div></form></div>`);c.put('components/super-credential-files/credential-files.html',`<div class=\"super-credential-files\"><div><ul class=\"uploaded-files\" ng-if=\"files.length\"><li class=\"file-item\" ng-repeat=\"file in files track by $index\" ng-class=\"{'markDeleted': file.isDeleted }\"><i class=\"file-icon\" ss-icon=\"{{ file.isDownloading ? 'spinner' :  go.getIcon(file) }}\"></i> <span class=\"file-name-group\"><super-button aria-label=\"Download {{ file.name }}\" class=\"add-credential\" label=\"{{ file.name }}\" link=\"\" ng-click=\"go.download(file)\" is-disabled=\"file.isDownloading\"></super-button><span class=\"file-meta\"><span class=\"extension\">{{ go.getExtension(file) }}</span> added <span ng-bind=\"file.createdUtc | date: 'MM/dd/yyyy'\"></span></span></span><super-button ss-icon-after=\"angle-down\" ss-permitted=\"employeeCredentials.deleteEmployeeCredentialFiles\"><item ng-click=\"go.deleteFile(file)\" aria-label=\"Remove {{ file.name }} from form\" title=\"Remove {{ file.name }}\"><h6>Delete</h6></item></super-button></li></ul></div><label for=\"file-upload\" class=\"fileContainer\" ss-permitted=\"employeeCredentials.uploadEmployeeCredentialFiles\"><div type=\"button\" class=\"super-button std uploadContainer\" ng-disabled=\"$scope.isUploading\">{{ $scope.isUploading ? 'Uploading...' : 'Upload File Attachment' }}<fluid-file-upload tmpl:prop=\"Default Value\" class-name=\"'file-upload-button'\" name=\"'file'\" accept=\"vm.accept\" aria-label=\"'Select file'\" on:change=\"go.sendFile($event)\"></fluid-file-upload></div></label></div>`);c.put('components/super-credential-status/credential-status.html',`<div class=\"super-credential-status\"><fieldset aria-label=\"Select credential status\"><div class=\"flex-container statuses\" ng-class=\"{ 'block-section': isCloning }\"><div class=\"flex-item\" ng-repeat=\"status in vm.allCredentialStatuses\"><super-input-radio label=\"{{ status.label }}\" name=\"credentialStatus\" value=\"{{ status.value }}\" model=\"vm.credentialStatus\"></super-input-radio></div></div></fieldset><div class=\"flex-container\"><div class=\"flex-item renewal marginBottom\" ng-class=\"{ 'block-section': vm.isInProgress || isCloning }\"><super-input-checkbox aria-label=\"Renew the credential\" label=\"Renewal\" model=\"vm.isRenewal\"></super-input-checkbox></div><div class=\"flex-item issued date-picker left-border\"><super-input-datepicker ss-validate=\"validator.required(vm.stateStartedDay, credential.getIssueDateLabelsByStatus(vm.credentialStatus))\" label=\"{{ credential.getIssueDateLabelsByStatus(vm.credentialStatus, vm.isRenewal) }}\" required=\"true\" options=\"vm.stateStartedDtOptions\" model=\"vm.stateStartedDay\"></super-input-datepicker></div><div class=\"flex-item expiration\"><div class=\"left-border validation-group\" ss-validate=\"go.validateOr(vm.expirationDay, vm.isGrantedForLife)\"><div ng-class=\"{ 'block-section': vm.isGrantedForLife }\"><super-input-datepicker ss-validate=\"go.validateExpiration()\" class=\"date-picker\" required=\"credentialTypeId === vm.credentialConstants.DRIVER_LICENSE\" label=\"{{ credential.getExpirationDateLabelsByStatus(vm.credentialStatus) }}\" options=\"vm.expirationDtOptions\" is-disabled=\"vm.isGrantedForLife\" model=\"vm.expirationDay\"></super-input-datepicker></div><div class=\"lifetime\" ng-if=\"credentialTypeId !== vm.credentialConstants.DRIVER_LICENSE\" ng-class=\"{ 'block-section': vm.isInProgress || vm.expirationDay }\"><super-input-checkbox aria-label=\"This credential will never expire\" label=\"Lifetime\" model=\"vm.isGrantedForLife\"></super-input-checkbox></div></div></div><div class=\"flex-item verified marginBottom\" ng-class=\"{ 'block-section': vm.isInProgress }\"><super-input-checkbox aria-label=\"Verified by Admin\" label=\"Verified by Admin\" model=\"vm.isVerified\" is-disabled=\"!$root.isPermitted.employeeCredentials.verify\"></super-input-checkbox></div></div></div>`);c.put('components/super-credentials-cntr/credentials-cntr.html',`<div class=\"super-credentials-cntr\"><h3>Certificates, Licenses and Clearances</h3><super-button aria-label=\"Add Credentials\" label=\"Add\" ss-icon=\"plus-circle\" class=\"add-credential\" link=\"\" ng-click=\"go.addCredential()\" is-disabled=\"vm.newCredential !== null || vm.currentlyEditing !== null\" ss-permitted=\"employeeCredentials.create\"></super-button><super-credential-add-edit ss-pending=\"vm.savingCredential\" ng-if=\"vm.newCredential !== null\" credential=\"vm.newCredential\" save-credential=\"go.saveCredential\" cancel-credential=\"go.cancelCredential\" org=\"vm.org\" logged-in-user-key=\"vm.loggedInUserKey\"></super-credential-add-edit><div><super-credentials-list ng-if=\"(vm.credentials.length > 0  && !vm.loadingCredentialList)\" credentials-list=\"vm.credentials\" org=\"vm.org\" logged-in-user-key=\"vm.loggedInUserKey\" currently-editing=\"vm.currentlyEditing\"></super-credentials-list><p class=\"no-credentials\" ng-if=\"(vm.credentials.length == 0 && !vm.loadingCredentialList && vm.currentlyEditing == null)\">No credentials added</p><div class=\"credential-loader\" ng-class=\"{'spinning': vm.loadingCredentialList, 'not-spinning': !vm.loadingCredentialList}\" ng-show=\"vm.loadingCredentialList\" ss-pending=\"vm.loadingCredentialList\"></div></div></div>`);c.put('components/super-credentials-list/credentials-list.html',`<div class=\"super-credentials-list\"><div class=\"recent-credentials\" ng-show=\"vm.recent && vm.recent.length\"><super-credential ng-repeat=\"credential in vm.recent\" credential=\"credential\" org=\"org\" currently-editing=\"ctrl.currentlyEditing\" save-credential=\"go.saveCredential\" delete-credential=\"go.deleteCredential\"></super-credential></div><div ng-if=\"vm.archive.length\"><span><h3 class=\"header\">Archived ({{ vm.archive.length }})</h3></span><button type=\"button\" class=\"smp show-hide-details {{ (vm.archiveExpanded) ? 'fa-angle-up-after' : 'fa-angle-down-after' }} ss-toggle-closed\" ng-click=\"go.toggle()\"><span>{{ (vm.archiveExpanded) ? 'Hide' : 'View' }}</span></button></div><div class=\"archived-credentials\" ng-show=\"vm.archiveExpanded\"><div><super-credential ng-repeat=\"credential in vm.archive\" credential=\"credential\" org=\"org\" currently-editing=\"ctrl.currentlyEditing\" save-credential=\"go.saveCredential\" delete-credential=\"go.deleteCredential\"></super-credential></div></div></div>`);c.put('components/super-document-editor/document-editor.html',`<div class=\"super-document-editor\"><!-----------------------------\rView\r------------------------------><!-- FILE --><div class=\"flex-wrapper document-view\" ng-if=\"model.isFile && !vm.isEdit\"><div class=\"flex-item content\"><i class=\"file-icon\" role=\"presentation\" ss-icon-before=\"{{ vm.fileIcon }}\"></i> <a class=\"document\" href=\"#\" ng-click=\"go.downloadFile(model._fileId)\" ng-bind=\"model._name\" title=\"View {{ model._name }}\"></a><ul class=\"ss-pipe-children file-meta\"><li class=\"file-ext\">.{{vm.extension}} file</li><li class=\"file-date\">{{vm.fileDateUtc}}</li></ul></div><div class=\"document-actions\" ng-if=\"employeePermissions.props[categoryPermission].edit\"><button type=\"button\" ss-icon=\"pencil\" class=\"smp edit\" ng-click=\"vm.isEdit = true\" ng-disabled=\"\"></button></div></div><!-- WEB FORM --><div class=\"flex-wrapper document-view\" ng-if=\"!model.isFile && !vm.isEdit\"><div class=\"flex-item content\"><i class=\"file-icon\" role=\"presentation\" ss-icon-before=\"{{ vm.fileIcon }}\"></i> <a class=\"document\" href=\"#\" ng-bind=\"model._name\" ng-click=\"go.viewOnline(model._formInstanceId)\" title=\"View {{ model._name }}\"></a><ul class=\"ss-pipe-children file-meta\"><li class=\"file-ext\">Web Form</li><li class=\"file-date\">{{vm.fileDateUtc}}</li><li class=\"file-attachments\" ng-if=\"vm.filesOnInstance.length\"><span ss-icon=\"spinner\" ng-if=\"vm.loadingFiles\"></span><super-popover link=\"{{ vm.filesOnInstance.length }}\" ss-icon=\"paperclip\" ng-if=\"!vm.loadingFiles\" title=\"file attachments\"><p>UPLOADED FILES (<small>These files were uploaded by a user as part of a workflow step.</small>)</p><ul class=\"popover-step-list\" ng-repeat=\"file in vm.filesOnInstance\"><li ss-icon-before=\"{{ file.icon }}\" ng-bind=\"file.filename\" ng-click=\"go.downloadFile(file.id)\" title=\"click to download {{file.filename}}\"></li></ul><p><button ng-if=\"vm.filesOnInstance.length > 1\" ng-click=\"go.downloadFiles(vm.filesOnInstance)\">Download all {{ vm.filesOnInstance.length }} files</button></p></super-popover></li><li ng-if=\"featureFlags['fc_enhanced_denied_form_workflow'] && model._deniedInfo\"><span ng-if=\"!vm.validDeniedInfo\" class=\"denied\" ss-icon=\"thumbsdown-stripes\">Form Denied</span><super-popover ng-if=\"vm.validDeniedInfo\" class=\"denied\" link=\"Form Denied\" aria-label=\"Click here for denied info.\" ss-icon=\"thumbsdown-stripes\">Denied by {{model._deniedInfo.denier.name}}<br>Comments: {{model._deniedInfo.comments}}</super-popover></li></ul></div><div class=\"document-actions\" ng-if=\"employeePermissions.props[categoryPermission].edit\"><button type=\"button\" ss-icon=\"pencil\" class=\"smp edit\" ng-click=\"vm.isEdit = true\" ng-disabled=\"\"></button></div></div><!-----------------------------\rEdit\r------------------------------><form ng-if=\"vm.isEdit\" class=\"flex-wrapper document-edit\" ss-pending=\"vm.saving\" ng-submit=\"go.save()\" ss-validate-form><fieldset class=\"flex-item content\"><div class=\"flex-wrapper\"><i class=\"file-icon\" role=\"presentation\" ss-icon-before=\"{{ vm.fileIcon }}\"></i><div class=\"flex-item file-name\"><a class=\"document\" href=\"#\" ng-if=\"!model.isFile\" ng-bind=\"model._name\" ng-click=\"go.viewOnline(model._formInstanceId)\" title=\"View {{ model._name }}\"></a><super-input-text ng-if=\"model.isFile\" required=\"true\" ss-validate=\"validator.required(model._name, 'file name')\" model=\"model._name\" name=\"fileName\"></super-input-text></div><div class=\"flex-item file-category\"><super-select-list model=\"vm.webFormCategory\"><super-select-list-item type=\"heading\" label=\"'Personnel Documents'\"></super-select-list-item><super-select-list-item value=\"'0-' + cat.value\" label=\"cat.name\" ng-repeat=\"cat in vm.categoryEnums.personnel\" ng-if=\"employeePermissions.props[cat.properties.permission].view\"></super-select-list-item><super-select-list-item type=\"heading\" label=\"'Medical Documents'\"></super-select-list-item><super-select-list-item value=\"'1-' + cat.value\" label=\"cat.name\" ng-repeat=\"cat in vm.categoryEnums.medical\" ng-if=\"employeePermissions.props[cat.properties.permission].view\"></super-select-list-item></super-select-list></div></div></fieldset><fieldset class=\"document-actions\"><button type=\"submit\" class=\"save\" ss-icon=\"check\" title=\"Save\"></button> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" ng-click=\"go.cancelEdit()\" title=\"Cancel\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" ng-click=\"onRemove({$item: model})\" title=\"Delete\"></button></fieldset></form></div>`);c.put('components/super-emergency-contact/emergency-contact.html',`<div class=\"super-emergency-contact\" ss-pending=\"vm.loading\"><form id=\"emergency-contacts\" ss-validate-form ng-submit=\"go.save()\" autocomplete=\"off\" ng-if=\"vm.permitted.emergencyContacts.view\"><div class=\"control-panel\" ng-if=\"vm.permitted.emergencyContacts.edit\"><super-button label=\"Edit Emergency\" ng-click=\"go.edit()\" ng-if=\"!vm.editMode\"></super-button><super-button label=\"Cancel\" ng-click=\"go.cancel()\" ng-if=\"vm.editMode\" is-disabled=\"vm.saving\"></super-button><super-button pri label=\"Save\" type=\"submit\" ss-pending=\"vm.saving\" ng-if=\"vm.editMode\"></super-button></div><div class=\"record\" data-qa=\"primary-contact\" ss-validate=\"go.validateOr(vm.primary)\"><h3>Primary Emergency Contact</h3><div class=\"row\"><ul class=\"record-list\"><li><super-input-text permissions=\"vm.permitted.emergencyContacts\" model=\"vm.primary._contactName\" edit-mode=\"vm.editMode\" label=\"Name\" name=\"contactName\"></super-input-text></li><li><super-select-list label=\"Relationship\" model=\"vm.primary._relationshipType\" permissions=\"vm.permitted.emergencyContacts\" edit-mode=\"vm.editMode\" default-option-value=\"-1\" include-default-option=\"true\" enum-type=\"relationshipTypes\"><super-select-list-item ng-repeat=\"option in vm.options\" value=\"option.value\" label=\"option.name\" ng-if=\"go.hideLabel(option.value)\"></super-select-list-item></super-select-list></li><li class=\"remove\"><super-button smp label=\"Clear\" ss-icon=\"times\" ss-pending=\"vm.removing\" ng-if=\"vm.editMode\" ng-click=\"go.clearContact(vm.primary)\"></super-button></li></ul></div><div class=\"row\"><ul class=\"record-list\"><li><super-input-text name=\"primaryPhonePersonal\" model=\"vm.primary._primaryPhone\" edit-mode=\"vm.editMode\" label=\"Phone Number - Personal\" mask=\"phone\" ss-validate=\"vm.validator.phone(vm.primary._primaryPhone, 'Phone Number')\" permissions=\"vm.permitted.emergencyContacts\"></super-input-text></li><li><super-input-text name=\"primaryPhoneWork\" model=\"vm.primary._alternatePhone\" edit-mode=\"vm.editMode\" label=\"Phone Number - Work\" mask=\"phone\" ss-validate=\"vm.validator.phone(vm.primary._alternatePhone, 'Phone Number')\" permissions=\"vm.permitted.emergencyContacts\"></super-input-text></li></ul></div></div><div class=\"record\" data-qa=\"secondary-contact\" ss-validate=\"go.validateOr(vm.secondary)\"><h3>Secondary Emergency Contact</h3><div class=\"row\"><ul class=\"record-list\"><li><super-input-text model=\"vm.secondary._contactName\" edit-mode=\"vm.editMode\" label=\"Name\" name=\"contactName\" permissions=\"vm.permitted.emergencyContacts\"></super-input-text></li><li><super-select-list label=\"Relationship\" model=\"vm.secondary._relationshipType\" permissions=\"vm.permitted.emergencyContacts\" edit-mode=\"vm.editMode\" default-option-value=\"-1\" include-default-option=\"true\" enum-type=\"relationshipTypes\"><super-select-list-item ng-repeat=\"option in vm.options\" value=\"option.value\" label=\"option.name\" permissions=\"vm.permitted.emergencyContacts\" ng-if=\"go.hideLabel(option.value)\"></super-select-list-item></super-select-list></li><li class=\"remove\"><super-button smp label=\"Clear\" ss-icon=\"times\" ss-pending=\"vm.removing\" ng-if=\"vm.editMode\" ng-click=\"go.clearContact(vm.secondary)\"></super-button></li></ul></div><div class=\"row\"><ul class=\"record-list\"><li><super-input-text name=\"secondaryPhonePersonal\" model=\"vm.secondary._primaryPhone\" edit-mode=\"vm.editMode\" label=\"Phone Number - Personal\" mask=\"phone\" ss-validate=\"vm.validator.phone(vm.secondary._primaryPhone, 'Phone Number')\" permissions=\"vm.permitted.emergencyContacts\"></super-input-text></li><li><super-input-text name=\"secondaryPhoneWork\" model=\"vm.secondary._alternatePhone\" edit-mode=\"vm.editMode\" label=\"Phone Number - Work\" mask=\"phone\" ss-validate=\"vm.validator.phone(vm.secondary._alternatePhone, 'Phone Number')\" permissions=\"vm.permitted.emergencyContacts\"></super-input-text></li></ul></div></div></form></div>`);c.put('components/super-employment-info/employment-info.html',`<div class=\"super-employment-info\" ss-pending=\"vm.loading && !employeeVm.refreshing\"><div ng-class=\"{'edit-mode': vm.editMode}\" ng-if=\"vm.employee != null\"><form ng-submit=\"go.save()\" ss-validate-form><div class=\"control-panel\" ng-if=\"vm.anyFieldIsEditable\"><super-button ng-if=\"!vm.editMode\" label=\"Edit Employment\" ng-click=\"go.edit()\" data-test=\"edit\"></super-button><super-button ng-if=\"vm.editMode\" label=\"Cancel\" ng-click=\"go.cancel()\" data-test=\"cancel\"></super-button><super-button ng-if=\"vm.editMode\" class=\"save-button\" type=\"submit\" pri label=\"Save\" data-test=\"save\"></super-button></div><div class=\"record\"><h3>Employment</h3><div class=\"gd-row\"><ul class=\"record-list\" ng-if=\"vm.permitted.hireDate.view || vm.permitted.seniorityDate.view || vm.permitted.tenureDate.view || vm.permitted.retirementSystem.view\"><li ng-if=\"vm.permitted.hireDate.view\"><super-input-text ng-if=\"!vm.editMode\" permissions=\"vm.permitted.hireDate\" label=\"Hire Date\"><span ng-bind=\"vm.hireDateTxt\" data-test=\"hire-date\"></span> <span ng-if=\"vm.hireDateTxt.length\" data-test=\"hire-date-from-now\">{{vm.hireDateTxt | fromNow:'days':'Y[y] / M[m] / D[d]'}}</span></super-input-text><super-input-datepicker ng-if=\"vm.editMode\" class=\"hire-date\" permissions=\"vm.permitted.hireDate\" model=\"vm.hireDateTxt\" label=\"Hire Date\" edit-mode=\"vm.editMode\" data-test=\"hire-date\"></super-input-datepicker><span ng-if=\"vm.editMode && vm.hireDateTxt.length\" data-test=\"hire-date-from-now\">{{vm.hireDateTxt | fromNow:'days':'Y[y] / M[m] / D[d]'}}</span></li><li ng-if=\"vm.permitted.seniorityDate.view\"><super-input-datepicker permissions=\"vm.permitted.seniorityDate\" model=\"vm.seniorityDateTxt\" label=\"Seniority Date\" edit-mode=\"vm.editMode\" data-test=\"seniority-date\"></super-input-datepicker></li><li ng-if=\"vm.permitted.tenureDate.view\"><super-input-datepicker permissions=\"vm.permitted.tenureDate\" model=\"vm.tenureDateTxt\" label=\"Tenure Date\" edit-mode=\"vm.editMode\" data-test=\"tenure-date\"></super-input-datepicker></li><li ng-if=\"vm.permitted.retirementSystem.view\"><super-single-filter-list label=\"Retirement System\" items=\"vm.retirementSystems\" model=\"vm.employee._retirementSystem.id\" edit-mode=\"vm.editMode && vm.permitted.retirementSystem.edit\" databind-name=\"name\" databind-value=\"value\" include-none-option=\"false\" data-test=\"retirement-system\"></super-single-filter-list></li></ul></div><div class=\"gd-row\" ng-if=\"featureFlags.hasStateEducatorIdonEmployment && vm.permitted.stateEducatorId.view\"><ul class=\"record-list\"><li class=\"educator-id\" ss-hide-when-empty><super-input-text permissions=\"vm.permitted.stateEducatorId\" edit-mode=\"vm.editMode\" model=\"vm.employee._stateEducatorId\" label=\"State Educator ID\" name=\"educator-id\" id=\"external-id\" aria-label=\"educator id\" ss-validate=\"validator.educatorId(vm.employee._stateEducatorId)\" data-test=\"state-educator-id\"></super-input-text></li></ul></div></div><div class=\"record\" ng-if=\"vm.permitted.supervisor.view\"><super-supervisors employee=\"vm.employee\" edit-mode=\"vm.editMode\" org=\"vm.org\"></super-supervisors></div><div class=\"record\" ng-if=\"vm.permitted.statusHistory.view\"><super-status-group employee=\"vm.employee\" edit-mode=\"vm.editMode\" org=\"vm.org\"></super-status-group></div><div class=\"record\" ng-if=\"!vm.loading && vm.permitted.assignments.view\"><super-assignment-list employee=\"vm.employee\" edit-mode=\"vm.editMode\" org=\"vm.org\" positions=\"vm.positions\" on-load=\"go.assignmentsAreLoaded($loaded)\"></super-assignment-list></div></form></div></div>`);c.put('components/super-input-ssn/input-ssn.html',`<div class=\"super-input-ssn\" ng-class=\"{'showing-value': vm.showValue, 'has-value': hasValue}\"><!-- We have a value and are showing it in edit mode --><super-input-text mask=\"ssn\" ng-show=\"hasValue && vm.showValue\" edit-mode=\"vm.editMode\" model=\"cmpt.model\" permissions=\"vm.permissions\" name=\"{{name}}\" input-id=\"{{inputId}}\" placeholder=\"{{placeholder}}\" label=\"{{label}}\" label-weight=\"{{labelWeight}}\" required=\"required\" is-disabled=\"isDisabled\"></super-input-text><!-- We have a value and are not showing it. Show stars --><super-input-text ng-show=\"hasValue && !vm.showValue\" edit-mode=\"false\" model=\"vm.redactedValue\" permissions=\"vm.permissions\" name=\"{{name}}\" input-id=\"{{inputId}}\" placeholder=\"{{placeholder}}\" label=\"{{label}}\" label-weight=\"{{labelWeight}}\" required=\"required\" is-disabled=\"isDisabled\"></super-input-text><!-- We do not have a value. Use super-input-text as is --><super-input-text mask=\"ssn\" ng-if=\"!hasValue\" edit-mode=\"vm.editMode\" model=\"cmpt.model\" permissions=\"vm.permissions\" name=\"{{name}}\" input-id=\"{{inputId}}\" placeholder=\"{{placeholder}}\" label=\"{{label}}\" label-weight=\"{{labelWeight}}\" required=\"required\" is-disabled=\"isDisabled\"></super-input-text><super-button smp label=\"View\" ss-icon=\"eye\" ng-click=\"go.get()\" ng-if=\"!vm.loading && hasValue && !vm.showValue\"></super-button><super-button smp label=\"View\" ss-icon=\"spinner\" is-disabled=\"true\" ng-if=\"vm.loading\"></super-button></div>`);c.put('components/super-medical-documents/medical-documents.html',`<div class=\"super-medical-documents\"><super-employee-documents employee-id=\"vm.employeeId\" category-id=\"1\"></super-employee-documents></div>`);c.put('components/super-personal-info/personal-info.html',`<div class=\"super-personal-info\"><super-personal-info-new employee-id=\"employeeId\" on-before-save=\"onBeforeSave()\" on-after-save=\"onAfterSave()\" on-before-cancel=\"onBeforeCancel()\" on-after-cancel=\"onAfterCancel()\"></super-personal-info-new></div>`);c.put('components/super-personal-info-new/personal-info-new.html',`<div class=\"super-personal-info-new\" ss-pending=\"vm.loading\"><form ng-if=\"vm.emp\" ss-validate-form ng-submit=\"go.save()\" autocomplete=\"off\" ng-class=\"{'is-editing': vm.editMode.personal || vm.editMode.addresses || vm.editMode.emails || vm.editMode.phones}\"><div ng-if=\"vm.emp.hasPlatformSyncIssue\" class=\"error-banner\" role=\"alert\" aria-live=\"polite\">{{vm.emp.platformSyncMessage}}<super-button smp ng-if=\"go.canEdit('personal')\" ng-click=\"go.syncOrgPerson()\" ss-pending=\"vm.saving\" label=\"Select sync to resolve.\"></super-button></div><div class=\"heading\" ng-if=\"vm.editMode.all\"><super-button label=\"Cancel\" ng-click=\"go.cancel()\" data-test=\"cancel-all\"></super-button><super-button pri label=\"Save\" type=\"submit\" ss-pending=\"vm.saving\" data-test=\"save-all\"></super-button></div><section class=\"personal\" aria-labelledby=\"personal-heading\" tabindex=\"0\" data-test=\"section-personal\"><div class=\"control-panel\" ng-if=\"go.canEdit('personal')\"><super-button ng-if=\"!vm.editMode.personal\" ng-disabled=\"go.isEditDisabled('personal')\" label=\"Edit\" ng-click=\"go.edit('personal')\" title=\"Edit your personal details\" data-test=\"edit-personal\"></super-button><super-button ng-if=\"vm.editMode.personal && !vm.editMode.all\" label=\"Cancel\" ng-click=\"go.cancel()\" data-test=\"cancel-personal\"></super-button><super-button ng-if=\"vm.editMode.personal && !vm.editMode.all\" pri label=\"Save\" type=\"submit\" ss-pending=\"vm.saving\" data-test=\"save-personal\"></super-button></div><div class=\"record personal-record\"><h3 id=\"personal-heading\">Personal</h3><div class=\"gd-row\" ss-hide-when-empty><ul class=\"record-list\" ss-hide-when-empty><li class=\"gd-20p\" ss-hide-when-empty><super-select-list permissions=\"vm.permitted.title\" label=\"Title\" model=\"vm.emp._title\" enum-type=\"salutation\" edit-mode=\"vm.editMode.personal\" include-default-option=\"true\" data-test=\"title\"><super-select-list-item ng-repeat=\"option in vm.options.title\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></li><li class=\"gd-20p\" ss-hide-when-empty><super-input-text label=\"First\" name=\"first\" input-id=\"first-name\" aria-label=\"first name\" model=\"vm.emp._firstName\" permissions=\"vm.permitted.firstName\" edit-mode=\"vm.editMode.personal\" ss-validate=\"validator.required(vm.emp._firstName, 'first name')\" data-test=\"first-name\"></super-input-text></li><li class=\"gd-20p\" ss-hide-when-empty><super-input-text label=\"Middle\" name=\"middle\" input-id=\"middle\" aria-label=\"middle name\" model=\"vm.emp._middleName\" edit-mode=\"vm.editMode.personal\" permissions=\"vm.permitted.middleName\" data-test=\"middle-name\"></super-input-text></li><li class=\"gd-20p\" ss-hide-when-empty><super-input-text label=\"Last\" name=\"last\" input-id=\"last\" aria-label=\"last name\" permissions=\"vm.permitted.lastName\" model=\"vm.emp._lastName\" edit-mode=\"vm.editMode.personal\" ss-validate=\"validator.required(vm.emp._lastName, 'last name')\" data-test=\"last-name\"></super-input-text></li><li class=\"gd-20p\" ss-hide-when-empty><super-select-list input-id=\"suffix\" permissions=\"vm.permitted.suffix\" label=\"Suffix\" model=\"vm.emp._suffix\" enum-type=\"suffix\" edit-mode=\"vm.editMode.personal\" include-default-option=\"true\" data-test=\"suffix\"><super-select-list-item ng-repeat=\"option in vm.options.suffix\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></li></ul></div><div class=\"gd-row\" ng-if=\"!vm.editMode.personal\" ss-hide-when-empty><ul class=\"record-list\" ss-hide-when-empty><li><super-input-text label=\"Other/Maiden Name (if applicable)\" input-id=\"alias-name\" name=\"alias-name\" aria-label=\"alias name\" model=\"vm.emp.aliasName\" edit-mode=\"vm.editMode.personal\" permissions=\"vm.permitted.aliasLastName\" data-test=\"alias-name\"></super-input-text></li></ul></div><div class=\"gd-row\" ng-if=\"vm.editMode.personal\" ss-hide-when-empty><ul class=\"record-list\" ss-hide-when-empty><li class=\"gd-35p\" ss-hide-when-empty><super-input-text input-id=\"alias-first-name\" permissions=\"vm.permitted.aliasFirstName\" model=\"vm.emp._aliasFirstName\" label=\"Other/Maiden Name First\" edit-mode=\"vm.editMode.personal\" aria-label=\"Other/Maiden name first\" name=\"aliasFirstName\" data-test=\"alias-first-name\"></super-input-text></li><li class=\"gd-30p\" ss-hide-when-empty><super-input-text input-id=\"alias-first-middle\" permissions=\"vm.permitted.aliasMiddleName\" model=\"vm.emp._aliasMiddleName\" label=\"Other/Maiden Name Middle\" edit-mode=\"vm.editMode.personal\" aria-label=\"Other/Maiden name middle\" name=\"aliasMiddleName\" data-test=\"alias-middle-name\"></super-input-text></li><li class=\"gd-35p\" ss-hide-when-empty><super-input-text input-id=\"alias-first-last\" permissions=\"vm.permitted.aliasLastName\" model=\"vm.emp._aliasLastName\" label=\"Other/Maiden Name Last\" edit-mode=\"vm.editMode.personal\" aria-label=\"Other/Maiden name last\" name=\"aliasLastName\" data-test=\"alias-last-name\"></super-input-text></li></ul></div><div class=\"gd-row\" ss-hide-when-empty><ul class=\"record-list\" ss-hide-when-empty><li class=\"gd-25p birth-date\" ss-hide-when-empty><ul role=\"none\" class=\"gd-row\" ss-hide-when-empty><li class=\"gd-75p\" ss-hide-when-empty><super-input-datepicker input-id=\"birthday\" permissions=\"vm.permitted.birthDateUtc\" model=\"vm.birthDateTxt\" label=\"Birth Date\" edit-mode=\"vm.editMode.personal\" aria-label=\"birth date\" name=\"birthDate\" data-test=\"birth-date\"></super-input-datepicker></li><li class=\"gd-25p\" ss-hide-when-empty><super-input-text ng-if=\"!vm.editMode.personal && vm.birthDateTxt != null\" permissions=\"vm.permitted.age\" model=\"vm.emp._age\" label=\"Age\" aria-label=\"Age\" edit-mode=\"vm.editMode.personal\" name=\"age\" input-id=\"age\" data-test=\"age\"></super-input-text></li></ul></li><li class=\"gd-50p\" ss-hide-when-empty><div class=\"qa-validate-ssn-externalid\" ss-validate=\"go.validateOr([vm.emp._sSN, vm.emp._externalId])\" ss-hide-when-empty><ul role=\"none\" class=\"gd-row\"><li class=\"gd-50p\" ss-hide-when-empty><super-input-ssn model=\"vm.emp._sSN\" employee-id=\"{{vm.emp.id}}\" has-value=\"vm.emp._hasSsn\" edit-mode=\"vm.editMode.personal\" label=\"Social Security #\" name=\"ssn\" input-id=\"ssn\" ss-validate=\"go.validateSSN()\" permissions=\"vm.permitted.ssn\" aria-label=\"Social security number\" data-test=\"ssn\"></super-input-ssn></li><li class=\"gd-50p\" ss-hide-when-empty><super-input-text permissions=\"vm.permitted.externalId\" model=\"vm.emp._externalId\" required=\"$scope.featureFlags['isHRMSEnabled']\" label=\"{{go.getExternalIdLabel()}}\" name=\"external-id\" data-test=\"external-id\" edit-mode=\"vm.editMode.personal\" input-id=\"external-id\" aria-label=\"{{go.getExternalIdLabel()}}\" ss-validate=\"validator.externalId(vm.emp._externalId, 'External Id')\"></super-input-text></li></ul></div></li><li class=\"gd-25p educator-id\" ss-hide-when-empty ng-if=\"featureFlags.hasStateEducatorIdonPersonal\"><super-input-text permissions=\"vm.permitted.stateEducatorId\" model=\"vm.emp._stateEducatorId\" label=\"State Educator ID\" name=\"state-educator-id\" data-test=\"state-educator-id\" input-id=\"state-educator-id\" edit-mode=\"vm.editMode.personal\" aria-label=\"state educator id\" ss-validate=\"validator.educatorId(vm.emp._stateEducatorId)\"></super-input-text></li></ul></div><div class=\"gd-row\" ss-hide-when-empty><ul class=\"record-list\" ss-hide-when-empty><li class=\"gd-20p\" ss-hide-when-empty><super-select-list permissions=\"vm.permitted.maritalStatus\" label=\"Marital Status\" model=\"vm.emp._maritalStatus\" enum-type=\"maritalStatus\" edit-mode=\"vm.editMode.personal\" include-default-option=\"true\" data-test=\"marital-status\"><super-select-list-item ng-repeat=\"option in vm.options.maritalStatus\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></li><li class=\"gd-20p\" ss-hide-when-empty><super-select-list permissions=\"vm.permitted.gender\" label=\"Gender\" model=\"vm.emp._gender\" enum-type=\"gender\" edit-mode=\"vm.editMode.personal\" include-default-option=\"true\" data-test=\"gender\"><super-select-list-item ng-repeat=\"option in vm.options.gender\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></li><li class=\"gd-25p\" ss-hide-when-empty><super-select-list permissions=\"vm.permitted.ethnicity\" label=\"Ethnicity\" model=\"vm.emp._ethnicity\" enum-type=\"ethnicity\" edit-mode=\"vm.editMode.personal\" include-default-option=\"true\" data-test=\"ethnicity\"><super-select-list-item ng-repeat=\"option in vm.options.ethnicity\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></li><li class=\"gd-35p\" ss-hide-when-empty><super-select-list permissions=\"vm.permitted.race\" label=\"Race\" model=\"vm.emp._race\" enum-type=\"race\" edit-mode=\"vm.editMode.personal\" include-default-option=\"true\" data-test=\"race\"><super-select-list-item ng-repeat=\"option in vm.options.race\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></li></ul></div></div></section><section class=\"addresses\" aria-labelledby=\"address-heading\" tabindex=\"0\" ng-if=\"vm.permitted.addresses.view\" data-test=\"section-addresses\"><div class=\"control-panel\" ng-if=\"go.canEdit('addresses')\"><super-button ng-if=\"!vm.editMode.addresses\" ng-disabled=\"go.isEditDisabled('addresses')\" label=\"Edit\" ng-click=\"go.edit('addresses')\" title=\"Edit your address\" data-test=\"edit-addresses\"></super-button><super-button ng-if=\"vm.editMode.addresses && !vm.editMode.all\" label=\"Cancel\" ng-click=\"go.cancel()\" data-test=\"cancel-addresses\"></super-button><super-button ng-if=\"vm.editMode.addresses && !vm.editMode.all\" pri label=\"Save\" type=\"submit\" ss-pending=\"vm.saving\" data-test=\"save-addresses\"></super-button></div><div class=\"record address-record\"><super-address-list addresses=\"vm.emp._addresses\" edit-mode=\"vm.editMode.addresses\" org=\"vm.org\" permissions=\"vm.permitted.addresses\"></super-address-list></div></section><section class=\"emails\" aria-labelledby=\"emails-heading\" tabindex=\"0\" ng-if=\"vm.permitted.organizationEmails.view || vm.permitted.personalEmails.view\" data-test=\"save-emails\"><div class=\"control-panel\" ng-if=\"go.canEdit('emails')\"><super-button ng-if=\"!vm.editMode.emails\" ng-disabled=\"go.isEditDisabled('emails')\" label=\"Edit\" ng-click=\"go.edit('emails')\" title=\"Edit your emails\" data-test=\"edit-emails\"></super-button><super-button ng-if=\"vm.editMode.emails && !vm.editMode.all\" label=\"Cancel\" ng-click=\"go.cancel()\" data-test=\"cancel-emails\"></super-button><super-button ng-if=\"vm.editMode.emails && !vm.editMode.all\" pri label=\"Save\" type=\"submit\" ss-pending=\"vm.saving\" data-test=\"save-emails\"></super-button></div><div class=\"record contact-record\"><h3>Emails</h3><div class=\"gd-row\" ss-hide-when-empty><ul class=\"record-list\" ss-hide-when-empty><li class=\"gd-50p\" ss-hide-when-empty><super-input-text input-id=\"work-email\" permissions=\"vm.permitted.organizationEmails\" model=\"vm.emp.workEmail._emailAddress\" label=\"Work Email\" data-test=\"email-work\" edit-mode=\"vm.editMode.emails\" aria-label=\"work email\" ss-validate=\"validator.email(vm.emp.workEmail._emailAddress, 'Work Email')\"></super-input-text></li><li class=\"gd-50p\" ss-hide-when-empty><super-input-text input-id=\"personal-email\" permissions=\"vm.permitted.personalEmails\" model=\"vm.emp.personalEmail._emailAddress\" label=\"Personal Email\" data-test=\"email-personal\" edit-mode=\"vm.editMode.emails\" aria-label=\"personal email\" ss-validate=\"validator.email(vm.emp.personalEmail._emailAddress, 'Personal Email')\"></super-input-text></li></ul></div></div></section><section class=\"phones\" aria-labelledby=\"phones-heading\" tabindex=\"0\" ng-if=\"vm.permitted.organizationPhoneNumbers.view || vm.permitted.personalPhoneNumbers.view\" data-test=\"save-phones\"><div class=\"control-panel\" ng-if=\"go.canEdit('phones')\"><super-button ng-if=\"!vm.editMode.phones\" ng-disabled=\"go.isEditDisabled('phones')\" label=\"Edit\" ng-click=\"go.edit('phones')\" title=\"Edit your phones\" data-test=\"edit-phones\"></super-button><super-button ng-if=\"vm.editMode.phones && !vm.editMode.all\" label=\"Cancel\" ng-click=\"go.cancel()\" data-test=\"cancel-phones\"></super-button><super-button ng-if=\"vm.editMode.phones && !vm.editMode.all\" pri label=\"Save\" type=\"submit\" ss-pending=\"vm.saving\" data-test=\"save-phones\"></super-button></div><div class=\"record\"><super-phone-list phones=\"vm.emp._phoneNumbers\" edit-mode=\"vm.editMode.phones\" permissions=\"vm.permitted\"></super-phone-list></div></section></form></div>`);c.put('components/super-personnel-documents/personnel-documents.html',`<div class=\"super-personnel-documents\"><super-employee-documents employee-id=\"vm.employeeId\" category-id=\"0\"></super-employee-documents></div>`);c.put('components/super-phone/phone.html',`<div class=\"super-phone\" data-test=\"phone\"><super-grid-cell><super-select-list model=\"phone._usageType\" enum-type=\"usageType\" ss-validate=\"validator.required(phone._usageType, 'Usage Type')\" edit-mode=\"phone.isEditing\" include-default-option=\"true\" default-option-value=\"-1\"><super-select-list-item ng-repeat=\"option in vm.usageTypes | filter: go.filterUsageTypes\" value=\"option.value\" label=\"option.name\"></super-select-list-item></super-select-list></super-grid-cell><super-grid-cell><super-input-text data-cy=\"edit-number\" placeholder=\"Phone Number\" model=\"phone._number\" ss-validate=\"validator.phoneNumber(phone._number, 'Phone Number')\" edit-mode=\"phone.isEditing\" mask=\"phone\"></super-input-text></super-grid-cell><super-grid-cell><super-input-text data-cy=\"edit-ext\" placeholder=\"Extension\" model=\"phone._extension\" edit-mode=\"phone.isEditing\"></super-input-text></super-grid-cell><super-grid-cell><span ss-icon-before=\"check\" ng-if=\"phone._canReceiveTexts && !phone.isEditing\"></span><super-input-checkbox data-cy=\"edit-can-receive-texts\" placeholder=\"Can Receive Texts\" model=\"phone._canReceiveTexts\" edit-mode=\"phone.isEditing\" ng-if=\"phone.isEditing\"></super-input-checkbox></super-grid-cell><super-grid-cell><span ss-icon-before=\"check\" ng-if=\"phone._isPrimary && !phone.isEditing\"></span><super-input-checkbox data-cy=\"edit-primary\" placeholder=\"Primary\" model=\"phone._isPrimary\" edit-mode=\"phone.isEditing\" ng-if=\"phone.isEditing\"></super-input-checkbox></super-grid-cell><super-grid-cell class=\"actions\"><button type=\"button\" class=\"edit\" ng-click=\"go.edit()\" data-cy=\"edit\" ng-if=\"go.canEditUsageType(phone._usageType) && editMode && !phone.isEditing\">Edit</button> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" title=\"Cancel\" ng-click=\"go.cancel()\" data-cy=\"cancel\" ng-if=\"phone.isEditing\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" title=\"Delete\" ng-click=\"go.remove()\" data-cy=\"delete\" ng-if=\"phone.id && phone.isEditing\"></button></super-grid-cell></div>`);c.put('components/super-phone-list/phone-list.html',`<div class=\"super-phone-list\" data-test=\"phone-list\"><div><h3 id=\"phones-heading\">Phones</h3><super-button smp ng-if=\"vm.editMode\" label=\"Add New Phone\" ng-click=\"go.add()\" ss-icon=\"plus-circle\" data-test=\"phone-add\"></super-button></div><super-grid ss-pending=\"vm.loading\"><grid-header><super-grid-column>Usage Type</super-grid-column><super-grid-column width=\"35%\">Phone Number</super-grid-column><super-grid-column width=\"80px\">Extension</super-grid-column><super-grid-column>Can Receive Texts</super-grid-column><super-grid-column width=\"80px\">Primary</super-grid-column><super-grid-column width=\"80px\">Actions</super-grid-column></grid-header><grid-rows><super-grid-row ng-repeat=\"phone in phones\"><super-phone permissions=\"permissions\" phone=\"phone\" on-remove=\"go.onRemove($index)\" on-check=\"go.onCheck($index)\" edit-mode=\"vm.editMode\"></super-phone></super-grid-row><super-grid-row ng-if=\"!phones.length\"><super-grid-cell><super-input-text model=\"'No phones were found.'\" edit-mode=\"false\"></super-input-text></super-grid-cell></super-grid-row></grid-rows></super-grid></div>`);c.put('components/super-status-group/status-group.html',`<div class=\"super-status-group employee-status-group\" ss-validate=\"go.validate()\" data-test=\"statues\"><h4 ng-if=\"vm.currentStatus || vm.pastStatuses.length || vm.futureStatuses.length || editMode\" data-test=\"current-displayed-status\">Status <span ng-if=\"hasCurrentStatus && vm.currentStatus && vm.currentStatus.name\">- <span ng-bind=\"vm.currentStatus.name\"></span></span></h4><super-button smp label=\"Add Status Change\" ng-click=\"go.addStatus()\" ss-icon=\"plus-circle\" ng-if=\"vm.editMode\" class=\"add-status\" data-test=\"add-status\"></super-button><div class=\"gd-row new-status-group\" ng-if=\"vm.newStatuses.length\"><super-status-item org=\"org\" class=\"status-new\" data-test=\"new-status\" label=\"New Status\" edit-mode=\"vm.editMode\" ng-repeat=\"status in vm.newStatuses\" on-remove=\"go.removeStatus(status, vm.newStatuses)\" status=\"status\" editable=\"true\" type=\"new\"></super-status-item></div><div class=\"gd-row future-status-group\" ng-if=\"vm.futureStatuses.length\"><super-status-item org=\"org\" class=\"status-future\" data-test=\"future-status\" label=\"Future Status\" edit-mode=\"vm.editMode\" ng-repeat=\"status in vm.futureStatuses\" on-remove=\"go.removeStatus(status, vm.futureStatuses)\" status=\"status\" type=\"future\"></super-status-item></div><div class=\"gd-row current-status-group\" ng-if=\"vm.hasCurrentStatus\"><super-status-item org=\"org\" class=\"status-current\" data-test=\"current-status\" label=\"Current Status\" edit-mode=\"vm.editMode\" status=\"vm.currentStatus\" on-remove=\"go.removeStatus(vm.currentStatus, vm.newStatuses)\" type=\"current\"></super-status-item></div><div class=\"gd-row current-status-group\" ng-if=\"!vm.hasCurrentStatus && !vm.editMode\"><super-status-item org=\"org\" class=\"status-no-current\" data-test=\"no-status\" label=\"Current Status\" edit-mode=\"vm.editMode\" status=\"vm.currentStatus\" type=\"none\"></super-status-item></div><div class=\"gd-row past-status-group\" ng-if=\"vm.pastStatuses.length\"><div class=\"past-status-toggle\" ss-toggle-target ng-if=\"!vm.editMode\"><super-status-item org=\"org\" class=\"status-past\" data-test=\"past-status\" label=\"Past Status\" edit-mode=\"vm.editMode\" ng-repeat=\"status in vm.pastStatuses\" on-remove=\"go.removeStatus(status, vm.pastStatuses)\" status=\"status\" type=\"past\"></super-status-item></div><button ng-if=\"!vm.editMode\" class=\"smp past-status-toggle-control\" ss-toggle=\"past-status-toggle\" data-test=\"past-status-toggle\"><span>Past Status</span></button><super-status-item org=\"org\" ng-if=\"vm.editMode\" class=\"status-past\" data-test=\"past-status\" label=\"Past Status\" edit-mode=\"vm.editMode\" ng-repeat=\"status in vm.pastStatuses\" on-remove=\"go.removeStatus(status, vm.pastStatuses)\" status=\"status\" type=\"past\"></super-status-item></div></div>`);c.put('components/super-status-item/status-item.html',`<div class=\"super-status-item {{vm.classes}}\" data-test-id=\"{{ status.id }}\" data-test-type=\"status\"><label class=\"status-label\" ng-bind=\"label\" ng-if=\"type === 'none'\" data-test=\"status-label\"></label><div ng-if=\"!vm.editable\"><div class=\"view-status\"><div ng-if=\"type !== 'none' && type !== 'new'\"><div ng-bind=\"vm.tagText\" class=\"ss-tag\" data-test=\"status-tag\" ng-class=\"{'ss-tag-positive': type === 'current', 'ss-tag-primary': type === 'future'}\"></div></div><span class=\"status-name none\" ng-if=\"status._statusId === enumEmployeeStatus.noStatus\" data-test=\"status-name\">None</span> <span class=\"status-name\" ng-if=\"status._statusId !== enumEmployeeStatus.noStatus\" data-test=\"status-name\">{{status._statusId | enumByValue:'employeeStatus'}}</span> <span ng-if=\"type === 'none' && vm.startDateTxt\">as of</span> <span ng-if=\"type === 'current'\">from</span> <span ng-if=\"type === 'future'\">starting on</span> <span data-test=\"status-start-date\">{{ vm.startDateTxt | date: 'MM/dd/yyyy'}}</span> <span ng-if=\"type !== 'none' && vm.endDateTxt && vm.endDateTxt.length\" data-test=\"status-end-date\">&ndash; {{ vm.endDateTxt | date: 'MM/dd/yyyy'}}</span><super-button ng-if=\"editMode\" smp class=\"edit\" label=\"Edit / Make Correction\" ng-click=\"go.open()\" data-test=\"status-edit\"></super-button><super-button ng-if=\"editMode && go.showRemove()\" smp class=\"remove\" label=\"Delete\" ng-click=\"go.remove()\" ss-icon=\"times\" data-test=\"status-remove\"></super-button></div><div class=\"view-reason\" ng-if=\"vm.currentChangeReason\" data-test=\"status-reason\"><span>Reason:&nbsp;</span><span ng-bind=\"vm.currentChangeReason\"></span></div></div><div ng-if=\"vm.editable\"><super-select-list class=\"status\" model=\"status._statusId\" ss-validate=\"validator.required(status._statusId, 'status type')\" data-test=\"status-type\"><super-select-list-item value=\"stat.value\" label=\"stat.name\" ng-repeat=\"stat in enumEmployeeStatus.getEnums()\" ng-if=\"stat.value !== enumEmployeeStatus.noStatus\"></super-select-list-item></super-select-list><span class=\"edit-from\">from</span> <span class=\"edit-from-date\"><super-input-datepicker model=\"vm.startDateTxt\" ss-validate=\"go.validateStart()\" data-test=\"status-start-date\"></super-input-datepicker></span><span class=\"edit-to\">to</span> <span class=\"edit-to-date\"><super-input-datepicker model=\"vm.endDateTxt\" ss-validate=\"go.validateEnd()\" data-test=\"status-end-date\"></super-input-datepicker></span><super-select-list class=\"reason\" ng-if=\"status._statusId >= 0 && status._statusId !== 1\" model=\"status._statusChangeReasonId\" data-test=\"status-reason\"><super-select-list-item value=\"r.value\" label=\"r.name\" ng-repeat=\"r in vm.changeReasons\"></super-select-list-item></super-select-list><super-button smp class=\"cancel\" label=\"Cancel\" ng-click=\"go.cancel()\" ss-icon=\"times\" data-test=\"status-cancel\"></super-button></div></div>`);c.put('components/super-supervisor/supervisor.html',`<div class=\"super-supervisor\" data-test-id=\"{{supervisor.id}}\" data-test-type=\"supervisor\"><ul class=\"supervisor-record record-list\"><li class=\"name\" data-test=\"supervisor-name\"><div ng-if=\"!vm.isNewSupervisor || !editMode\">{{ supervisor._firstName }} {{ supervisor._lastName }}</div><super-employee-search ng-if=\"vm.isNewSupervisor && editMode\" model=\"vm.supervisorHolder\" limit=\"1\" use-pill=\"false\" remove-by-id=\"{{employee.id}}\" ss-validate=\"go.validateNewSupervisor(vm.supervisorHolder)\"></super-employee-search></li><li class=\"separator\">{{ (vm.isNewSupervisor || vm.endDateTxt === null) ? 'as of' : 'from' }}</li><li><div class=\"date-container\" ss-validate=\"go.validateDates(supervisor._from, supervisor._to)\"><span ng-if=\"((!supervisor.hasForeverPast && !vm.isNewSupervisor) || viewOnly)\" data-test=\"supervisor-start-date\">{{ vm.startDateTxt | date: 'MM/dd/yyyy'}}</span><super-input-datepicker ng-if=\"((supervisor.hasForeverPast || vm.isNewSupervisor) && !viewOnly)\" permissions=\"vm.permitted.supervisors\" model=\"vm.startDateTxt\" placeholder=\"Start Date\" ss-validate=\"validator.required(vm.startDateTxt, 'Start Date')\" options=\"vm.dtPickerOpt\" edit-mode=\"editMode\" data-test=\"supervisor-start-date\"></super-input-datepicker><span class=\"separator\" ng-show=\"(editMode || vm.endDateTxt !== null)\">{{ (vm.isNewSupervisor) ? ' ' : 'till' }}</span> <span ng-if=\"viewOnly\" data-test=\"supervisor-start-date\">{{ vm.endDateTxt | date: 'MM/dd/yyyy'}}</span><super-input-datepicker ng-if=\"!viewOnly && (editMode || vm.endDateTxt !== null)\" permissions=\"vm.permitted.supervisors\" model=\"vm.endDateTxt\" placeholder=\"End Date\" edit-mode=\"editMode\" data-test=\"supervisor-end-date\"></super-input-datepicker></div></li></ul><div class=\"action\"><super-button smp label=\"Remove\" class=\"remove-supervisor\" data-test=\"supervisor-remove\" ng-click=\"go.removeSupervisor(supervisor)\" ss-icon=\"times\" ng-if=\"!viewOnly && editMode && !supervisor.isFuture\"></super-button><super-button smp label=\"Remove\" class=\"remove-supervisor\" data-test=\"supervisor-remove\" is-disabled=\"true\" ss-icon=\"times\" ng-if=\"!viewOnly && editMode && supervisor.isFuture\" title=\"Please contact customer support to remove future dated supervisors\"></super-button></div></div>`);c.put('components/super-supervisors/supervisors.html',`<div class=\"super-supervisors\" data-test=\"supervisors\"><div ng-if=\"vm.canView\"><h3 class=\"header-supervisor\">Supervisor</h3><super-button smp class=\"add-supervisor\" label=\"Add New Supervisor\" ng-if=\"vm.editMode && vm.canEdit\" ng-click=\"go.addNewSupervisor()\" ss-icon=\"plus-circle\" is-disabled=\"vm.newSupervisor !== null && vm.currentSupervisor !== null\" data-test=\"add-supervisor\"></super-button><super-supervisor class=\"new-supervisor\" ng-if=\"vm.newSupervisor !== null\" title=\"New Supervisor\" supervisor=\"vm.newSupervisor\" employee=\"employee\" edit-mode=\"vm.editMode && vm.canEdit\" org=\"vm.org\" data-test=\"new-supervisor\"></super-supervisor><div class=\"no-supervisor\" ng-if=\"vm.currentSupervisor == null\" data-test=\"no-current-supervisor\">Currently no supervisor assigned.</div><div class=\"future-supervisors\" ng-if=\"vm.futureSupervisors.length\" data-test=\"future-supervisors\"><h4>Future Supervisor(s)</h4><div ng-repeat=\"supervisor in vm.futureSupervisors\"><super-supervisor class=\"future-supervisor\" supervisor=\"supervisor\" employee=\"employee\" edit-mode=\"vm.editMode && vm.canEdit\" org=\"vm.org\" data-test=\"future-supervisor\"></super-supervisor></div></div><div ng-if=\"vm.currentSupervisor != null\"><h4>Current Supervisor</h4><super-supervisor class=\"current-supervisor\" title=\"Current Supervisor\" supervisor=\"vm.currentSupervisor\" employee=\"employee\" edit-mode=\"vm.editMode && vm.canEdit\" org=\"vm.org\" data-test=\"current-supervisor\"></super-supervisor></div><div ng-if=\"vm.pastSupervisors.length\"><button type=\"button\" class=\"smp show-hide-details {{ (vm.expanded) ? 'fa-angle-down-after' : 'fa-angle-up-after' }} ss-toggle-closed\" ss-toggle=\"past-supervisors\" ng-click=\"go.toggle()\" ss-toggle-start-expanded=\"{{vm.expanded}}\" data-test=\"past-supervisors-toggle\"><span>{{ (vm.expanded) ? 'Hide' : 'View' }} Supervisor history</span></button><div class=\"past-supervisors\" data-test=\"past-supervisors\"><h4>Past Supervisor(s)</h4><div ng-repeat=\"supervisor in vm.pastSupervisors\"><super-supervisor view-only supervisor=\"supervisor\" employee=\"employee\" edit-mode=\"vm.editMode && vm.canEdit\" org=\"vm.org\" data-test=\"past-supervisor\"></super-supervisor></div></div></div></div></div>`);c.put('components/super-two-column-list/two-column-list.html',`<div class=\"super-two-column-list gd-row\"><div class=\"gd-25p\"><h4><label class=\"label\" ng-bind=\"vm.label\"></label></h4><h4><label class=\"label\" ng-if=\"!vm.hasLabel\">&nbsp;</label></h4></div><div class=\"gd-75p\" ng-transclude></div></div>`);}])}())","export class Component {\r\n\tconstructor(props, cmptName, config = {}) {\r\n\r\n\t\tthis.restrict = 'E';\r\n\t\tthis.replace = true;\r\n\t\tthis.scope = props;\r\n\t\tthis.templateUrl = `components/super-${cmptName}/${cmptName}.html`;\r\n\r\n\t\tObject.assign(this, config);\r\n\t}\r\n}\r\n"],"names":["ssEmployeeModelHlp","ssEnum","ssArrayHlp","ssJsonApiHlp","ssValidationHlp","ssDateHlp","ssDateByOrgHlp","ssMultiInitiativeFeatureDetectorCCSvc","loadEmails","emp","getEmail","emp2","type","emails","_emails","email","findWhere","usageType","byName","angular","extend","base","_emailType","defaults","added","workEmail","personalEmail","setFieldDefaultValues","loadAddress","_addresses","length","i","cleanEmployeeForSave","_phoneNumbers","_emergencyContacts","clearEmpty","arr","test","testFn","e","trim","clean","filter","forEach","push","nextDay","serverFromDate","org","date","utcIsoToRelativeMoment","clone","add","getLatestAddress","addresses","sorted","sort","a","b","Date","_to","detectOrgPersonSyncIssues","employee","hasPlatformSyncIssue","isGlobalFcSharedEmployeeEnabled","then","isEnabled","_orgPersonCreated","_orgPersonUpdated","_canonicalEmployeeEventsOutOfSync","platformSyncMessage","latestAddress","_from","toISOString","foreverPastString","foreverFutureString","address","fromDate","toDate","startDateTxt","isForeverPast","format","endDateTxt","isForeverFuture","hasAddressInformation","_street1","_city","_state","_zip","string","required","isHRMSEnabled","maxLength","phone","ssn","zip","id","name","contacts","_isPrimary","primaryEmergencyContact","find","c","secondaryEmergencyContact","ssSleepHlp","$q","$timeout","timeInMilliseconds","deferred","defer","resolve","promise","module","t","run","put","props","cmptName","config","restrict","replace","scope","templateUrl","assign","directive","AddressList","$scope","moment","ssAsync","processAddresses","home","x","_addressType","addressType","future","isInFuture","obj","fromProp","toProp","current","isCurrent","past","isInPast","vm","processDates","futureDtPickerOpt","minDate","hasNoValidAddresses","currentDtPickerOpt","$watchGroup","nv","ov","some","val","splice","watchers","states","getEnums","validator","$watch","editMode","permissions","edit","startOfDayRelativeTo","foreverPast","go","newAddress","index","indexOf","expanded","Component","Assignment","ssDepartmentSvc","ssLocationSvc","ssListSvc","ssJobTypeSvc","ssJobTypesApi","ssModalSvc","ssSaveInterrupterSvc","ssToastHlp","load","newMode","mode","editing","mapName","position","_name","positionTypes","dateOptions","assignment","_details","_fromDateUtc","featureFlags","register","getDateRangeAndTag","isNew","isFuture","isPast","tagText","formattedStartDate","_startDate","endDate","_endDate","dateRange","setAllDetailOptions","setDetailOptions","detail","startDateOptions","endDateOptions","maxDate","endOfDayRelativeTo","resetErrors","hasError","d","$emit","getAll","localeCompare","field","details","slice","first","last","isBefore","_toDateUtc","year","isAfter","_jobType","startDate","error","String","newDetail","cancel","showDestructive","resolveAll","getByExternalId","employmentGroups","_startDateUtc","foreverFuture","_endDateUtc","jobType","jobTypes","jt","get","res","catch","AssignmentDetails","$element","ssJobTypeHlp","ssEmployeeAssignmentHlp","enumPayRateFrequency","ssFlagCCSvc","collapsed","loadLanesAndSteps","paySchedule","getPaySchedule","indexedPL","_payLanes","map","v","idx","steps","paySteps","s","ix","jobTypeDetails","getJobTypeDetail","_payLane","syncLanesAndSteps","laneIdx","oldLaneIdx","_payStep","payLane","validPs","isValidPS","_stepNames","updatePayAndSalary","jobTypeDetailValues","jobTypeValuesForAssignment","payScheduleIsValid","jobTypeDetailValuesAreValid","_jobTypeValuesForAssignmentAreValid","foundPayRate","getPayRate","currentDetails","validPayRate","_payRate","payRateFrequency","_payRateFrequency","calculatedSalary","calculateAnnualSalary","_hoursPerDay","_workDaysPerYear","payPerPeriod","calculatePayPerPeriod","_payPeriodsPerYear","annualSalary","getDisplayRate","payRateFrequencyString","getPayRateFrequencyString","payRateOptions","hourly","salaryType","jobTypeDetailFields","prop","addClass","removeClass","ready","checkState","enabled","$$resetChangesDetected","AssignmentList","ssAssignmentApi","getDetails","_assignments","getAssignment","$permitted","createPositionBuckets","primaryPosition","positions","p","futurePrimaryPositions","pastPositions","otherPositions","futureOtherPositions","pastOtherPositions","makePosition","isPrimary","create","delete","view","redacted","raw","startOf","loading","primaryPositions","_createdUtc","latestPrimaryPosition","newPrimaryPosition","editingId","newPosition","isUpdating","findIndex","$revert","list","$on","evt","stopPropagation","newEditMode","assignments","primary","lastIndex","subtract","Credential","$window","ssFilenameHlp","$stateParams","ssCredentialBusinessEngineSvc","ssCredentialDataAccessSvc","ssCredentialViewModelFactorySvc","setupCredentialForProcessing","handler","isProcessing","getEmployeeCredentialById","cred","_employee","credentialFromServer","currentlyEditing","credential","credentialBeingEdited","credentialVm","status","getCredentialStatus","credentialConstants","renew","isCloning","makeActive","$remove","deletedCredential","deleteCredential","credToSave","files","saveCredential","file","isDownloading","downloadFile","fileId","employeeId","success","open","_string","finally","isExpiring","isExpired","_subjects","join","_expirationDay","_issuedReason","CREDENTIAL_RENEWED","getIcon","getExtension","value","ACTIVE","NOT_ACTIVE","_stateStartedDay","_verifiedDay","IN_PROGRESS","perms","$root","isPermitted","employeeCredentials","softDelete","deletedCredentialType","_credential","deletedUtc","deletedIssuer","issuer","CredentialAddEdit","$rootScope","ssObjectHlp","setDisableCredentialTypesBySelection","isCustom","currentlyEnabledCredentialTypes","parseInt","reset","arguments","arg","resetByIssuer","credentialId","state","updatedCredentialState","credentialData","model","updatedCredentialViewModelState","subjects","registerSaveIntIfDirtyOrNew","checkIfCredIsDirty","$broadcast","parentIsDirty","originalCopy","credentialTypeId","JSON","stringify","_subjectIds","_credentialNumber","newFileAdded","resetByCredentials","selectedSubjects","credentialNumber","data","deepFreeze","deepCopy","loggedInUserKey","_credentialId","credentialTypes","stateIssuers","utils","findInParentScope","customIssuers","deletedIssuerLockdown","deletedCredentialLockdown","changeLockdown","currentIssuer","getIssuerById","issuersToLoad","loadingCredentialTypes","getCredentialTypes","_context2","message","isCustomCredentialType","isCredentialTypeSelected","newCredentialTypeId","_address","defaultIssuer","_stateId","foundIssuer","loadingSubjects","loadingCredentials","getCredentialsByIssuer","DRIVER_LICENSE","credentials","newCredentialState","getSubjectsByIssuer","newCredentialVm","$applyAsync","includes","subject","_context","$watchCollection","verifier","isVerifierValid","Object","is","verify","showStandard","clear","cancelCredential","num","dlLimit","limit","CredentialFiles","validateFile","errorMessages","size","fileForAssociation","filename","isDeleted","createdUtc","ACCEPTED_FILE_TYPES","event","target","validation","isUploading","uploadFile","uploadedFile","CredentialStatus","isVerified","empCred","ret","glean","_","resetByCredentialStatus","stateStartedDay","expirationDay","isGrantedForLife","isRenewal","CREDENTIAL_NEW","compareOriginalVal","_isGrantedForLife","isEditing","_id","allCredentialStatuses","viewModelDates","issueReason","CREDENTIAL_INPROGRESS","getDateOptionsForIssueDate","getDateOptionsForExpirationDate","newValue","oldValue","issuedReasonByCredentialStatus","credentialStatus","expirationDtOptions","stateStartedDtOptions","newCredentialStatus","oldCredentialStatus","isInProgress","newCredentialType","oldCredentialType","newCredentialId","oldCredentialId","newIssuer","oldIssuer","CredentialsCntr","ssActiveUserSvc","ssCredentialFactorySvc","ssOrganizationSvc","showModalIfAlreadyHaveRecentCredential","subjectString","exist","info","getIdentityByType","getActiveOrg","getIssuersByCredentialType","CERTIFICATE_LICENSE","STATE_NATIONAL","CLEARANCES","certIssuers","clearIssuers","stateDmvIssuers","getIssuers","DISTRICT_CUSTOM","getCredentialsByEmployee","loadingCredentialList","credentialShellObject","newCredential","savingCredential","addEmployeeCredential","filesToUpload","associateFile","all","fileUploadPromises","CredentialsList","recentCredentials","isPatched","credentialsExist","ctrl","filterCredentialList","credentialsList","recent","archive","archiveExpanded","listItem","filesToDelete","deleteFile","filesToDeletePromises","patchEmployeeCredential","updatedCredential","reject","DocumentEditor","$state","$filter","ssEmployeeApi","ssFormInstancesApi","processFileAttachments","form","filesOnInstance","formFieldValues","_steps","regex","stp","_formFieldValues","_stepAction","stepAction","formCompleted","parsedValue","parse","formFieldValue","keys","Array","isArray","key","every","item","concat","processFileDisplay","ext","icon","personnelCategory","enums","medicalCategory","_category","_subCategory","subcategories","_originalFileDateUtc","fileDate","isFile","_deniedInfo","comments","denier","split","_formInstanceId","loadingFiles","fc_enable_employee_module_save_interrupter","saving","extension","toLowerCase","$save","isEdit","sleep","getFileUrlById","route","substring","lastIndexOf","path","emergencyContactsForms","EmergencyContact","ssEventSvc","ssValidateHlp","ssMutatorDataHlp","enumRelationshipTypes","updateEmergencyContacts","relationshipType","primaryPhone","alternatePhone","setupEmployee","loadEmergencyContacts","formatPhones","primaryPhoneFormatted","formatPhone","_primaryPhone","alternatePhoneFormatted","_alternatePhone","preSave","optionalFieldGroupValidate","fieldList","errorMessage","valid","q","hookOrDefault","f","hooks","onBeforeSave","onAfterSave","onBeforeCancel","onAfterCancel","emit","permitted","secondary","$refresh","resetValidation","contact","_contactName","_relationshipType","match","element","document","getElementsByClassName","EmploymentInfo","ssPositionsApi","loadAndProcessEmployeeData","getEmployeeData","processEmployeeData","fields","showTenureDate","getForEmployee","Promise","allRequests","positionData","assignmentDetailsRequests","assignmentsData","parentPosition","pos","_positionId","_retirementSystem","currentRs","retirementSystems","system","hireDateTxt","_hireDate","seniorityDateTxt","_seniorityDate","tenureDateTxt","_tenureDate","setSaveInterruptor","_supervisors","_statusHistory","anyFieldIsEditable","actions","hireDate","seniorityDate","tenureDate","retirementSystem","supervisor","statusHistory","anyAssignmentIsEditable","reduce","acc","cur","startInEditMode","rs","err","$$applyMutators","assignmentDetails","opOrder","loaded","InputSsn","$attrs","enumPropertyAction","cmpt","showValue","editModeInferred","notVisible","remove","getSsn","MedicalDocuments","PersonalInfo","PersonalInfoNew","ssOptionalFieldGroupHlp","ssPermissionsSvc","birthDateTxt","_birthDateUtc","checkEditability","updateEmail","emailType","_emailAddress","canEdit","section","isDataIntegrationsEnabled","title","firstName","middleName","lastName","suffix","stateEducatorId","aliasFirstName","aliasMiddleName","aliasLastName","birthDateUtc","age","externalId","maritalStatus","gender","ethnicity","race","personalEmails","organizationEmails","personalPhoneNumbers","organizationPhoneNumbers","sections","resetEditMode","setToTrue","salutation","fieldName","personal","action","isPermittedAction","on","$$forceChangedState","loadEmployee","phones","upsertOrgPerson","propertyAction","validate","getExternalIdLabel","_sSN","disabled","PersonnelDocuments","Phone","phoneTypes","checkPhone","onCheck","onRemove","canEditUsageType","phoneUsageType","byValue","PhoneList","loadIsEditing","StatusGroup","enumEmployeeStatus","dateSort","aFrom","bFrom","getLatestStatus","statuses","newStatuses","futureStatuses","reverse","currentStatus","pastStatuses","hasCurrentStatus","noStatus","to","latestStatus","from","todaysStartRelativeTo","newStatusObj","removeIdx","removeVmIdx","stats","errorMsg","stat","StatusItem","statusId","numeric","min","msgs","editable","changeReasons","reason","r","reasonId","currentChangeReason","overlap","_statusId","Supervisor","minAllowedDate","fullName","_firstName","_lastName","_employeeId","supervisorHolder","sup","supervisors","currentSupervisor","sDate","eDate","isValid","elem","attrs","viewOnly","Supervisors","getLatestSupervisor","sups","sortedSupervisors","newSupervisorObj","newSupervisor","futureSupervisors","pastSupervisors","_latestSupervisor","_newSupervisor","TwoColumnList","label","factory"],"mappings":"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"}