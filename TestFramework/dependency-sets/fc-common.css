.super-single-filter-list .main-label {
  position: relative;
}
.super-single-filter-list .main-label.light {
  font-weight: 300;
}
.super-single-filter-list .main-label.heavy {
  font-weight: 600;
}
.super-single-filter-list .select-menu {
  background-color: #fff;
  -moz-box-shadow: 1px 2px 4px 0px rgba(0,0,0,0.16);
  -webkit-box-shadow: 1px 2px 4px 0px rgba(0,0,0,0.16);
  box-shadow: 1px 2px 4px 0px rgba(0,0,0,0.16);
  display: none;
  position: absolute;
  z-index: 1000;
}
.super-single-filter-list .select-menu.ss-menu-open {
  display: block;
  height: auto;
}
.super-single-filter-list .select-menu {
  border: 1px solid #c0c8cf;
  border-radius: 2px;
  top: calc(100% + 1px);
  left: 0;
  text-align: left;
  min-width: 100%;
  max-width: 450px;
}
.super-single-filter-list .select-menu.ss-menu-vp-right {
  left: auto;
  right: 0;
}
.super-single-filter-list .select-menu.ss-menu-vp-bottom {
  top: auto;
  bottom: 0;
}
.super-single-filter-list .select-menu .select-menu-list {
  overflow-x: hidden;
  overflow-y: auto;
  max-height: 200px;
  padding: 0;
}
.super-single-filter-list .select-menu .select-menu-list-item {
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  line-height: 1.4;
  padding: 6px 12px;
  width: 100%;
}
.super-single-filter-list .select-menu .select-menu-list-item:hover,
.super-single-filter-list .select-menu .select-menu-list-item:focus {
  cursor: pointer;
  background-color: #f1f3f5;
}
.super-single-filter-list .select-menu .select-menu-list-item.disabled:not(.heading) {
  color: #c0c8cf;
}
.super-single-filter-list .select-menu .select-menu-list-item.disabled:not(.heading):hover,
.super-single-filter-list .select-menu .select-menu-list-item.disabled:not(.heading):focus {
  background-color: #fff;
  cursor: default;
}
.super-single-filter-list .select-menu .select-menu-list-item:first-child {
  padding-top: 8px;
}
.super-single-filter-list .select-menu .select-menu-list-item:last-child {
  padding-bottom: 8px;
}
.super-single-filter-list .select-menu .select-menu-list-item.heading {
  padding: 4px;
  font-weight: bold;
  cursor: default;
}
.super-single-filter-list .select-menu a {
  text-decoration: none;
}
.super-single-filter-list {
  display: inline-block;
  vertical-align: baseline;
  position: relative;
  width: 100%;
  max-width: 260px;
}
.super-single-filter-list .main-label {
  font-size: 0.87em;
}
.super-single-filter-list .super-button {
  width: 100%;
  text-align: left;
}
.super-single-filter-list .super-button.is-disabled,
.super-single-filter-list .super-button:disabled,
.super-single-filter-list .super-button[disabled="disabled"] {
  opacity: 0.5;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  -webkit-filter: alpha(opacity=50);
  filter: alpha(opacity=50);
  cursor: not-allowed;
}
.super-single-filter-list .super-button.is-disabled *,
.super-single-filter-list .super-button:disabled *,
.super-single-filter-list .super-button[disabled="disabled"] * {
  cursor: not-allowed;
  pointer-events: none;
}
.super-single-filter-list .super-button > label {
  display: block;
  padding-right: 24px;
  white-space: nowrap;
  max-width: 100%;
  overflow-x: hidden;
  -o-text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  width: 100%;
}
.super-single-filter-list .super-button > label[class*="fa-"][class*='-after']:after {
  position: absolute;
  top: 50%;
  right: 8px;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  -moz-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
.super-single-filter-list.filter {
  width: auto;
}
.super-single-filter-list.filter > div {
  display: inline-block;
  vertical-align: baseline;
}
.super-single-filter-list.filter .main-label,
.super-single-filter-list.filter .super-button {
  font-weight: 600;
  vertical-align: middle;
}
.super-single-filter-list.filter .main-label {
  color: #414c56;
}
.super-single-filter-list.filter .super-button > label {
  color: #7e4082;
  padding-right: 20px;
  font-size: 0.87em;
}
.super-single-filter-list .default-option-label {
  border-bottom: 1px solid #d5dbe0;
}
.super-lifeline {
  position: absolute;
  top: -3rem;
  right: 0rem;
}
.super-lifeline::before,
.super-lifeline::after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  border-color: transparent;
  border-style: solid;
}
.super-lifeline::before {
  border-width: 1.5em;
  border-right-color: #ccc;
  border-top-color: #ccc;
}
.super-lifeline::after {
  border-radius: 0.4em;
  border-width: 1.35em;
  border-right-color: #0c0;
  border-top-color: #0c0;
}
.super-release-notes {
  position: relative;
  min-height: 15rem;
  margin-bottom: 3rem;
}
.super-release-notes .release-note {
  line-height: 2.5rem;
}
.super-release-notes .navigation {
  font-size: 1.2rem;
  margin-bottom: 0.33em;
}
.super-release-notes .navigation span {
  font-weight: 600;
}
.super-release-notes .release-note-button.right {
  padding-left: 1rem;
}
.super-release-notes .release-note-button.left {
  padding-right: 1rem;
}
.super-release-notes .learn-more {
  margin-top: 1rem;
  font-size: 1.3rem;
  height: auto;
  line-height: 1.3rem;
  font-weight: 600;
}
.super-release-notes .learn-more a {
  color: #2f353f;
}
.super-single-filter-list .select-menu-filter {
  border-bottom: 1px solid #d5dbe0;
}
.super-single-filter-list .select-menu-filter input[type="text"] {
  border: none;
  -moz-box-shadow: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}
.super-single-filter-list .select-menu-filter input[type="text"]::-webkit-input-placeholder {
  color: #414c56;
}
.super-single-filter-list .select-footer {
  display: none;
  border-top: 1px solid #d5dbe0;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  font-size: 0.866666em;
  height: 0;
  line-height: 28px;
  padding: 0 12px;
  text-align: right;
}
.super-single-filter-list .select-footer .count span {
  margin: 0 3px;
}
.super-single-filter-list .select-footer .footer-ctrl button {
  color: #7e4082;
  margin-left: 16px;
  text-decoration: underline;
}
.super-single-filter-list .select-footer .footer-ctrl button.is-disabled,
.super-single-filter-list .select-footer .footer-ctrl button:disabled,
.super-single-filter-list .select-footer .footer-ctrl button[disabled="disabled"] {
  opacity: 0.5;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  -webkit-filter: alpha(opacity=50);
  filter: alpha(opacity=50);
  cursor: not-allowed;
}
.super-single-filter-list .select-footer .footer-ctrl button.is-disabled *,
.super-single-filter-list .select-footer .footer-ctrl button:disabled *,
.super-single-filter-list .select-footer .footer-ctrl button[disabled="disabled"] * {
  cursor: not-allowed;
  pointer-events: none;
}
.super-single-filter-list .select-menu-control {
  position: relative;
}
.super-single-filter-list .select-menu {
  padding-bottom: 32px;
}
.super-single-filter-list .select-menu-selected {
  -webkit-transform: translate3d(0, 0, 0);
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}
.super-single-filter-list .select-menu-selected ul {
  max-height: 14rem;
  overflow-y: auto;
}
.super-single-filter-list .select-menu-selected li {
  background: #402b56;
  border-radius: 4px;
  color: #fff;
  font-size: 0.7333em;
  line-height: 2;
  font-weight: 600;
  float: left;
  padding: 0 4px 0 8px;
  margin: 2px auto auto 2px;
  max-width: calc(100% - 4px);
  min-width: 64px;
}
.super-single-filter-list .select-menu-selected span {
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  float: left;
  width: calc(100% - (6px + 12px));
}
.super-single-filter-list .select-menu-selected button {
  width: 12px;
  margin-left: 6px;
}
.super-single-filter-list .no-matches {
  font-style: italic;
  text-align: center;
  color: #414c56;
  position: relative;
  padding: 5px 10px;
  z-index: 2;
}
/*# sourceMappingURL=data:application/json;base64, */